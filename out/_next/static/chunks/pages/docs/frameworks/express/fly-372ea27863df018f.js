(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8480],{7086:function(s,n,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/frameworks/express/fly",function(){return e(56)}])},9061:function(s,n,e){"use strict";e.d(n,{N:function(){return a}});var o=e(5893);function a(s){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:"flex",children:[(0,o.jsx)("div",{className:"flex-grow",children:(0,o.jsxs)("h5",{children:[(0,o.jsx)("a",{href:"/docs#frameworks",children:"Frameworks"})," ",s.framework?(0,o.jsxs)("span",{children:["â€º ",(0,o.jsx)("a",{href:s.url,children:s.framework})]}):(0,o.jsx)("span",{})]})}),(0,o.jsx)("div",{className:"flex flex-shrink justify-end gap-2",children:s.icon})]})})}},5404:function(s,n,e){"use strict";e.d(n,{X:function(){return a}});var o=e(5893);function a(s){return(0,o.jsx)("p",{className:"lead mt-1",children:s.lead})}},1370:function(s,n,e){"use strict";e.d(n,{c:function(){return r}});var o=e(5893),a=e(5675),t=e.n(a);function r(s){return(0,o.jsx)("div",{className:"w-full p-7 bg-zinc-100 dark:bg-zinc-800 border border-zinc-200 dark:border-zinc-700 rounded-md",children:(0,o.jsxs)("div",{className:"border border-zinc-300 dark:border-zinc-800 text-zinc-100 text-sm subpixel-antialiased rounded-lg leading-normal overflow-hidden shadow-lg",children:[(0,o.jsx)("div",{className:"p-0 bg-zinc-200 dark:bg-black border-b border-zinc-300 dark:border-zinc-800",children:(0,o.jsxs)("div",{className:"flex py-1 px-2",children:[(0,o.jsxs)("div",{className:"flex items-center space-x-1.5",children:[(0,o.jsx)("span",{className:"h-2 w-2 bg-red-500/70 dark:bg-red-500/30 rounded-full"}),(0,o.jsx)("span",{className:"h-2 w-2 bg-orange-300/70 dark:bg-orange-300/30 rounded-full"}),(0,o.jsx)("span",{className:"h-2 w-2 bg-green-500/70 dark:bg-green-500/30 rounded-full"})]}),(0,o.jsx)("div",{className:"text-right w-full text-zinc-400 text-xs",children:s.www})]})}),(0,o.jsx)("div",{className:"p-0",children:(0,o.jsx)("a",{href:s.url,target:"_blank",rel:"noreferrer",className:"hover:brightness-105",children:(0,o.jsx)(t(),{src:s.url,width:"0",height:"0",alt:"",className:"p-0 m-0 w-full",unoptimized:!0})})})]})})}},7463:function(s,n,e){"use strict";e.d(n,{u:function(){return a}});var o=e(5893);function a(s){return(0,o.jsx)("svg",{fill:"currentColor",role:"img",viewBox:"0 0 24 24",...s,children:(0,o.jsx)("path",{d:"M24 18.588a1.529 1.529 0 01-1.895-.72l-3.45-4.771-.5-.667-4.003 5.444a1.466 1.466 0 01-1.802.708l5.158-6.92-4.798-6.251a1.595 1.595 0 011.9.666l3.576 4.83 3.596-4.81a1.435 1.435 0 011.788-.668L21.708 7.9l-2.522 3.283a.666.666 0 000 .994l4.804 6.412zM.002 11.576l.42-2.075c1.154-4.103 5.858-5.81 9.094-3.27 1.895 1.489 2.368 3.597 2.275 5.973H1.116C.943 16.447 4.005 19.009 7.92 17.7a4.078 4.078 0 002.582-2.876c.207-.666.548-.78 1.174-.588a5.417 5.417 0 01-2.589 3.957 6.272 6.272 0 01-7.306-.933 6.575 6.575 0 01-1.64-3.858c0-.235-.08-.455-.134-.666A88.33 88.33 0 010 11.577zm1.127-.286h9.654c-.06-3.076-2.001-5.258-4.59-5.278-2.882-.04-4.944 2.094-5.071 5.264z"})})}},8297:function(s,n,e){"use strict";e.d(n,{M:function(){return a}});var o=e(5893);function a(s){return(0,o.jsxs)("svg",{fill:"currentColor",viewBox:"0 0 32 32",fillRule:"evenodd",...s,children:[(0,o.jsx)("path",{d:"M16.06 26.56c.038.01.077.017.112.033s.066.042.098.063l.006.006.032.028.055.05.238.222.43.432.442.495.266.337.235.34.186.317.136.292c.07.172.12.354.138.54l.006.103v.1l-.01.154c-.02.206-.066.4-.143.6a1.96 1.96 0 0 1-.2.372 2 2 0 0 1-.22.266 2.01 2.01 0 0 1-.206.182 2.08 2.08 0 0 1-.18.126l-.155.1c-.3.162-.653.253-1 .288l-.16.012-.178.004a3.24 3.24 0 0 1-.367-.022c-.203-.024-.404-.067-.597-.134a2.45 2.45 0 0 1-.477-.222c-.16-.098-.3-.215-.438-.352l-.23-.295c-.063-.1-.118-.205-.162-.314a2.09 2.09 0 0 1-.141-.57l-.012-.184.002-.147a1.65 1.65 0 0 1 .04-.267 2.18 2.18 0 0 1 .088-.284 3.09 3.09 0 0 1 .123-.276l.18-.32.22-.325.375-.474.427-.47.4-.4.172-.16.14-.126a.56.56 0 0 1 .21-.097zM16.244.004l.275.007.122.007.747.06 1.03.144.075.017 1 .246.282.083.32.1.4.146.302.126.47.22.263.133.532.3.163.098.726.524.177.154.5.452.43.456.118.13.503.662.076.12.388.648.1.207.22.482.228.562.076.218.243.877.2 1.185.033.368.03.53.002.077-.01.592-.007.1-.03.233-.167.945-.025.115-.384 1.186-.357.855-.454.9-.814 1.405-.42.633-.507.75-.366.496-.713.945-.5.6-.723.873-.505.585-.785.876-.494.537-1.495 1.546-.783.762-.433.407-.027.025-.033.03-.043.03-.03.014-.085.028-.204-.01-.018-.006-.1-.07-.014-.013-.015-.013-.058-.054-.173-.162-1.434-1.4-.444-.456-1.135-1.208-.27-.293-1.368-1.584-.383-.47-1.21-1.552-.12-.158-.916-1.335-.248-.397-.666-1.12-.2-.347-.575-1.2-.1-.235-.33-.92L6 11.45l-.093-.378-.08-.413-.063-.462-.024-.28-.01-.527.002-.1.014-.284.115-1.15.027-.148.26-1.148.006-.02.043-.128.183-.53.056-.134.297-.65.202-.378.286-.468.285-.416.198-.26.233-.278.255-.28.208-.2.548-.478.4-.332.484-.325.344-.22.73-.382 1.088-.447.922-.267.362-.08.498-.1.337-.05.52-.064.35-.03.704-.038.26-.003h.063l.224.005zm-.6 1.63l-.3.045c-.154.03-.306.07-.455.12a3.48 3.48 0 0 0-.467.199l-.292.168c-.705.448-1.244 1.12-1.64 1.847l-.188.37-.196.454-.215.6-.2.763-.186.98-.133 1.26-.033.804.018.924a13.86 13.86 0 0 0 .337 2.137c.205.886.472 1.758.773 2.616l1.28 3.178 1.888 3.8.05.093V1.633l-.024.002zm2.665.05a9.82 9.82 0 0 1 1.382.39c.64.234 1.257.54 1.823.92.768.516 1.44 1.172 1.96 1.938a7.25 7.25 0 0 1 .759 1.449c.292.75.46 1.547.53 2.348l.033.632-.012.588c-.035.44-.127.872-.25 1.294a10.06 10.06 0 0 1-.358 1.018l-.57 1.217a23.02 23.02 0 0 1-1.56 2.54c-.7 1.005-1.457 1.97-2.247 2.906l-2.582 2.844-.114.117 1.775-3.598.862-2.06.804-2.316.462-1.777a14.25 14.25 0 0 0 .251-1.554l.048-.684.003-.626-.03-.8c-.065-1.074-.23-2.144-.545-3.174l-.228-.656-.208-.488c-.404-.873-.97-1.7-1.733-2.285l-.256-.186z"}),(0,o.jsx)("defs",{children:(0,o.jsxs)("linearGradient",{id:"A",x2:"81.448",gradientUnits:"userSpaceOnUse",x1:"5.74",y1:"0",y2:"32",children:[(0,o.jsx)("stop",{offset:"0",stopColor:"#109cf8"}),(0,o.jsx)("stop",{offset:"1",stopColor:"#935ee9"})]})})]})}},56:function(s,n,e){"use strict";e.r(n),e.d(n,{__N_SSG:function(){return h}});var o=e(5893),a=e(1151),t=e(1490),r=e(1370),l=e(5404),i=e(9061),c=e(8297),p=e(7463);function d(s){let n=Object.assign({h1:"h1",p:"p",h2:"h2",a:"a",pre:"pre",code:"code",strong:"strong"},(0,a.ah)(),s.components),{Note:e}=n;return e||function(s,n){throw Error("Expected "+(n?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}("Note",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.N,{framework:"Express.js",url:"/docs/frameworks/express",icon:(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(p.u,{className:"h-9 w-9 text-[#000000] dark:invert"}),(0,o.jsx)(c.M,{className:"h-9 w-9 text-[#7B3BE2]"})]})}),"\n",(0,o.jsx)(n.h1,{children:"Deploy an Express.js App to Fly.io"}),"\n",(0,o.jsx)(l.X,{lead:"Deploy an Express.js app with an encrypted .env.vault file to Fly.io."}),"\n",(0,o.jsx)(e,{children:(0,o.jsxs)(n.p,{children:["Find a complete ",(0,o.jsx)("a",{href:"https://github.com/dotenv-org/examples/tree/master/express/fly",children:"code example on GitHub"})," for this guide."]})}),"\n",(0,o.jsx)(n.h2,{id:"initial-setup",children:"Initial setup"}),"\n",(0,o.jsxs)(n.p,{children:["Install ",(0,o.jsx)(n.a,{href:"https://github.com/expressjs/express",children:"express"}),"."]}),"\n",(0,o.jsx)(n.pre,{code:"npm install express --save\n",children:(0,o.jsx)(n.code,{children:"npm install express --save\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Create an ",(0,o.jsx)(n.code,{children:"index.js"})," file with the web server code."]}),"\n",(0,o.jsx)(n.pre,{language:"js",code:"const PORT = process.env.PORT || 3000\nconst express = require('express')\nconst app = express()\n\napp.listen(PORT, () => {\n  console.log(`Running on port ${PORT}.`)\n})\n\napp.get('/', function (req, res) {\n  res.send(`Hello ${process.env.HELLO}`)\n})\n",children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3000</span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">express</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;express&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">app</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">express</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">app</span><span style="color: var(--shiki-token-function)">.listen</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">`Running on port </span><span style="color: var(--shiki-token-keyword)">${</span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-token-keyword)">}</span><span style="color: var(--shiki-token-string-expression)">.`</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-color-text)">})</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">app</span><span style="color: var(--shiki-token-function)">.get</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;/&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> (req</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> res) {</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">res</span><span style="color: var(--shiki-token-function)">.send</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">`Hello </span><span style="color: var(--shiki-token-keyword)">${</span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">HELLO</span><span style="color: var(--shiki-token-keyword)">}</span><span style="color: var(--shiki-token-string-expression)">`</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-color-text)">})</span></span>\n<span></span>'}),title:"index.js"}),"\n",(0,o.jsxs)(n.p,{children:["Add a start script to the ",(0,o.jsx)(n.code,{children:"package.json"})," file."]}),"\n",(0,o.jsx)(n.pre,{language:"json",code:'{\n  "scripts": {\n    "start": "node index.js"\n  }\n}\n',children:(0,o.jsx)(n.code,{className:"language-json",children:'<span><span style="color: var(--shiki-color-text)">{</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;scripts&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&quot;start&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;node index.js&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">  }</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span></span>\n<span></span>'}),title:"package.json"}),"\n",(0,o.jsx)(n.p,{children:"Commit that to code and deploy it to Fly."}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"brew install flyctl\nflyctl launch\nflyctl deploy --remote-only --no-cache\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">brew install flyctl</span></span>\n<span><span style="color: var(--shiki-color-text)">flyctl launch</span></span>\n<span><span style="color: var(--shiki-color-text)">flyctl deploy --remote-only --no-cache</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(n.p,{children:["Once deployed, your app will say ",(0,o.jsx)(n.code,{children:"Hello undefined"})," as it doesn't have a way to access the environment variable yet. Let's do that next."]}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/hello-undefined.png",www:"yourapp.fly.dev"}),"\n",(0,o.jsx)(e,{children:(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Fly.io bug:"}),' While writing this guide we ran into the error "failed to fetch an image or build from source: error building: ... node:20.4.0-slim: docker.io/library/node:20.4.0-slim: not found". If you also experience this set ',(0,o.jsx)(n.strong,{children:"NODE_VERSION=18.16.1"})," in your Dockerfile and redeploy."]})}),"\n",(0,o.jsx)(n.h2,{id:"install-dotenv",children:"Install dotenv"}),"\n",(0,o.jsxs)(n.p,{children:["Install ",(0,o.jsx)(n.a,{href:"https://github.com/motdotla/dotenv",children:(0,o.jsx)(n.code,{children:"dotenv"})}),"."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npm install dotenv --save # Requires dotenv >= 16.1.0\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npm install dotenv --save </span><span style="color: var(--shiki-token-comment)"># Requires dotenv &gt;= 16.1.0</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(n.p,{children:["Create a ",(0,o.jsx)(n.code,{children:".env"})," file in the root of your project."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:'# .env\nHELLO="World"\n',children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-token-comment)"># .env</span></span>\n<span><span style="color: var(--shiki-color-text)">HELLO=</span><span style="color: var(--shiki-token-string-expression)">&quot;World&quot;</span></span>\n<span></span>'}),title:".env"}),"\n",(0,o.jsx)(n.p,{children:"As early as possible in your application, import and configure dotenv."}),"\n",(0,o.jsx)(n.pre,{language:"js",code:"require('dotenv').config()\nconsole.log(process.env) // remove this after you've confirmed it is working\n\nconst PORT = process.env.PORT || 3000\nconst express = require('express')\n...\n",children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv&#39;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-function)">.config</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.env) </span><span style="color: var(--shiki-token-comment)">// remove this after you&#39;ve confirmed it is working</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3000</span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">express</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;express&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-token-keyword)">...</span></span>\n<span></span>'}),title:"index.js"}),"\n",(0,o.jsx)(n.p,{children:"Try running it locally."}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"node index.js\n{\n  ...\n  HELLO: 'World'\n}\nServer running on port:3000/\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">node index.js</span></span>\n<span><span style="color: var(--shiki-color-text)">{</span></span>\n<span><span style="color: var(--shiki-color-text)">  ...</span></span>\n<span><span style="color: var(--shiki-color-text)">  HELLO: </span><span style="color: var(--shiki-token-string-expression)">&#39;World&#39;</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span></span>\n<span><span style="color: var(--shiki-color-text)">Server running on port:3000/</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(n.p,{children:["It should say ",(0,o.jsx)(n.code,{children:"Hello World"}),"."]}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/nextjs-hello-world.png"}),"\n",(0,o.jsxs)(n.p,{children:["Great! ",(0,o.jsx)(n.code,{children:"process.env"})," now has the keys and values you defined in your ",(0,o.jsx)(n.code,{children:".env"})," file. That covers local development. Let's solve for production next."]}),"\n",(0,o.jsx)(n.h2,{id:"build-env-vault",children:"Build .env.vault"}),"\n",(0,o.jsxs)(n.p,{children:["Push your latest ",(0,o.jsx)(n.code,{children:".env"})," file changes and edit your production secrets. ",(0,o.jsx)(n.a,{href:"/docs/tutorials/sync",children:"Learn more about syncing"})]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npx dotenv-vault@latest push\nnpx dotenv-vault@latest open production\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest push</span></span>\n<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest open production</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(n.p,{children:"Use the UI to configure those secrets per environment."}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/edit-production-value.gif",www:"www.dotenv.org"}),"\n",(0,o.jsxs)(n.p,{children:["Then build your encrypted ",(0,o.jsx)(n.code,{children:".env.vault"})," file."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npx dotenv-vault@latest build\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest build</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(n.p,{children:"Its contents should look something like this."}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:'#/-------------------.env.vault---------------------/\n#/         cloud-agnostic vaulting standard         /\n#/   [how it works](https://dotenv.org/env-vault)   /\n#/--------------------------------------------------/\n\n# development\nDOTENV_VAULT_DEVELOPMENT="/HqNgQWsf6Oh6XB9pI/CGkdgCe6d4/vWZHgP50RRoDTzkzPQk/xOaQs="\nDOTENV_VAULT_DEVELOPMENT_VERSION=2\n\n# production\nDOTENV_VAULT_PRODUCTION="x26PuIKQ/xZ5eKrYomKngM+dO/9v1vxhwslE/zjHdg3l+H6q6PheB5GVDVIbZg=="\nDOTENV_VAULT_PRODUCTION_VERSION=2\n',children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-token-comment)">#/-------------------.env.vault---------------------/</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/         cloud-agnostic vaulting standard         /</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/   [how it works](https://dotenv.org/env-vault)   /</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/--------------------------------------------------/</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># development</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_DEVELOPMENT=</span><span style="color: var(--shiki-token-string-expression)">&quot;/HqNgQWsf6Oh6XB9pI/CGkdgCe6d4/vWZHgP50RRoDTzkzPQk/xOaQs=&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_DEVELOPMENT_VERSION=2</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># production</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_PRODUCTION=</span><span style="color: var(--shiki-token-string-expression)">&quot;x26PuIKQ/xZ5eKrYomKngM+dO/9v1vxhwslE/zjHdg3l+H6q6PheB5GVDVIbZg==&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_PRODUCTION_VERSION=2</span></span>\n<span></span>'}),title:".env.vault"}),"\n",(0,o.jsx)(n.h2,{id:"set-dotenv-key",children:"Set DOTENV_KEY"}),"\n",(0,o.jsxs)(n.p,{children:["Fetch your production ",(0,o.jsx)(n.code,{children:"DOTENV_KEY"}),"."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npx dotenv-vault@latest keys production\n# outputs: dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest keys production</span></span>\n<span><span style="color: var(--shiki-token-comment)"># outputs: dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(n.p,{children:["Set ",(0,o.jsx)(n.code,{children:"DOTENV_KEY"})," on Fly.io."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"flyctl secrets set NODE_ENV=production DOTENV_KEY='dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production'\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">flyctl secrets </span><span style="color: var(--shiki-token-function)">set</span><span style="color: var(--shiki-color-text)"> NODE_ENV=production DOTENV_KEY=</span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production&#39;</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(n.h2,{id:"deploy",children:"Deploy"}),"\n",(0,o.jsx)(n.p,{children:"Commit those changes safely to code and deploy again."}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"flyctl deploy --remote-only --no-cache\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">flyctl deploy --remote-only --no-cache</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(n.p,{children:["That's it! On deploy, your ",(0,o.jsx)(n.code,{children:".env.vault"})," file will be decrypted and its production secrets injected as environment variables â€“ just-in-time."]}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/hello-production.png",www:"yourapp.fly.dev"}),"\n",(0,o.jsxs)(n.p,{children:["You'll know things worked correctly when you see ",(0,o.jsx)(n.code,{children:"'Loading env from encrypted .env.vault'"})," in your logs. If a ",(0,o.jsx)(n.code,{children:"DOTENV_KEY"})," is not set (for example when developing on your local machine) it will fall back to standard ",(0,o.jsx)(n.a,{href:"https://github.com/motdotla/dotenv",children:"dotenv"})," functionality."]}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/fly-logs-vault.png",www:"flyctl logs"}),"\n",(0,o.jsx)(t.default,{})]})}var h=!0;n.default=function(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),s.components);return n?(0,o.jsx)(n,Object.assign({},s,{children:(0,o.jsx)(d,s)})):d(s)}},1490:function(s,n,e){"use strict";e.r(n),e.d(n,{__N_SSG:function(){return r}});var o=e(5893),a=e(1151);function t(s){let n=Object.assign({p:"p"},(0,a.ah)(),s.components),{Note:e}=n;return e||function(s,n){throw Error("Expected "+(n?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}("Note",!0),(0,o.jsx)(e,{children:(0,o.jsx)(n.p,{children:"You succesfully used the new .env.vault standard to encrypt and deploy your secrets. This is much safer than scattering your secrets across multiple third-party platforms and tools. Whenever you need to add or change a secret, just rebuild your .env.vault file and redeploy."})})}var r=!0;n.default=function(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),s.components);return n?(0,o.jsx)(n,Object.assign({},s,{children:(0,o.jsx)(t,s)})):t(s)}}},function(s){s.O(0,[5675,9774,2888,179],function(){return s(s.s=7086)}),_N_E=s.O()}]);