(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[503],{7502:function(s,n,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/frameworks/express/vercel",function(){return e(9794)}])},9061:function(s,n,e){"use strict";e.d(n,{N:function(){return a}});var o=e(5893);function a(s){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:"flex",children:[(0,o.jsx)("div",{className:"flex-grow",children:(0,o.jsxs)("h5",{children:[(0,o.jsx)("a",{href:"/docs#frameworks",children:"Frameworks"})," ",s.framework?(0,o.jsxs)("span",{children:["â€º ",(0,o.jsx)("a",{href:s.url,children:s.framework})]}):(0,o.jsx)("span",{})]})}),(0,o.jsx)("div",{className:"flex flex-shrink justify-end gap-2",children:s.icon})]})})}},5404:function(s,n,e){"use strict";e.d(n,{X:function(){return a}});var o=e(5893);function a(s){return(0,o.jsx)("p",{className:"lead mt-1",children:s.lead})}},1370:function(s,n,e){"use strict";e.d(n,{c:function(){return r}});var o=e(5893),a=e(5675),t=e.n(a);function r(s){return(0,o.jsx)("div",{className:"w-full p-7 bg-zinc-100 dark:bg-zinc-800 border border-zinc-200 dark:border-zinc-700 rounded-md",children:(0,o.jsxs)("div",{className:"border border-zinc-300 dark:border-zinc-800 text-zinc-100 text-sm subpixel-antialiased rounded-lg leading-normal overflow-hidden shadow-lg",children:[(0,o.jsx)("div",{className:"p-0 bg-zinc-200 dark:bg-black border-b border-zinc-300 dark:border-zinc-800",children:(0,o.jsxs)("div",{className:"flex py-1 px-2",children:[(0,o.jsxs)("div",{className:"flex items-center space-x-1.5",children:[(0,o.jsx)("span",{className:"h-2 w-2 bg-red-500/70 dark:bg-red-500/30 rounded-full"}),(0,o.jsx)("span",{className:"h-2 w-2 bg-orange-300/70 dark:bg-orange-300/30 rounded-full"}),(0,o.jsx)("span",{className:"h-2 w-2 bg-green-500/70 dark:bg-green-500/30 rounded-full"})]}),(0,o.jsx)("div",{className:"text-right w-full text-zinc-400 text-xs",children:s.www})]})}),(0,o.jsx)("div",{className:"p-0",children:(0,o.jsx)("a",{href:s.url,target:"_blank",rel:"noreferrer",className:"hover:brightness-105",children:(0,o.jsx)(t(),{src:s.url,width:"0",height:"0",alt:"",className:"p-0 m-0 w-full",unoptimized:!0})})})]})})}},7463:function(s,n,e){"use strict";e.d(n,{u:function(){return a}});var o=e(5893);function a(s){return(0,o.jsx)("svg",{fill:"currentColor",role:"img",viewBox:"0 0 24 24",...s,children:(0,o.jsx)("path",{d:"M24 18.588a1.529 1.529 0 01-1.895-.72l-3.45-4.771-.5-.667-4.003 5.444a1.466 1.466 0 01-1.802.708l5.158-6.92-4.798-6.251a1.595 1.595 0 011.9.666l3.576 4.83 3.596-4.81a1.435 1.435 0 011.788-.668L21.708 7.9l-2.522 3.283a.666.666 0 000 .994l4.804 6.412zM.002 11.576l.42-2.075c1.154-4.103 5.858-5.81 9.094-3.27 1.895 1.489 2.368 3.597 2.275 5.973H1.116C.943 16.447 4.005 19.009 7.92 17.7a4.078 4.078 0 002.582-2.876c.207-.666.548-.78 1.174-.588a5.417 5.417 0 01-2.589 3.957 6.272 6.272 0 01-7.306-.933 6.575 6.575 0 01-1.64-3.858c0-.235-.08-.455-.134-.666A88.33 88.33 0 010 11.577zm1.127-.286h9.654c-.06-3.076-2.001-5.258-4.59-5.278-2.882-.04-4.944 2.094-5.071 5.264z"})})}},1212:function(s,n,e){"use strict";e.d(n,{K:function(){return a}});var o=e(5893);function a(s){return(0,o.jsx)("svg",{viewBox:"0 0 24 24",fill:"currentColor",...s,children:(0,o.jsx)("path",{d:"M24 22.525H0l12-21.05 12 21.05z"})})}},9794:function(s,n,e){"use strict";e.r(n),e.d(n,{__N_SSG:function(){return h}});var o=e(5893),a=e(1151),t=e(1490),r=e(1370),l=e(5404),i=e(9061),p=e(1212),c=e(7463);function d(s){let n=Object.assign({h1:"h1",p:"p",h2:"h2",a:"a",pre:"pre",code:"code"},(0,a.ah)(),s.components),{Note:e}=n;return e||function(s,n){throw Error("Expected "+(n?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}("Note",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.N,{framework:"Express.js",url:"/docs/frameworks/express",icon:(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(c.u,{className:"h-9 w-9 text-[#000000] dark:invert"}),(0,o.jsx)(p.K,{className:"h-9 w-9 text-[#000000] dark:invert"})]})}),"\n",(0,o.jsx)(n.h1,{children:"Deploy an Express.js App to Vercel"}),"\n",(0,o.jsx)(l.X,{lead:"Deploy an Express.js app with an encrypted .env.vault file to Vercel."}),"\n",(0,o.jsx)(e,{children:(0,o.jsxs)(n.p,{children:["Find a complete ",(0,o.jsx)("a",{href:"https://github.com/dotenv-org/examples/tree/master/express/vercel",children:"code example on GitHub"})," for this guide."]})}),"\n",(0,o.jsx)(n.h2,{id:"initial-setup",children:"Initial setup"}),"\n",(0,o.jsxs)(n.p,{children:["Install ",(0,o.jsx)(n.a,{href:"https://github.com/expressjs/express",children:"express"}),"."]}),"\n",(0,o.jsx)(n.pre,{code:"npm install express --save\n",children:(0,o.jsx)(n.code,{children:"npm install express --save\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Create an ",(0,o.jsx)(n.code,{children:"index.js"})," file with the web server code."]}),"\n",(0,o.jsx)(n.pre,{language:"js",code:"const PORT = process.env.PORT || 3000\nconst express = require('express')\nconst app = express()\n\napp.listen(PORT, () => {\n  console.log(`Running on port ${PORT}.`)\n})\n\napp.get('/', function (req, res) {\n  res.send(`Hello ${process.env.HELLO}`)\n})\n",children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3000</span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">express</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;express&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">app</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">express</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">app</span><span style="color: var(--shiki-token-function)">.listen</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">`Running on port </span><span style="color: var(--shiki-token-keyword)">${</span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-token-keyword)">}</span><span style="color: var(--shiki-token-string-expression)">.`</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-color-text)">})</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">app</span><span style="color: var(--shiki-token-function)">.get</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;/&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">function</span><span style="color: var(--shiki-color-text)"> (req</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> res) {</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">res</span><span style="color: var(--shiki-token-function)">.send</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">`Hello </span><span style="color: var(--shiki-token-keyword)">${</span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">HELLO</span><span style="color: var(--shiki-token-keyword)">}</span><span style="color: var(--shiki-token-string-expression)">`</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-color-text)">})</span></span>\n<span></span>'}),title:"index.js"}),"\n",(0,o.jsxs)(n.p,{children:["Add ",(0,o.jsx)(n.code,{children:"vercel.json"})," file to run your app on Vercel."]}),"\n",(0,o.jsx)(n.pre,{language:"json",code:'{\n  "version": 2,\n  "builds": [\n    {\n      "src": "index.js",\n      "use": "@vercel/node"\n    }\n  ],\n  "routes": [\n    {\n      "src": "/(.*)",\n      "dest": "index.js"\n    }\n  ]\n}\n',children:(0,o.jsx)(n.code,{className:"language-json",children:'<span><span style="color: var(--shiki-color-text)">{</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;version&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;builds&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> [</span></span>\n<span><span style="color: var(--shiki-color-text)">    {</span></span>\n<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">&quot;src&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;index.js&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">&quot;use&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;@vercel/node&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">    }</span></span>\n<span><span style="color: var(--shiki-color-text)">  ]</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;routes&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> [</span></span>\n<span><span style="color: var(--shiki-color-text)">    {</span></span>\n<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">&quot;src&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;/(.*)&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-keyword)">&quot;dest&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;index.js&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">    }</span></span>\n<span><span style="color: var(--shiki-color-text)">  ]</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span></span>\n<span></span>'}),title:"vercel.json"}),"\n",(0,o.jsxs)(n.p,{children:["Add ",(0,o.jsx)(n.code,{children:".vercelignore"})," file."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:".env*\n!.env.vault\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">.env</span><span style="color: var(--shiki-token-keyword)">*</span></span>\n<span><span style="color: var(--shiki-token-keyword)">!</span><span style="color: var(--shiki-color-text)">.env.vault</span></span>\n<span></span>'}),title:".vercelignore"}),"\n",(0,o.jsx)(n.p,{children:"Commit that to code and deploy it to Vercel."}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npx vercel@latest deploy --prod\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx vercel@latest deploy --prod</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(n.p,{children:["Once deployed, your app will say ",(0,o.jsx)(n.code,{children:"'Hello undefined'"})," as it doesn't have a way to access the environment variable yet. Let's do that next."]}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/hello-undefined.png",www:"yourapp.vercel.app"}),"\n",(0,o.jsx)(n.h2,{id:"install-dotenv",children:"Install dotenv"}),"\n",(0,o.jsxs)(n.p,{children:["Install ",(0,o.jsx)(n.a,{href:"https://github.com/motdotla/dotenv",children:(0,o.jsx)(n.code,{children:"dotenv"})}),"."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npm install dotenv --save # Requires dotenv >= 16.1.0\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npm install dotenv --save </span><span style="color: var(--shiki-token-comment)"># Requires dotenv &gt;= 16.1.0</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(n.p,{children:["Create a ",(0,o.jsx)(n.code,{children:".env"})," file in the root of your project."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:'# .env\nHELLO="World"\n',children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-token-comment)"># .env</span></span>\n<span><span style="color: var(--shiki-color-text)">HELLO=</span><span style="color: var(--shiki-token-string-expression)">&quot;World&quot;</span></span>\n<span></span>'}),title:".env"}),"\n",(0,o.jsx)(n.p,{children:"As early as possible in your application, import and configure dotenv."}),"\n",(0,o.jsx)(n.pre,{language:"js",code:"require('dotenv').config()\nconsole.log(process.env) // remove this after you've confirmed it is working\n\nconst PORT = process.env.PORT || 3000\nconst express = require('express')\n...\n",children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv&#39;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-function)">.config</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.env) </span><span style="color: var(--shiki-token-comment)">// remove this after you&#39;ve confirmed it is working</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3000</span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">express</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;express&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-token-keyword)">...</span></span>\n<span></span>'}),title:"index.js"}),"\n",(0,o.jsx)(n.p,{children:"Try running it locally."}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"node index.js\n{\n  ...\n  HELLO: 'World'\n}\nServer running on port:3000/\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">node index.js</span></span>\n<span><span style="color: var(--shiki-color-text)">{</span></span>\n<span><span style="color: var(--shiki-color-text)">  ...</span></span>\n<span><span style="color: var(--shiki-color-text)">  HELLO: </span><span style="color: var(--shiki-token-string-expression)">&#39;World&#39;</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span></span>\n<span><span style="color: var(--shiki-color-text)">Server running on port:3000/</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(n.p,{children:["Perfect. ",(0,o.jsx)(n.code,{children:"process.env"})," now has the keys and values you defined in your ",(0,o.jsx)(n.code,{children:".env"})," file."]}),"\n",(0,o.jsx)(n.p,{children:"That covers local development. Let's solve for production next."}),"\n",(0,o.jsx)(n.h2,{id:"build-env-vault",children:"Build .env.vault"}),"\n",(0,o.jsxs)(n.p,{children:["Push your latest ",(0,o.jsx)(n.code,{children:".env"})," file changes and edit your production secrets. ",(0,o.jsx)(n.a,{href:"/docs/tutorials/sync",children:"Learn more about syncing"})]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npx dotenv-vault@latest push\nnpx dotenv-vault@latest open production\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest push</span></span>\n<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest open production</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(n.p,{children:"Use the UI to configure those secrets per environment."}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/edit-production-value.gif",www:"www.dotenv.org"}),"\n",(0,o.jsxs)(n.p,{children:["Then build your encrypted ",(0,o.jsx)(n.code,{children:".env.vault"})," file."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npx dotenv-vault@latest build\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest build</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(n.p,{children:"Its contents should look something like this."}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:'#/-------------------.env.vault---------------------/\n#/         cloud-agnostic vaulting standard         /\n#/   [how it works](https://dotenv.org/env-vault)   /\n#/--------------------------------------------------/\n\n# development\nDOTENV_VAULT_DEVELOPMENT="/HqNgQWsf6Oh6XB9pI/CGkdgCe6d4/vWZHgP50RRoDTzkzPQk/xOaQs="\nDOTENV_VAULT_DEVELOPMENT_VERSION=2\n\n# production\nDOTENV_VAULT_PRODUCTION="x26PuIKQ/xZ5eKrYomKngM+dO/9v1vxhwslE/zjHdg3l+H6q6PheB5GVDVIbZg=="\nDOTENV_VAULT_PRODUCTION_VERSION=2\n',children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-token-comment)">#/-------------------.env.vault---------------------/</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/         cloud-agnostic vaulting standard         /</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/   [how it works](https://dotenv.org/env-vault)   /</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/--------------------------------------------------/</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># development</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_DEVELOPMENT=</span><span style="color: var(--shiki-token-string-expression)">&quot;/HqNgQWsf6Oh6XB9pI/CGkdgCe6d4/vWZHgP50RRoDTzkzPQk/xOaQs=&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_DEVELOPMENT_VERSION=2</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># production</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_PRODUCTION=</span><span style="color: var(--shiki-token-string-expression)">&quot;x26PuIKQ/xZ5eKrYomKngM+dO/9v1vxhwslE/zjHdg3l+H6q6PheB5GVDVIbZg==&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_PRODUCTION_VERSION=2</span></span>\n<span></span>'}),title:".env.vault"}),"\n",(0,o.jsx)(n.h2,{id:"set-dotenv-key",children:"Set DOTENV_KEY"}),"\n",(0,o.jsxs)(n.p,{children:["Fetch your production ",(0,o.jsx)(n.code,{children:"DOTENV_KEY"}),"."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npx dotenv-vault@latest keys production\n# outputs: dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest keys production</span></span>\n<span><span style="color: var(--shiki-token-comment)"># outputs: dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(n.p,{children:["Set ",(0,o.jsx)(n.code,{children:"DOTENV_KEY"})," on Vercel using the CLI."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npx vercel@latest env add DOTENV_KEY\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx vercel@latest env add DOTENV_KEY</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"? Whatâ€™s the value of DOTENV_KEY? dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production\nâœ…  Added Environment Variable DOTENV_KEY to Project nodejs-vercel [94ms]\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-token-keyword)">?</span><span style="color: var(--shiki-color-text)"> Whatâ€™s the value of DOTENV_KEY</span><span style="color: var(--shiki-token-keyword)">?</span><span style="color: var(--shiki-color-text)"> dotenv://:key_1234@dotenv.org/vault/.env.vault</span><span style="color: var(--shiki-token-keyword)">?</span><span style="color: var(--shiki-color-text)">environment=production</span></span>\n<span><span style="color: var(--shiki-color-text)">âœ…  Added Environment Variable DOTENV_KEY to Project nodejs-vercel [94ms]</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(n.p,{children:"Or use Vercel's UI."}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/cloudinary/integrations-vercel-envs_y43bwi.gif",www:"vercel.com"}),"\n",(0,o.jsx)(n.h2,{id:"deploy",children:"Deploy"}),"\n",(0,o.jsx)(n.p,{children:"Commit those changes safely to code and deploy."}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npx vercel@latest deploy --prod\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx vercel@latest deploy --prod</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(n.p,{children:["That's it! On deploy, your ",(0,o.jsx)(n.code,{children:".env.vault"})," file will be decrypted and its production secrets injected as environment variables â€“ just in time."]}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/hello-production.png",www:"yourapp.vercel.app"}),"\n",(0,o.jsx)(t.default,{})]})}var h=!0;n.default=function(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),s.components);return n?(0,o.jsx)(n,Object.assign({},s,{children:(0,o.jsx)(d,s)})):d(s)}},1490:function(s,n,e){"use strict";e.r(n),e.d(n,{__N_SSG:function(){return r}});var o=e(5893),a=e(1151);function t(s){let n=Object.assign({p:"p"},(0,a.ah)(),s.components),{Note:e}=n;return e||function(s,n){throw Error("Expected "+(n?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}("Note",!0),(0,o.jsx)(e,{children:(0,o.jsx)(n.p,{children:"You succesfully used the new .env.vault standard to encrypt and deploy your secrets. This is much safer than scattering your secrets across multiple third-party platforms and tools. Whenever you need to add or change a secret, just rebuild your .env.vault file and redeploy."})})}var r=!0;n.default=function(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),s.components);return n?(0,o.jsx)(n,Object.assign({},s,{children:(0,o.jsx)(t,s)})):t(s)}}},function(s){s.O(0,[5675,9774,2888,179],function(){return s(s.s=7502)}),_N_E=s.O()}]);