(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6467],{8554:function(n,s,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/frameworks/nuxtjs/edgio",function(){return e(2937)}])},9061:function(n,s,e){"use strict";e.d(s,{N:function(){return a}});var o=e(5893);function a(n){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:"flex",children:[(0,o.jsx)("div",{className:"flex-grow",children:(0,o.jsxs)("h5",{children:[(0,o.jsx)("a",{href:"/docs#frameworks",children:"Frameworks"})," ",n.framework?(0,o.jsxs)("span",{children:["â€º ",(0,o.jsx)("a",{href:n.url,children:n.framework})]}):(0,o.jsx)("span",{})]})}),(0,o.jsx)("div",{className:"flex flex-shrink justify-end gap-2",children:n.icon})]})})}},5404:function(n,s,e){"use strict";e.d(s,{X:function(){return a}});var o=e(5893);function a(n){return(0,o.jsx)("p",{className:"lead mt-1",children:n.lead})}},1370:function(n,s,e){"use strict";e.d(s,{c:function(){return l}});var o=e(5893),a=e(5675),t=e.n(a);function l(n){return(0,o.jsx)("div",{className:"w-full p-7 bg-zinc-100 dark:bg-zinc-800 border border-zinc-200 dark:border-zinc-700 rounded-md",children:(0,o.jsxs)("div",{className:"border border-zinc-300 dark:border-zinc-800 text-zinc-100 text-sm subpixel-antialiased rounded-lg leading-normal overflow-hidden shadow-lg",children:[(0,o.jsx)("div",{className:"p-0 bg-zinc-200 dark:bg-black border-b border-zinc-300 dark:border-zinc-800",children:(0,o.jsxs)("div",{className:"flex py-1 px-2",children:[(0,o.jsxs)("div",{className:"flex items-center space-x-1.5",children:[(0,o.jsx)("span",{className:"h-2 w-2 bg-red-500/70 dark:bg-red-500/30 rounded-full"}),(0,o.jsx)("span",{className:"h-2 w-2 bg-orange-300/70 dark:bg-orange-300/30 rounded-full"}),(0,o.jsx)("span",{className:"h-2 w-2 bg-green-500/70 dark:bg-green-500/30 rounded-full"})]}),(0,o.jsx)("div",{className:"text-right w-full text-zinc-400 text-xs",children:n.www})]})}),(0,o.jsx)("div",{className:"p-0",children:(0,o.jsx)("a",{href:n.url,target:"_blank",rel:"noreferrer",className:"hover:brightness-105",children:(0,o.jsx)(t(),{src:n.url,width:"0",height:"0",alt:"",className:"p-0 m-0 w-full",unoptimized:!0})})})]})})}},5161:function(n,s,e){"use strict";e.d(s,{I:function(){return a}});var o=e(5893);function a(n){return(0,o.jsxs)("svg",{viewBox:"0 0 97 40",fill:"currentColor",...n,children:[(0,o.jsx)("path",{d:"M6.043 25.586V18.61H16.32l1.42-5.545H6.042V6.35h14.182l2.91-5.548H0v30.329h20.027l-3.052-5.545H6.043z"}),(0,o.jsx)("path",{d:"M34.872 12.39c-1.546-1.833-3.605-2.751-6.173-2.751-2.903 0-5.322 1.054-7.255 3.162-1.937 2.108-2.904 4.737-2.904 7.886 0 3.15.967 5.778 2.904 7.886 1.933 2.108 4.355 3.162 7.255 3.162 2.642 0 4.737-.953 6.283-2.858v2.319h5.522V0l-5.632 4.85v7.54zm-1.226 12.45c-1.002 1.09-2.308 1.636-3.909 1.636-1.616 0-2.923-.553-3.922-1.659-.999-1.106-1.494-2.48-1.494-4.126 0-1.646.498-3.023 1.494-4.126.996-1.102 2.302-1.658 3.922-1.658 1.604 0 2.907.546 3.91 1.636 1.002 1.09 1.506 2.473 1.506 4.148 0 1.675-.501 3.056-1.507 4.149zm24.901-12.359c-1.559-1.934-3.725-2.904-6.5-2.904a8.91 8.91 0 00-3.66.78 9.835 9.835 0 00-3.088 2.156c-.889.919-1.597 2.05-2.124 3.402-.527 1.351-.792 2.813-.792 4.387 0 1.559.262 3.02.792 4.375.527 1.358 1.235 2.49 2.124 3.402a9.919 9.919 0 003.088 2.143 8.9 8.9 0 003.66.78c2.746 0 4.896-.948 6.458-2.84v1.475c0 1.775-.547 3.15-1.637 4.116-1.09.967-2.547 1.426-4.352 1.426-2.454 0-3.31-.598-3.31-.598l-3.803 3.974s.656.32 2.283.76a20.08 20.08 0 005.128.685c3.479 0 6.192-.757 8.229-2.677 2.037-1.92 3.055-4.566 3.055-7.928V10.14h-5.545v2.341h-.006zm-1.278 11.75c-.983 1.048-2.247 1.571-3.792 1.571-1.575 0-2.849-.527-3.825-1.58-.977-1.055-1.462-2.361-1.462-3.923 0-1.561.488-2.871 1.462-3.931.973-1.061 2.25-1.591 3.825-1.591 1.558 0 2.826.523 3.802 1.571.973 1.048 1.461 2.364 1.461 3.954 0 1.572-.491 2.885-1.47 3.929zM66.6 31.13h5.653V10.14L66.6 14.99v16.14zM72.256 3.1h-5.655v5.656h5.655V3.101zm21.285 9.63c-2.16-2.102-4.87-3.153-8.135-3.153-3.25 0-5.95 1.051-8.103 3.153-2.153 2.102-3.227 4.734-3.227 7.896s1.077 5.794 3.227 7.896c2.154 2.101 4.854 3.152 8.103 3.152 3.263 0 5.975-1.05 8.135-3.152 2.16-2.102 3.24-4.734 3.24-7.896-.003-3.162-1.083-5.794-3.24-7.896zm-4.129 12.054c-1.054 1.083-2.39 1.623-4.006 1.623-1.604 0-2.933-.54-3.987-1.623-1.054-1.083-1.58-2.47-1.58-4.158 0-1.688.526-3.075 1.58-4.158 1.055-1.084 2.383-1.623 3.987-1.623 1.617 0 2.952.54 4.006 1.623 1.054 1.083 1.581 2.47 1.581 4.158 0 1.688-.527 3.075-1.58 4.158z"})]})}},5740:function(n,s,e){"use strict";e.d(s,{S:function(){return a}});var o=e(5893);function a(n){return(0,o.jsx)("svg",{viewBox:"0 0 24 24",fill:"currentColor",...n,children:(0,o.jsx)("path",{d:"M9.078 3.965c-.588 0-1.177.289-1.514.867L.236 17.433c-.672 1.156.17 2.601 1.514 2.601h5.72a1.676 1.676 0 0 1-.35-2.117l5.547-9.513-2.076-3.572a1.734 1.734 0 0 0-1.513-.867zm7.407 2.922c-.487 0-.973.236-1.252.709L9.17 17.906c-.557.945.138 2.13 1.251 2.13h12.13c1.114 0 1.81-1.185 1.253-2.13l-6.067-10.31a1.437 1.437 0 0 0-1.252-.71z"})})}},2937:function(n,s,e){"use strict";e.r(s),e.d(s,{__N_SSG:function(){return h}});var o=e(5893),a=e(1151),t=e(9061),l=e(5404),r=e(1370),i=e(1490),c=e(5161),p=e(5740);function d(n){let s=Object.assign({h1:"h1",p:"p",h2:"h2",pre:"pre",code:"code",a:"a"},(0,a.ah)(),n.components),{Note:e}=s;return e||function(n,s){throw Error("Expected "+(s?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Note",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.N,{framework:"Nuxt.js",url:"/docs/frameworks/nuxtjs",icon:(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(p.S,{className:"h-9 w-9 text-[#00DC82]"}),(0,o.jsx)(c.I,{className:"h-9 w-9 text-[#000000] dark:invert"})]})}),"\n",(0,o.jsx)(s.h1,{children:"Deploy a Nuxt.js App to Edgio"}),"\n",(0,o.jsx)(l.X,{lead:"Deploy a Nuxt.js app with an encrypted .env.vault file to Edgio."}),"\n",(0,o.jsx)(e,{children:(0,o.jsxs)(s.p,{children:["Find a complete ",(0,o.jsx)("a",{href:"https://github.com/dotenv-org/examples/tree/master/nuxtjs/edgio",children:"code example on GitHub"})," for this guide."]})}),"\n",(0,o.jsx)(s.h2,{id:"initial-setup",children:"Initial setup"}),"\n",(0,o.jsx)(s.p,{children:"Create a Nuxt.js application."}),"\n",(0,o.jsx)(s.pre,{language:"bash",code:"npx nuxi@latest init\n",children:(0,o.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">npx nuxi@latest init</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(s.p,{children:"This will create a handful of files."}),"\n",(0,o.jsx)(s.pre,{language:"shell",code:"ls -1\nREADME.md\napp.vue\nnuxt.config.ts\npackage.json\npublic/\nserver/\ntsconfig.json\n",children:(0,o.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">ls -1</span></span>\n<span><span style="color: var(--shiki-color-text)">README.md</span></span>\n<span><span style="color: var(--shiki-color-text)">app.vue</span></span>\n<span><span style="color: var(--shiki-color-text)">nuxt.config.ts</span></span>\n<span><span style="color: var(--shiki-color-text)">package.json</span></span>\n<span><span style="color: var(--shiki-color-text)">public/</span></span>\n<span><span style="color: var(--shiki-color-text)">server/</span></span>\n<span><span style="color: var(--shiki-color-text)">tsconfig.json</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(s.p,{children:["Edit ",(0,o.jsx)(s.code,{children:"app.vue"})," to include ",(0,o.jsx)(s.code,{children:"HELLO"}),"."]}),"\n",(0,o.jsx)(s.pre,{language:"js",code:'<script setup lang="ts">\n  const config = useRuntimeConfig()\n</script>\n\n<template>\n  Hello {{config.public.HELLO}}.\n</template>\n',children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">script</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">setup</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">lang</span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-token-string-expression)">&quot;ts&quot;</span><span style="color: var(--shiki-color-text)">&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">  const config = useRuntimeConfig()</span></span>\n<span><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">script</span><span style="color: var(--shiki-color-text)">&gt;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">&lt;</span><span style="color: var(--shiki-token-string-expression)">template</span><span style="color: var(--shiki-color-text)">&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">  Hello {{config.public.HELLO}}.</span></span>\n<span><span style="color: var(--shiki-color-text)">&lt;/</span><span style="color: var(--shiki-token-string-expression)">template</span><span style="color: var(--shiki-color-text)">&gt;</span></span>\n<span></span>'}),title:"app.vue"}),"\n",(0,o.jsxs)(s.p,{children:["Edit ",(0,o.jsx)(s.code,{children:"nuxt.config.ts"})," to include runtimeConfig environment variables."]}),"\n",(0,o.jsx)(s.pre,{language:"js",code:"// https://nuxt.com/docs/api/configuration/nuxt-config\nexport default defineNuxtConfig({\n  runtimeConfig: {\n    public: {\n      HELLO: process.env.HELLO\n    }\n  },\n  devtools: { enabled: true }\n})\n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// https://nuxt.com/docs/api/configuration/nuxt-config</span></span>\n<span><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">default</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">defineNuxtConfig</span><span style="color: var(--shiki-color-text)">({</span></span>\n<span><span style="color: var(--shiki-color-text)">  runtimeConfig</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">    public</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">      HELLO</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">HELLO</span></span>\n<span><span style="color: var(--shiki-color-text)">    }</span></span>\n<span><span style="color: var(--shiki-color-text)">  }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">  devtools</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> { enabled</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)"> }</span></span>\n<span><span style="color: var(--shiki-color-text)">})</span></span>\n<span></span>'}),title:"nuxt.config.ts"}),"\n",(0,o.jsx)(s.p,{children:"Prepare the app for Edgio."}),"\n",(0,o.jsx)(s.pre,{language:"shell",code:"npx @edgio/cli init\n",children:(0,o.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx @edgio/cli init</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(s.p,{children:"Commit that to code and deploy it to Edgio."}),"\n",(0,o.jsx)(s.pre,{language:"shell",code:"npm run edgio:deploy\n",children:(0,o.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npm run edgio:deploy</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/hello-blank.png",www:"edgio.link"}),"\n",(0,o.jsxs)(s.p,{children:["Once deployed, your app will say ",(0,o.jsx)(s.code,{children:"'Hello .'"})," as it doesn't have a way to access the environment variable yet. Let's do that next."]}),"\n",(0,o.jsx)(s.h2,{id:"install-dotenv",children:"Install dotenv"}),"\n",(0,o.jsxs)(s.p,{children:["Install ",(0,o.jsx)(s.a,{href:"https://github.com/motdotla/dotenv",children:(0,o.jsx)(s.code,{children:"dotenv"})}),"."]}),"\n",(0,o.jsx)(s.pre,{language:"shell",code:"npm install dotenv --save # Requires dotenv >= 16.1.0\n",children:(0,o.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npm install dotenv --save </span><span style="color: var(--shiki-token-comment)"># Requires dotenv &gt;= 16.1.0</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(s.p,{children:["Create a ",(0,o.jsx)(s.code,{children:".env"})," file in the root of your project."]}),"\n",(0,o.jsx)(s.pre,{language:"shell",code:'# .env\nHELLO="World"\n',children:(0,o.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-token-comment)"># .env</span></span>\n<span><span style="color: var(--shiki-color-text)">HELLO=</span><span style="color: var(--shiki-token-string-expression)">&quot;World&quot;</span></span>\n<span></span>'}),title:".env"}),"\n",(0,o.jsxs)(s.p,{children:["As early as possible in ",(0,o.jsx)(s.code,{children:"nuxt.config.ts"})," require and load dotenv."]}),"\n",(0,o.jsx)(s.pre,{language:"js",code:"// https://nuxt.com/docs/api/configuration/nuxt-config\nrequire('dotenv').config()\n\nexport default defineNuxtConfig({\n  runtimeConfig: {\n    public: {\n      HELLO: process.env.HELLO\n    }\n  },\n  devtools: { enabled: true }\n})\n",children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// https://nuxt.com/docs/api/configuration/nuxt-config</span></span>\n<span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv&#39;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-function)">.config</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">default</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">defineNuxtConfig</span><span style="color: var(--shiki-color-text)">({</span></span>\n<span><span style="color: var(--shiki-color-text)">  runtimeConfig</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">    public</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">      HELLO</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">HELLO</span></span>\n<span><span style="color: var(--shiki-color-text)">    }</span></span>\n<span><span style="color: var(--shiki-color-text)">  }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">  devtools</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> { enabled</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">true</span><span style="color: var(--shiki-color-text)"> }</span></span>\n<span><span style="color: var(--shiki-color-text)">})</span></span>\n<span></span>'}),title:"nuxt.config.ts"}),"\n",(0,o.jsx)(s.p,{children:"Try running it locally."}),"\n",(0,o.jsx)(s.pre,{language:"shell",code:"npm run dev\n# Visit http://localhost:3000\n",children:(0,o.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npm run dev</span></span>\n<span><span style="color: var(--shiki-token-comment)"># Visit http://localhost:3000</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(s.p,{children:"It will say 'Hello World'."}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/nextjs-hello-world.png"}),"\n",(0,o.jsxs)(s.p,{children:["Great! ",(0,o.jsx)(s.code,{children:"process.env"})," now has the keys and values you defined in your ",(0,o.jsx)(s.code,{children:".env"})," file."]}),"\n",(0,o.jsx)(s.p,{children:"That covers local simulation of production. Let's solve for the real production environment next."}),"\n",(0,o.jsx)(s.h2,{id:"build-env-vault",children:"Build .env.vault"}),"\n",(0,o.jsxs)(s.p,{children:["Push your latest ",(0,o.jsx)(s.code,{children:".env"})," file changes and edit your production secrets. ",(0,o.jsx)(s.a,{href:"/docs/tutorials/sync",children:"Learn more about syncing"})]}),"\n",(0,o.jsx)(s.pre,{language:"shell",code:"npx dotenv-vault@latest push\nnpx dotenv-vault@latest open production\n",children:(0,o.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest push</span></span>\n<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest open production</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(s.p,{children:"Use the UI to configure those secrets per environment."}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/edit-production-value.gif",www:"www.dotenv.org"}),"\n",(0,o.jsxs)(s.p,{children:["Then build your encrypted ",(0,o.jsx)(s.code,{children:".env.vault"})," file."]}),"\n",(0,o.jsx)(s.pre,{language:"shell",code:"npx dotenv-vault@latest build\n",children:(0,o.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest build</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(s.p,{children:"Its contents should look something like this."}),"\n",(0,o.jsx)(s.pre,{language:"shell",code:'#/-------------------.env.vault---------------------/\n#/         cloud-agnostic vaulting standard         /\n#/   [how it works](https://dotenv.org/env-vault)   /\n#/--------------------------------------------------/\n\n# development\nDOTENV_VAULT_DEVELOPMENT="/HqNgQWsf6Oh6XB9pI/CGkdgCe6d4/vWZHgP50RRoDTzkzPQk/xOaQs="\nDOTENV_VAULT_DEVELOPMENT_VERSION=2\n\n# production\nDOTENV_VAULT_PRODUCTION="x26PuIKQ/xZ5eKrYomKngM+dO/9v1vxhwslE/zjHdg3l+H6q6PheB5GVDVIbZg=="\nDOTENV_VAULT_PRODUCTION_VERSION=2\n',children:(0,o.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-token-comment)">#/-------------------.env.vault---------------------/</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/         cloud-agnostic vaulting standard         /</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/   [how it works](https://dotenv.org/env-vault)   /</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/--------------------------------------------------/</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># development</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_DEVELOPMENT=</span><span style="color: var(--shiki-token-string-expression)">&quot;/HqNgQWsf6Oh6XB9pI/CGkdgCe6d4/vWZHgP50RRoDTzkzPQk/xOaQs=&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_DEVELOPMENT_VERSION=2</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># production</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_PRODUCTION=</span><span style="color: var(--shiki-token-string-expression)">&quot;x26PuIKQ/xZ5eKrYomKngM+dO/9v1vxhwslE/zjHdg3l+H6q6PheB5GVDVIbZg==&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_PRODUCTION_VERSION=2</span></span>\n<span></span>'}),title:".env.vault"}),"\n",(0,o.jsx)(s.h2,{id:"set-dotenv-key",children:"Set DOTENV_KEY"}),"\n",(0,o.jsxs)(s.p,{children:["Fetch your production ",(0,o.jsx)(s.code,{children:"DOTENV_KEY"}),"."]}),"\n",(0,o.jsx)(s.pre,{language:"shell",code:"npx dotenv-vault@latest keys production\n# outputs: dotenv://:key_4567@dotenv.org/vault/.env.vault?environment=production\n",children:(0,o.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest keys production</span></span>\n<span><span style="color: var(--shiki-token-comment)"># outputs: dotenv://:key_4567@dotenv.org/vault/.env.vault?environment=production</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(s.p,{children:["Set ",(0,o.jsx)(s.code,{children:"DOTENV_KEY"})," on Edgio using the UI."]}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/edgio-config-vars.gif",www:"edgio.app"}),"\n",(0,o.jsx)(s.h2,{id:"deploy",children:"Deploy"}),"\n",(0,o.jsxs)(s.p,{children:["You'll have to delete your ",(0,o.jsx)(s.code,{children:".env"})," file now to make use of the ",(0,o.jsx)(s.code,{children:".env.vault"})," file with edgio and Nuxt. Otherwise, Nuxt prioritizes the ",(0,o.jsx)(s.code,{children:".env"})," file over everything."]}),"\n",(0,o.jsx)(s.pre,{code:"rm .env\n",children:(0,o.jsx)(s.code,{children:"rm .env\n"})}),"\n",(0,o.jsx)(s.p,{children:"Commit those changes safely to code and redeploy."}),"\n",(0,o.jsx)(s.pre,{language:"shell",code:"npm run edgio:deploy\n",children:(0,o.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npm run edgio:deploy</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(s.p,{children:["That's it! On deploy, your ",(0,o.jsx)(s.code,{children:".env.vault"})," file will be decrypted and its production secrets injected as environment variables â€“ just in time."]}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/hello-production.png",www:"yourapp.edgio.link"}),"\n",(0,o.jsxs)(s.p,{children:["You'll know things worked correctly when you see ",(0,o.jsx)(s.code,{children:"'Loading env from encrypted .env.vault'"})," in your logs. If a ",(0,o.jsx)(s.code,{children:"DOTENV_KEY"})," is not set (for example when developing on your local machine) it will fall back to standard ",(0,o.jsx)(s.a,{href:"https://github.com/motdotla/dotenv",children:"dotenv"})," functionality."]}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/nuxt-logs-vault.png",www:"edgio.app"}),"\n",(0,o.jsx)(i.default,{})]})}var h=!0;s.default=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,a.ah)(),n.components);return s?(0,o.jsx)(s,Object.assign({},n,{children:(0,o.jsx)(d,n)})):d(n)}},1490:function(n,s,e){"use strict";e.r(s),e.d(s,{__N_SSG:function(){return l}});var o=e(5893),a=e(1151);function t(n){let s=Object.assign({p:"p"},(0,a.ah)(),n.components),{Note:e}=s;return e||function(n,s){throw Error("Expected "+(s?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Note",!0),(0,o.jsx)(e,{children:(0,o.jsx)(s.p,{children:"You succesfully used the new .env.vault standard to encrypt and deploy your secrets. This is much safer than scattering your secrets across multiple third-party platforms and tools. Whenever you need to add or change a secret, just rebuild your .env.vault file and redeploy."})})}var l=!0;s.default=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,a.ah)(),n.components);return s?(0,o.jsx)(s,Object.assign({},n,{children:(0,o.jsx)(t,n)})):t(n)}}},function(n){n.O(0,[5675,9774,2888,179],function(){return n(n.s=8554)}),_N_E=n.O()}]);