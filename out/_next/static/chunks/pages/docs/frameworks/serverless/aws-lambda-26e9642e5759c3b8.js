(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6262],{5837:function(s,n,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/frameworks/serverless/aws-lambda",function(){return e(1686)}])},9061:function(s,n,e){"use strict";e.d(n,{N:function(){return a}});var o=e(5893);function a(s){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:"flex",children:[(0,o.jsx)("div",{className:"flex-grow",children:(0,o.jsxs)("h5",{children:[(0,o.jsx)("a",{href:"/docs#frameworks",children:"Frameworks"})," ",s.framework?(0,o.jsxs)("span",{children:["› ",(0,o.jsx)("a",{href:s.url,children:s.framework})]}):(0,o.jsx)("span",{})]})}),(0,o.jsx)("div",{className:"flex flex-shrink justify-end gap-2",children:s.icon})]})})}},5404:function(s,n,e){"use strict";e.d(n,{X:function(){return a}});var o=e(5893);function a(s){return(0,o.jsx)("p",{className:"lead mt-1",children:s.lead})}},1370:function(s,n,e){"use strict";e.d(n,{c:function(){return r}});var o=e(5893),a=e(5675),t=e.n(a);function r(s){return(0,o.jsx)("div",{className:"w-full p-7 bg-zinc-100 dark:bg-zinc-800 border border-zinc-200 dark:border-zinc-700 rounded-md",children:(0,o.jsxs)("div",{className:"border border-zinc-300 dark:border-zinc-800 text-zinc-100 text-sm subpixel-antialiased rounded-lg leading-normal overflow-hidden shadow-lg",children:[(0,o.jsx)("div",{className:"p-0 bg-zinc-200 dark:bg-black border-b border-zinc-300 dark:border-zinc-800",children:(0,o.jsxs)("div",{className:"flex py-1 px-2",children:[(0,o.jsxs)("div",{className:"flex items-center space-x-1.5",children:[(0,o.jsx)("span",{className:"h-2 w-2 bg-red-500/70 dark:bg-red-500/30 rounded-full"}),(0,o.jsx)("span",{className:"h-2 w-2 bg-orange-300/70 dark:bg-orange-300/30 rounded-full"}),(0,o.jsx)("span",{className:"h-2 w-2 bg-green-500/70 dark:bg-green-500/30 rounded-full"})]}),(0,o.jsx)("div",{className:"text-right w-full text-zinc-400 text-xs",children:s.www})]})}),(0,o.jsx)("div",{className:"p-0",children:(0,o.jsx)("a",{href:s.url,target:"_blank",rel:"noreferrer",className:"hover:brightness-105",children:(0,o.jsx)(t(),{src:s.url,width:"0",height:"0",alt:"",className:"p-0 m-0 w-full",unoptimized:!0})})})]})})}},6393:function(s,n,e){"use strict";e.d(n,{e:function(){return a}});var o=e(5893);function a(s){return(0,o.jsx)("svg",{viewBox:"0 0 24 24",fill:"currentColor","aria-hidden":"true",...s,children:(0,o.jsx)("path",{d:"M6.763 10.036c0 .296.032.535.088.71.064.176.144.368.256.576.04.063.056.127.056.183 0 .08-.048.16-.152.24l-.503.335a.383.383 0 0 1-.208.072c-.08 0-.16-.04-.239-.112a2.47 2.47 0 0 1-.287-.375 6.18 6.18 0 0 1-.248-.471c-.622.734-1.405 1.101-2.347 1.101-.67 0-1.205-.191-1.596-.574-.391-.384-.59-.894-.59-1.533 0-.678.239-1.23.726-1.644.487-.415 1.133-.623 1.955-.623.272 0 .551.024.846.064.296.04.6.104.918.176v-.583c0-.607-.127-1.03-.375-1.277-.255-.248-.686-.367-1.3-.367-.28 0-.568.031-.863.103-.295.072-.583.16-.862.272a2.287 2.287 0 0 1-.28.104.488.488 0 0 1-.127.023c-.112 0-.168-.08-.168-.247v-.391c0-.128.016-.224.056-.28a.597.597 0 0 1 .224-.167c.279-.144.614-.264 1.005-.36a4.84 4.84 0 0 1 1.246-.151c.95 0 1.644.216 2.091.647.439.43.662 1.085.662 1.963v2.586zm-3.24 1.214c.263 0 .534-.048.822-.144.287-.096.543-.271.758-.51.128-.152.224-.32.272-.512.047-.191.08-.423.08-.694v-.335a6.66 6.66 0 0 0-.735-.136 6.02 6.02 0 0 0-.75-.048c-.535 0-.926.104-1.19.32-.263.215-.39.518-.39.917 0 .375.095.655.295.846.191.2.47.296.838.296zm6.41.862c-.144 0-.24-.024-.304-.08-.064-.048-.12-.16-.168-.311L7.586 5.55a1.398 1.398 0 0 1-.072-.32c0-.128.064-.2.191-.2h.783c.151 0 .255.025.31.08.065.048.113.16.16.312l1.342 5.284 1.245-5.284c.04-.16.088-.264.151-.312a.549.549 0 0 1 .32-.08h.638c.152 0 .256.025.32.08.063.048.12.16.151.312l1.261 5.348 1.381-5.348c.048-.16.104-.264.16-.312a.52.52 0 0 1 .311-.08h.743c.127 0 .2.065.2.2 0 .04-.009.08-.017.128a1.137 1.137 0 0 1-.056.2l-1.923 6.17c-.048.16-.104.263-.168.311a.51.51 0 0 1-.303.08h-.687c-.151 0-.255-.024-.32-.08-.063-.056-.119-.16-.15-.32l-1.238-5.148-1.23 5.14c-.04.16-.087.264-.15.32-.065.056-.177.08-.32.08zm10.256.215c-.415 0-.83-.048-1.229-.143-.399-.096-.71-.2-.918-.32-.128-.071-.215-.151-.247-.223a.563.563 0 0 1-.048-.224v-.407c0-.167.064-.247.183-.247.048 0 .096.008.144.024.048.016.12.048.2.08.271.12.566.215.878.279.319.064.63.096.95.096.502 0 .894-.088 1.165-.264a.86.86 0 0 0 .415-.758.777.777 0 0 0-.215-.559c-.144-.151-.416-.287-.807-.415l-1.157-.36c-.583-.183-1.014-.454-1.277-.813a1.902 1.902 0 0 1-.4-1.158c0-.335.073-.63.216-.886.144-.255.335-.479.575-.654.24-.184.51-.32.83-.415.32-.096.655-.136 1.006-.136.175 0 .359.008.535.032.183.024.35.056.518.088.16.04.312.08.455.127.144.048.256.096.336.144a.69.69 0 0 1 .24.2.43.43 0 0 1 .071.263v.375c0 .168-.064.256-.184.256a.83.83 0 0 1-.303-.096 3.652 3.652 0 0 0-1.532-.311c-.455 0-.815.071-1.062.223-.248.152-.375.383-.375.71 0 .224.08.416.24.567.159.152.454.304.877.44l1.134.358c.574.184.99.44 1.237.767.247.327.367.702.367 1.117 0 .343-.072.655-.207.926-.144.272-.336.511-.583.703-.248.2-.543.343-.886.447-.36.111-.734.167-1.142.167zM21.698 16.207c-2.626 1.94-6.442 2.969-9.722 2.969-4.598 0-8.74-1.7-11.87-4.526-.247-.223-.024-.527.272-.351 3.384 1.963 7.559 3.153 11.877 3.153 2.914 0 6.114-.607 9.06-1.852.439-.2.814.287.383.607zM22.792 14.961c-.336-.43-2.22-.207-3.074-.103-.255.032-.295-.192-.063-.36 1.5-1.053 3.967-.75 4.254-.399.287.36-.08 2.826-1.485 4.007-.215.184-.423.088-.327-.151.32-.79 1.03-2.57.695-2.994z"})})}},735:function(s,n,e){"use strict";e.d(n,{Z:function(){return a}});var o=e(5893);function a(s){return(0,o.jsx)("svg",{fill:"currentColor",viewBox:"0 0 24 24",...s,children:(0,o.jsx)("path",{d:"M0 17.57h4.248l-1.316 3.974H0zm0-7.557h6.75l-1.316 3.974H0zm0-7.557h9.252L7.936 6.431H0zm13.44 0H24v3.975H12.123zM9.62 13.987l1.317-3.974H24v3.974zM8.436 17.57H24v3.975H7.119Z"})})}},1686:function(s,n,e){"use strict";e.r(n),e.d(n,{__N_SSG:function(){return h}});var o=e(5893),a=e(1151),t=e(9061),r=e(5404),l=e(1370),i=e(1490),p=e(6393),c=e(735);function d(s){let n=Object.assign({h1:"h1",p:"p",h2:"h2",a:"a",pre:"pre",code:"code",strong:"strong"},(0,a.ah)(),s.components),{Note:e}=n;return e||function(s,n){throw Error("Expected "+(n?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}("Note",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.N,{framework:"Serverless",url:"/docs/frameworks/serverless",icon:(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(c.Z,{className:"h-9 w-9 text-[#FD5750]"}),(0,o.jsx)(p.e,{className:"h-9 w-9 text-[#FF9900]"})]})}),"\n",(0,o.jsx)(n.h1,{children:"Deploy a Serverless App to AWS Lambda"}),"\n",(0,o.jsx)(r.X,{lead:"Deploy a Serverless app with an encrypted .env.vault file to AWS Lambda."}),"\n",(0,o.jsx)(e,{children:(0,o.jsxs)(n.p,{children:["Find a complete ",(0,o.jsx)("a",{href:"https://github.com/dotenv-org/examples/tree/master/serverless/aws-lambda",children:"code example on GitHub"})," for this guide."]})}),"\n",(0,o.jsx)(n.h2,{id:"initial-setup",children:"Initial setup"}),"\n",(0,o.jsxs)(n.p,{children:["Create a ",(0,o.jsx)(n.a,{href:"https://www.npmjs.com/package/serverless",children:"serverless"})," project."]}),"\n",(0,o.jsx)(n.pre,{language:"bash",code:"npx serverless\n",children:(0,o.jsx)(n.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">npx serverless</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(n.p,{children:"Here are the options I selected for this guide. Modify for your own needs."}),"\n",(0,o.jsx)(n.pre,{code:'? What do you want to make? AWS - Node.js - Starter\n? What do you want to call this project? aws-lambda\n? What org do you want to add this service to? dotenv\n? What application do you want to add this to? [create a new app]\n? What do you want to name this application? aws-lambda\n✔ Your project is ready to be deployed to Serverless Dashboard (org: "dotenv", app: "aws-lambda")\n? Do you want to deploy now? Yes\nDeploying aws-lambda to stage dev (us-east-1, "default" provider)\n',children:(0,o.jsx)(n.code,{children:'? What do you want to make? AWS - Node.js - Starter\n? What do you want to call this project? aws-lambda\n? What org do you want to add this service to? dotenv\n? What application do you want to add this to? [create a new app]\n? What do you want to name this application? aws-lambda\n✔ Your project is ready to be deployed to Serverless Dashboard (org: "dotenv", app: "aws-lambda")\n? Do you want to deploy now? Yes\nDeploying aws-lambda to stage dev (us-east-1, "default" provider)\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Edit ",(0,o.jsx)(n.code,{children:"index.js"})," to include ",(0,o.jsx)(n.code,{children:"process.env.HELLO"}),"."]}),"\n",(0,o.jsx)(n.pre,{language:"js",code:"module.exports.handler = async (event) => {\n  return {\n    statusCode: 200,\n    body: JSON.stringify(\n      {\n        message: `Hello ${process.env.HELLO}`,\n        input: event,\n      },\n      null,\n      2\n    ),\n  };\n};\n",children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-constant)">module</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">exports</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-function)">handler</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> (event) </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">    statusCode</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">    body</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">JSON</span><span style="color: var(--shiki-token-function)">.stringify</span><span style="color: var(--shiki-color-text)">(</span></span>\n<span><span style="color: var(--shiki-color-text)">      {</span></span>\n<span><span style="color: var(--shiki-color-text)">        message</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">`Hello </span><span style="color: var(--shiki-token-keyword)">${</span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">HELLO</span><span style="color: var(--shiki-token-keyword)">}</span><span style="color: var(--shiki-token-string-expression)">`</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">        input</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> event</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">      }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-constant)">null</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">      </span><span style="color: var(--shiki-token-constant)">2</span></span>\n<span><span style="color: var(--shiki-color-text)">    )</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">  };</span></span>\n<span><span style="color: var(--shiki-color-text)">};</span></span>\n<span></span>'}),title:"index.js"}),"\n",(0,o.jsx)(n.p,{children:"Deploy that to the cloud."}),"\n",(0,o.jsx)(n.pre,{code:"npx serverless deploy\n",children:(0,o.jsx)(n.code,{children:"npx serverless deploy\n"})}),"\n",(0,o.jsx)(n.p,{children:"Invoke your function."}),"\n",(0,o.jsx)(n.pre,{language:"bash",code:"npx serverless invoke --function function1\n",children:(0,o.jsx)(n.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">npx serverless invoke --function function1</span></span>\n<span></span>'}),title:"Request"}),"\n",(0,o.jsx)(n.pre,{language:"json",code:'{\n    "statusCode": 200,\n    "body": "{\\n  \\"message\\": \\"Hello undefined\\",\\n  \\"input\\": {}\\n}"\n}\n',children:(0,o.jsx)(n.code,{className:"language-json",children:'<span><span style="color: var(--shiki-color-text)">{</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&quot;statusCode&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&quot;body&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;{\\n  \\&quot;message\\&quot;: \\&quot;Hello undefined\\&quot;,\\n  \\&quot;input\\&quot;: {}\\n}&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span></span>\n<span></span>'}),title:"Response"}),"\n",(0,o.jsxs)(n.p,{children:["It will respond with ",(0,o.jsx)(n.code,{children:"Hello undefined"})," as it doesn't have a way to access the environment variable yet. Let's do that next."]}),"\n",(0,o.jsx)(n.h2,{id:"install-dotenv",children:"Install dotenv"}),"\n",(0,o.jsxs)(n.p,{children:["Install ",(0,o.jsx)(n.a,{href:"https://github.com/motdotla/dotenv",children:"dotenv"}),"."]}),"\n",(0,o.jsx)(n.pre,{language:"bash",code:"npm install dotenv --save # Requires dotenv >= 16.1.0\n",children:(0,o.jsx)(n.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">npm install dotenv --save </span><span style="color: var(--shiki-token-comment)"># Requires dotenv &gt;= 16.1.0</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(n.p,{children:["Create a ",(0,o.jsx)(n.code,{children:".env"})," file in the root of your project."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:'# .env\nHELLO="World"\n',children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-token-comment)"># .env</span></span>\n<span><span style="color: var(--shiki-color-text)">HELLO=</span><span style="color: var(--shiki-token-string-expression)">&quot;World&quot;</span></span>\n<span></span>'}),title:".env"}),"\n",(0,o.jsx)(n.p,{children:"As early as possible in your function, import and configure dotenv."}),"\n",(0,o.jsx)(n.pre,{language:"js",code:"require('dotenv').config()\nconsole.log(process.env) // remove this after you've confirmed it is working\n\nmodule.exports.handler = async (event) => {\n...\n",children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv&#39;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-function)">.config</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.env) </span><span style="color: var(--shiki-token-comment)">// remove this after you&#39;ve confirmed it is working</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">module</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">exports</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-function)">handler</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> (event) </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-token-keyword)">...</span></span>\n<span></span>'}),title:"index.js"}),"\n",(0,o.jsx)(n.p,{children:"Test that it is working by invoking your function locally."}),"\n",(0,o.jsx)(n.pre,{language:"bash",code:"npx serverless invoke local --function function1\n",children:(0,o.jsx)(n.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">npx serverless invoke </span><span style="color: var(--shiki-token-keyword)">local</span><span style="color: var(--shiki-color-text)"> --function function1</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(n.p,{children:["It should say ",(0,o.jsx)(n.code,{children:"Hello World"}),"."]}),"\n",(0,o.jsx)(n.pre,{code:'{\n    "statusCode": 200,\n    "body": "{\\n  \\"message\\": \\"Hello World\\",\\n  \\"input\\": {}\\n}"\n}\n',children:(0,o.jsx)(n.code,{children:'{\n    "statusCode": 200,\n    "body": "{\\n  \\"message\\": \\"Hello World\\",\\n  \\"input\\": {}\\n}"\n}\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Great! ",(0,o.jsx)(n.code,{children:"process.env"})," now has the keys and values you defined in your ",(0,o.jsx)(n.code,{children:".env"})," file. That covers local development. Let's solve for production next."]}),"\n",(0,o.jsx)(n.h2,{id:"build-env-vault",children:"Build .env.vault"}),"\n",(0,o.jsxs)(n.p,{children:["Push your latest ",(0,o.jsx)(n.code,{children:".env"})," file changes and edit your production secrets. ",(0,o.jsx)(n.a,{href:"/docs/tutorials/sync",children:"Learn more about syncing"})]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npx dotenv-vault@latest push\nnpx dotenv-vault@latest open production\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest push</span></span>\n<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest open production</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(n.p,{children:"Use the UI to configure those secrets per environment."}),"\n",(0,o.jsx)(l.c,{url:"/assets/img/docs/edit-production-value.gif",www:"www.dotenv.org"}),"\n",(0,o.jsxs)(n.p,{children:["Then build your encrypted ",(0,o.jsx)(n.code,{children:".env.vault"})," file."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npx dotenv-vault@latest build\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest build</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(n.p,{children:"Its contents should look something like this."}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:'#/-------------------.env.vault---------------------/\n#/         cloud-agnostic vaulting standard         /\n#/   [how it works](https://dotenv.org/env-vault)   /\n#/--------------------------------------------------/\n\n# development\nDOTENV_VAULT_DEVELOPMENT="/HqNgQWsf6Oh6XB9pI/CGkdgCe6d4/vWZHgP50RRoDTzkzPQk/xOaQs="\nDOTENV_VAULT_DEVELOPMENT_VERSION=2\n\n# production\nDOTENV_VAULT_PRODUCTION="x26PuIKQ/xZ5eKrYomKngM+dO/9v1vxhwslE/zjHdg3l+H6q6PheB5GVDVIbZg=="\nDOTENV_VAULT_PRODUCTION_VERSION=2\n',children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-token-comment)">#/-------------------.env.vault---------------------/</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/         cloud-agnostic vaulting standard         /</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/   [how it works](https://dotenv.org/env-vault)   /</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/--------------------------------------------------/</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># development</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_DEVELOPMENT=</span><span style="color: var(--shiki-token-string-expression)">&quot;/HqNgQWsf6Oh6XB9pI/CGkdgCe6d4/vWZHgP50RRoDTzkzPQk/xOaQs=&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_DEVELOPMENT_VERSION=2</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># production</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_PRODUCTION=</span><span style="color: var(--shiki-token-string-expression)">&quot;x26PuIKQ/xZ5eKrYomKngM+dO/9v1vxhwslE/zjHdg3l+H6q6PheB5GVDVIbZg==&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_PRODUCTION_VERSION=2</span></span>\n<span></span>'}),title:".env.vault"}),"\n",(0,o.jsx)(n.h2,{id:"set-dotenv-key",children:"Set DOTENV_KEY"}),"\n",(0,o.jsxs)(n.p,{children:["Fetch your production ",(0,o.jsx)(n.code,{children:"DOTENV_KEY"}),"."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npx dotenv-vault@latest keys production\n# outputs: dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest keys production</span></span>\n<span><span style="color: var(--shiki-token-comment)"># outputs: dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(n.p,{children:["Edit your ",(0,o.jsx)(n.code,{children:"serverless.yml"})," file to inject the ",(0,o.jsx)(n.code,{children:"DOTENV_KEY"})," as a param."]}),"\n",(0,o.jsx)(n.pre,{language:"yaml",code:"...\nprovider:\n  name: aws\n  runtime: nodejs18.x\n  environment:\n    DOTENV_KEY: ${param:DOTENV_KEY}\n...\n",children:(0,o.jsx)(n.code,{className:"language-yaml",children:'<span><span style="color: var(--shiki-color-text)">...</span></span>\n<span><span style="color: var(--shiki-token-keyword)">provider</span><span style="color: var(--shiki-token-keyword)">:</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">aws</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">runtime</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">nodejs18.x</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">environment</span><span style="color: var(--shiki-token-keyword)">:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">DOTENV_KEY</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">${param:DOTENV_KEY}</span></span>\n<span><span style="color: var(--shiki-color-text)">...</span></span>\n<span></span>'}),title:"serverless.yml"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Important"}),", additionally, edit your ",(0,o.jsx)(n.code,{children:"serverless.yml"})," file to ignore your ",(0,o.jsx)(n.code,{children:".env*"})," files excepting your ",(0,o.jsx)(n.code,{children:".env.vault"})," file."]}),"\n",(0,o.jsx)(n.pre,{language:"yaml",code:"...\npackage:\n  patterns:\n    - '!.env*'\n    - '.env.vault'\n",children:(0,o.jsx)(n.code,{className:"language-yaml",children:'<span><span style="color: var(--shiki-color-text)">...</span></span>\n<span><span style="color: var(--shiki-token-keyword)">package</span><span style="color: var(--shiki-token-keyword)">:</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">patterns</span><span style="color: var(--shiki-token-keyword)">:</span></span>\n<span><span style="color: var(--shiki-color-text)">    - </span><span style="color: var(--shiki-token-string-expression)">&#39;!.env*&#39;</span></span>\n<span><span style="color: var(--shiki-color-text)">    - </span><span style="color: var(--shiki-token-string-expression)">&#39;.env.vault&#39;</span></span>\n<span></span>'}),title:"serverless.yml"}),"\n",(0,o.jsxs)(n.p,{children:["When complete, your ",(0,o.jsx)(n.code,{children:"serverless.yml"})," file should look something like this."]}),"\n",(0,o.jsx)(n.pre,{language:"yaml",code:"org: dotenv\napp: aws-lambda\nservice: aws-lambda\nframeworkVersion: '3'\n\nprovider:\n  name: aws\n  runtime: nodejs18.x\n  environment:\n    DOTENV_KEY: ${param:DOTENV_KEY}\n\nfunctions:\n  function1:\n    handler: index.handler\n\npackage:\n  patterns:\n    - '!.env*'\n    - '.env.vault'\n",children:(0,o.jsx)(n.code,{className:"language-yaml",children:'<span><span style="color: var(--shiki-token-keyword)">org</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">dotenv</span></span>\n<span><span style="color: var(--shiki-token-keyword)">app</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">aws-lambda</span></span>\n<span><span style="color: var(--shiki-token-keyword)">service</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">aws-lambda</span></span>\n<span><span style="color: var(--shiki-token-keyword)">frameworkVersion</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;3&#39;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">provider</span><span style="color: var(--shiki-token-keyword)">:</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">aws</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">runtime</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">nodejs18.x</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">environment</span><span style="color: var(--shiki-token-keyword)">:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">DOTENV_KEY</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">${param:DOTENV_KEY}</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">functions</span><span style="color: var(--shiki-token-keyword)">:</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">function1</span><span style="color: var(--shiki-token-keyword)">:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">handler</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">index.handler</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">package</span><span style="color: var(--shiki-token-keyword)">:</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">patterns</span><span style="color: var(--shiki-token-keyword)">:</span></span>\n<span><span style="color: var(--shiki-color-text)">    - </span><span style="color: var(--shiki-token-string-expression)">&#39;!.env*&#39;</span></span>\n<span><span style="color: var(--shiki-color-text)">    - </span><span style="color: var(--shiki-token-string-expression)">&#39;.env.vault&#39;</span></span>\n<span></span>'}),title:"serverless.yml"}),"\n",(0,o.jsxs)(n.p,{children:["Using the ",(0,o.jsx)(n.code,{children:"DOTENV_KEY"})," you fetched above, set it as param on the Serverless dashboard."]}),"\n",(0,o.jsx)(l.c,{url:"/assets/img/docs/serverless-config-vars.gif"}),"\n",(0,o.jsx)(n.p,{children:"Deploy to the cloud again."}),"\n",(0,o.jsx)(n.pre,{code:"npx serverless deploy\n",children:(0,o.jsx)(n.code,{children:"npx serverless deploy\n"})}),"\n",(0,o.jsx)(n.p,{children:"Now invoke your function."}),"\n",(0,o.jsx)(n.pre,{language:"bash",code:"npx serverless invoke --function function1\n",children:(0,o.jsx)(n.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">npx serverless invoke --function function1</span></span>\n<span></span>'}),title:"Request"}),"\n",(0,o.jsxs)(n.p,{children:["That's it! On invocation, your ",(0,o.jsx)(n.code,{children:".env.vault"})," file will be decrypted and its production secrets injected as environment variables – just-in-time."]}),"\n",(0,o.jsx)(n.pre,{language:"json",code:'{\n    "statusCode": 200,\n    "body": "{\\n  \\"message\\": \\"Hello production\\",\\n  \\"input\\": {}\\n}"\n}\n',children:(0,o.jsx)(n.code,{className:"language-json",children:'<span><span style="color: var(--shiki-color-text)">{</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&quot;statusCode&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&quot;body&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;{\\n  \\&quot;message\\&quot;: \\&quot;Hello production\\&quot;,\\n  \\&quot;input\\&quot;: {}\\n}&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span></span>\n<span></span>'}),title:"Response"}),"\n",(0,o.jsx)(i.default,{})]})}var h=!0;n.default=function(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),s.components);return n?(0,o.jsx)(n,Object.assign({},s,{children:(0,o.jsx)(d,s)})):d(s)}},1490:function(s,n,e){"use strict";e.r(n),e.d(n,{__N_SSG:function(){return r}});var o=e(5893),a=e(1151);function t(s){let n=Object.assign({p:"p"},(0,a.ah)(),s.components),{Note:e}=n;return e||function(s,n){throw Error("Expected "+(n?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}("Note",!0),(0,o.jsx)(e,{children:(0,o.jsx)(n.p,{children:"You succesfully used the new .env.vault standard to encrypt and deploy your secrets. This is much safer than scattering your secrets across multiple third-party platforms and tools. Whenever you need to add or change a secret, just rebuild your .env.vault file and redeploy."})})}var r=!0;n.default=function(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),s.components);return n?(0,o.jsx)(n,Object.assign({},s,{children:(0,o.jsx)(t,s)})):t(s)}}},function(s){s.O(0,[5675,9774,2888,179],function(){return s(s.s=5837)}),_N_E=s.O()}]);