(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9111],{7567:function(s,n,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/frameworks/gatsby/gatsby-edge",function(){return e(63)}])},9061:function(s,n,e){"use strict";e.d(n,{N:function(){return a}});var o=e(5893);function a(s){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:"flex",children:[(0,o.jsx)("div",{className:"flex-grow",children:(0,o.jsxs)("h5",{children:[(0,o.jsx)("a",{href:"/docs#frameworks",children:"Frameworks"})," ",s.framework?(0,o.jsxs)("span",{children:["â€º ",(0,o.jsx)("a",{href:s.url,children:s.framework})]}):(0,o.jsx)("span",{})]})}),(0,o.jsx)("div",{className:"flex flex-shrink justify-end gap-2",children:s.icon})]})})}},5404:function(s,n,e){"use strict";e.d(n,{X:function(){return a}});var o=e(5893);function a(s){return(0,o.jsx)("p",{className:"lead mt-1",children:s.lead})}},1370:function(s,n,e){"use strict";e.d(n,{c:function(){return r}});var o=e(5893),a=e(5675),t=e.n(a);function r(s){return(0,o.jsx)("div",{className:"w-full p-7 bg-zinc-100 dark:bg-zinc-800 border border-zinc-200 dark:border-zinc-700 rounded-md",children:(0,o.jsxs)("div",{className:"border border-zinc-300 dark:border-zinc-800 text-zinc-100 text-sm subpixel-antialiased rounded-lg leading-normal overflow-hidden shadow-lg",children:[(0,o.jsx)("div",{className:"p-0 bg-zinc-200 dark:bg-black border-b border-zinc-300 dark:border-zinc-800",children:(0,o.jsxs)("div",{className:"flex py-1 px-2",children:[(0,o.jsxs)("div",{className:"flex items-center space-x-1.5",children:[(0,o.jsx)("span",{className:"h-2 w-2 bg-red-500/70 dark:bg-red-500/30 rounded-full"}),(0,o.jsx)("span",{className:"h-2 w-2 bg-orange-300/70 dark:bg-orange-300/30 rounded-full"}),(0,o.jsx)("span",{className:"h-2 w-2 bg-green-500/70 dark:bg-green-500/30 rounded-full"})]}),(0,o.jsx)("div",{className:"text-right w-full text-zinc-400 text-xs",children:s.www})]})}),(0,o.jsx)("div",{className:"p-0",children:(0,o.jsx)("a",{href:s.url,target:"_blank",rel:"noreferrer",className:"hover:brightness-105",children:(0,o.jsx)(t(),{src:s.url,width:"0",height:"0",alt:"",className:"p-0 m-0 w-full",unoptimized:!0})})})]})})}},9067:function(s,n,e){"use strict";e.d(n,{f:function(){return a}});var o=e(5893);function a(s){return(0,o.jsx)("svg",{fill:"currentColor",role:"img",viewBox:"0 0 24 24",...s,children:(0,o.jsx)("path",{d:"M12 0C5.4 0 0 5.4 0 12s5.4 12 12 12 12-5.4 12-12S18.6 0 12 0zm0 2.571c3.171 0 5.915 1.543 7.629 3.858l-1.286 1.115C16.886 5.572 14.571 4.286 12 4.286c-3.343 0-6.171 2.143-7.286 5.143l9.857 9.857c2.486-.857 4.373-3 4.973-5.572h-4.115V12h6c0 4.457-3.172 8.228-7.372 9.17L2.83 9.944C3.772 5.743 7.543 2.57 12 2.57zm-9.429 9.6l9.344 9.258c-2.4-.086-4.801-.943-6.601-2.743-1.8-1.8-2.743-4.201-2.743-6.515z"})})}},63:function(s,n,e){"use strict";e.r(n),e.d(n,{__N_SSG:function(){return d}});var o=e(5893),a=e(1151),t=e(1490),r=e(1370),l=e(5404),i=e(9061),p=e(9067);function c(s){let n=Object.assign({h1:"h1",p:"p",h2:"h2",pre:"pre",code:"code",strong:"strong",a:"a"},(0,a.ah)(),s.components),{Note:e}=n;return e||function(s,n){throw Error("Expected "+(n?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}("Note",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.N,{framework:"Gatsby",url:"/docs/frameworks/gatsby",icon:(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(p.f,{className:"h-9 w-9 text-[#663399]"}),(0,o.jsx)(p.f,{className:"h-9 w-9 text-[#663399]"})]})}),"\n",(0,o.jsx)(n.h1,{children:"Deploy a Gatsby.js App to Gatsby Edge Network"}),"\n",(0,o.jsx)(l.X,{lead:"Deploy a Gatsby.js app with an encrypted .env.vault file to Gatsby Edge."}),"\n",(0,o.jsx)(e,{children:(0,o.jsxs)(n.p,{children:["Find a complete ",(0,o.jsx)("a",{href:"https://github.com/dotenv-org/examples/tree/master/gatsby/gatsby-edge",children:"code example on GitHub"})," for this guide."]})}),"\n",(0,o.jsx)(n.h2,{id:"initial-setup",children:"Initial setup"}),"\n",(0,o.jsx)(n.p,{children:"Generate a gatsby.js application."}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npm init gatsby\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npm init gatsby</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(n.p,{children:"This will create a handful of files."}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"ls -1\nREADME.md\ngatsby-config.js\nnode_modules/\npackage-lock.json\npackage.json\nsrc/\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">ls -1</span></span>\n<span><span style="color: var(--shiki-color-text)">README.md</span></span>\n<span><span style="color: var(--shiki-color-text)">gatsby-config.js</span></span>\n<span><span style="color: var(--shiki-color-text)">node_modules/</span></span>\n<span><span style="color: var(--shiki-color-text)">package-lock.json</span></span>\n<span><span style="color: var(--shiki-color-text)">package.json</span></span>\n<span><span style="color: var(--shiki-color-text)">src/</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(n.p,{children:["Install the latest dotenv. This is ",(0,o.jsx)(n.strong,{children:"important"})," because the Gatsby framework is currently using an ",(0,o.jsx)(n.a,{href:"https://github.com/gatsbyjs/gatsby/blob/fd8de341684df7aa5fcd911a25786beac471925c/benchmarks/mdx/package.json#L23",children:"old version"})," of dotenv without ",(0,o.jsx)(n.code,{children:".env.vault"})," support."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npm install dotenv --save\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npm install dotenv --save</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(n.p,{children:["Edit ",(0,o.jsx)(n.code,{children:"src/pages/index.js"})," to the following."]}),"\n",(0,o.jsx)(n.pre,{language:"js",code:'import * as React from "react"\n\nconst IndexPage = () => {\n  return (\n    <div>Hello {process.env.GATSBY_HELLO}.</div>\n  )\n}\n\nexport default IndexPage\n',children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">*</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">as</span><span style="color: var(--shiki-color-text)"> React </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;react&quot;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">IndexPage</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">return</span><span style="color: var(--shiki-color-text)"> (</span></span>\n<span><span style="color: var(--shiki-color-text)">    &lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;Hello {</span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">GATSBY_HELLO</span><span style="color: var(--shiki-color-text)">}.&lt;/</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-color-text)">&gt;</span></span>\n<span><span style="color: var(--shiki-color-text)">  )</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">export</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">default</span><span style="color: var(--shiki-color-text)"> IndexPage</span></span>\n<span></span>'}),title:"src/pages/index.js"}),"\n",(0,o.jsxs)(n.p,{children:["Require dotenv at the top of ",(0,o.jsx)(n.code,{children:"gatsby-config.js"}),"."]}),"\n",(0,o.jsx)(n.pre,{language:"js",code:"/**\n * @type {import('gatsby').GatsbyConfig}\n */\nrequire('dotenv').config()\nconsole.log(process.env) // for debugging purposes. remove when ready.\n\nmodule.exports = {\n  siteMetadata: {\n    title: `gatsby-edge`,\n    siteUrl: `https://www.yourdomain.tld`,\n  },\n  plugins: [],\n}\n",children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">/**</span></span>\n<span><span style="color: var(--shiki-token-comment)"> * </span><span style="color: var(--shiki-token-keyword)">@type</span><span style="color: var(--shiki-token-comment)"> </span><span style="color: var(--shiki-token-function)">{import(&#39;gatsby&#39;).GatsbyConfig}</span></span>\n<span><span style="color: var(--shiki-token-comment)"> */</span></span>\n<span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv&#39;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-function)">.config</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.env) </span><span style="color: var(--shiki-token-comment)">// for debugging purposes. remove when ready.</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">module</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">exports</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">  siteMetadata</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">    title</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">`gatsby-edge`</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">    siteUrl</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">`https://www.yourdomain.tld`</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">  }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">  plugins</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> []</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span></span>\n<span></span>'}),title:"gatsby-config.js"}),"\n",(0,o.jsxs)(n.p,{children:["Create ",(0,o.jsx)(n.code,{children:".env"})," file."]}),"\n",(0,o.jsx)(n.pre,{language:"bash",code:'# .env\nGATSBY_HELLO="World"\n',children:(0,o.jsx)(n.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-token-comment)"># .env</span></span>\n<span><span style="color: var(--shiki-color-text)">GATSBY_HELLO=</span><span style="color: var(--shiki-token-string-expression)">&quot;World&quot;</span></span>\n<span></span>'}),title:".env"}),"\n",(0,o.jsx)(n.p,{children:"Run Gatsby."}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npm run develop\nstarted server on http://localhost:8000/\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npm run develop</span></span>\n<span><span style="color: var(--shiki-color-text)">started server on http://localhost:8000/</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(n.p,{children:["Visit ",(0,o.jsx)(n.a,{href:"http://localhost:8000",children:"localhost:8000"})]}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/nextjs-hello-world.png"}),"\n",(0,o.jsxs)(n.p,{children:["Perfect. ",(0,o.jsx)(n.code,{children:"process.env"})," now has the keys and values you defined in your ",(0,o.jsx)(n.code,{children:".env"})," file."]}),"\n",(0,o.jsx)(n.p,{children:"That covers local development. Let's solve for production next."}),"\n",(0,o.jsx)(n.h2,{id:"build-env-vault",children:"Build .env.vault"}),"\n",(0,o.jsxs)(n.p,{children:["Push your latest ",(0,o.jsx)(n.code,{children:".env"})," file changes and edit your production secrets. ",(0,o.jsx)(n.a,{href:"/docs/tutorials/sync",children:"Learn more about syncing"})]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npx dotenv-vault@latest push\nnpx dotenv-vault@latest open production\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest push</span></span>\n<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest open production</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(n.p,{children:"Use the UI to configure those secrets per environment."}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/edit-gatsby-hello.gif",www:"dotenv.org"}),"\n",(0,o.jsxs)(n.p,{children:["Then build your encrypted ",(0,o.jsx)(n.code,{children:".env.vault"})," file."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npx dotenv-vault@latest build\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest build</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(n.p,{children:"Its contents should look something like this."}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:'#/-------------------.env.vault---------------------/\n#/         cloud-agnostic vaulting standard         /\n#/   [how it works](https://dotenv.org/env-vault)   /\n#/--------------------------------------------------/\n\n# development\nDOTENV_VAULT_DEVELOPMENT="/HqNgQWsf6Oh6XB9pI/CGkdgCe6d4/vWZHgP50RRoDTzkzPQk/xOaQs="\nDOTENV_VAULT_DEVELOPMENT_VERSION=2\n\n# production\nDOTENV_VAULT_PRODUCTION="x26PuIKQ/xZ5eKrYomKngM+dO/9v1vxhwslE/zjHdg3l+H6q6PheB5GVDVIbZg=="\nDOTENV_VAULT_PRODUCTION_VERSION=2\n',children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-token-comment)">#/-------------------.env.vault---------------------/</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/         cloud-agnostic vaulting standard         /</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/   [how it works](https://dotenv.org/env-vault)   /</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/--------------------------------------------------/</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># development</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_DEVELOPMENT=</span><span style="color: var(--shiki-token-string-expression)">&quot;/HqNgQWsf6Oh6XB9pI/CGkdgCe6d4/vWZHgP50RRoDTzkzPQk/xOaQs=&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_DEVELOPMENT_VERSION=2</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># production</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_PRODUCTION=</span><span style="color: var(--shiki-token-string-expression)">&quot;x26PuIKQ/xZ5eKrYomKngM+dO/9v1vxhwslE/zjHdg3l+H6q6PheB5GVDVIbZg==&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_PRODUCTION_VERSION=2</span></span>\n<span></span>'}),title:".env.vault"}),"\n",(0,o.jsx)(n.h2,{id:"set-dotenv-key",children:"Set DOTENV_KEY"}),"\n",(0,o.jsxs)(n.p,{children:["Fetch your production ",(0,o.jsx)(n.code,{children:"DOTENV_KEY"}),"."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npx dotenv-vault@latest keys production\n# outputs: dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest keys production</span></span>\n<span><span style="color: var(--shiki-token-comment)"># outputs: dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(n.p,{children:["Test production ",(0,o.jsx)(n.code,{children:"DOTENV_KEY"})," locally using the CLI."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"DOTENV_KEY='dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production' npm run develop\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">DOTENV_KEY=</span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production&#39;</span><span style="color: var(--shiki-color-text)"> npm run develop</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/hello-production.png"}),"\n",(0,o.jsx)(n.p,{children:"Next set up your site on Gatsby Edge and then set the DOTENV_KEY as an environment variable."}),"\n",(0,o.jsx)(e,{children:(0,o.jsxs)(n.p,{children:["Gatsby has an ",(0,o.jsx)(n.a,{href:"https://www.gatsbyjs.com/docs/tutorial/getting-started/part-1/",children:"easy to follow tutorial"})," for deploying to their edge network."]})}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/gatsby-config-vars.png"}),"\n",(0,o.jsx)(n.h2,{id:"deploy",children:"Deploy"}),"\n",(0,o.jsx)(n.p,{children:"Commit those changes safely to code and deploy."}),"\n",(0,o.jsxs)(n.p,{children:["That's it! When the build runs, your ",(0,o.jsx)(n.code,{children:".env.vault"})," file will be decrypted and its production secrets injected as environment variables â€“ just-in-time."]}),"\n",(0,o.jsxs)(n.p,{children:["You'll know things worked correctly when you see ",(0,o.jsx)(n.code,{children:"'Loading env from encrypted .env.vault'"})," in your logs. If a ",(0,o.jsx)(n.code,{children:"DOTENV_KEY"})," is not set (for example when developing on your local machine) it will fall back to standard ",(0,o.jsx)(n.a,{href:"https://github.com/motdotla/dotenv",children:"dotenv"})," functionality."]}),"\n",(0,o.jsxs)(n.p,{children:["If successful you'll see the message ",(0,o.jsx)(n.code,{children:"Loading env from encrypted .env.vault"})," in your Gatsby Edge Network logs."]}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/gatsby-logs-vault.png",www:"gatsbyjs.com/dashboard"}),"\n",(0,o.jsx)(t.default,{})]})}var d=!0;n.default=function(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),s.components);return n?(0,o.jsx)(n,Object.assign({},s,{children:(0,o.jsx)(c,s)})):c(s)}},1490:function(s,n,e){"use strict";e.r(n),e.d(n,{__N_SSG:function(){return r}});var o=e(5893),a=e(1151);function t(s){let n=Object.assign({p:"p"},(0,a.ah)(),s.components),{Note:e}=n;return e||function(s,n){throw Error("Expected "+(n?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}("Note",!0),(0,o.jsx)(e,{children:(0,o.jsx)(n.p,{children:"You succesfully used the new .env.vault standard to encrypt and deploy your secrets. This is much safer than scattering your secrets across multiple third-party platforms and tools. Whenever you need to add or change a secret, just rebuild your .env.vault file and redeploy."})})}var r=!0;n.default=function(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),s.components);return n?(0,o.jsx)(n,Object.assign({},s,{children:(0,o.jsx)(t,s)})):t(s)}}},function(s){s.O(0,[5675,9774,2888,179],function(){return s(s.s=7567)}),_N_E=s.O()}]);