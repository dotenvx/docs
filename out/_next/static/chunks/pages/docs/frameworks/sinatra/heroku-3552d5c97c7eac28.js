(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5555],{2826:function(n,s,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/frameworks/sinatra/heroku",function(){return e(8286)}])},9061:function(n,s,e){"use strict";e.d(s,{N:function(){return o}});var a=e(5893);function o(n){return(0,a.jsx)(a.Fragment,{children:(0,a.jsxs)("div",{className:"flex",children:[(0,a.jsx)("div",{className:"flex-grow",children:(0,a.jsxs)("h5",{children:[(0,a.jsx)("a",{href:"/docs#frameworks",children:"Frameworks"})," ",n.framework?(0,a.jsxs)("span",{children:["â€º ",(0,a.jsx)("a",{href:n.url,children:n.framework})]}):(0,a.jsx)("span",{})]})}),(0,a.jsx)("div",{className:"flex flex-shrink justify-end gap-2",children:n.icon})]})})}},5404:function(n,s,e){"use strict";e.d(s,{X:function(){return o}});var a=e(5893);function o(n){return(0,a.jsx)("p",{className:"lead mt-1",children:n.lead})}},1370:function(n,s,e){"use strict";e.d(s,{c:function(){return t}});var a=e(5893),o=e(5675),r=e.n(o);function t(n){return(0,a.jsx)("div",{className:"w-full p-7 bg-zinc-100 dark:bg-zinc-800 border border-zinc-200 dark:border-zinc-700 rounded-md",children:(0,a.jsxs)("div",{className:"border border-zinc-300 dark:border-zinc-800 text-zinc-100 text-sm subpixel-antialiased rounded-lg leading-normal overflow-hidden shadow-lg",children:[(0,a.jsx)("div",{className:"p-0 bg-zinc-200 dark:bg-black border-b border-zinc-300 dark:border-zinc-800",children:(0,a.jsxs)("div",{className:"flex py-1 px-2",children:[(0,a.jsxs)("div",{className:"flex items-center space-x-1.5",children:[(0,a.jsx)("span",{className:"h-2 w-2 bg-red-500/70 dark:bg-red-500/30 rounded-full"}),(0,a.jsx)("span",{className:"h-2 w-2 bg-orange-300/70 dark:bg-orange-300/30 rounded-full"}),(0,a.jsx)("span",{className:"h-2 w-2 bg-green-500/70 dark:bg-green-500/30 rounded-full"})]}),(0,a.jsx)("div",{className:"text-right w-full text-zinc-400 text-xs",children:n.www})]})}),(0,a.jsx)("div",{className:"p-0",children:(0,a.jsx)("a",{href:n.url,target:"_blank",rel:"noreferrer",className:"hover:brightness-105",children:(0,a.jsx)(r(),{src:n.url,width:"0",height:"0",alt:"",className:"p-0 m-0 w-full",unoptimized:!0})})})]})})}},9422:function(n,s,e){"use strict";e.d(s,{P:function(){return o}});var a=e(5893);function o(n){return(0,a.jsx)("svg",{viewBox:"0 0 24 24",fill:"currentColor","aria-hidden":"true",...n,children:(0,a.jsx)("path",{d:"M20.61 0H3.39C2.189 0 1.23.96 1.23 2.16v19.681c0 1.198.959 2.159 2.16 2.159h17.22c1.2 0 2.159-.961 2.159-2.159V2.16C22.77.96 21.811 0 20.61 0zm.96 21.841c0 .539-.421.96-.96.96H3.39c-.54 0-.96-.421-.96-.96V2.16c0-.54.42-.961.96-.961h17.22c.539 0 .96.421.96.961v19.681zM6.63 20.399L9.33 18l-2.7-2.4v4.799zm9.72-9.719c-.479-.48-1.379-1.08-2.879-1.08-1.621 0-3.301.421-4.5.84V3.6h-2.4v10.38l1.68-.78s2.76-1.26 5.16-1.26c1.2 0 1.5.66 1.5 1.26v7.2h2.4v-7.2c.059-.179.059-1.501-.961-2.52zM13.17 7.5h2.4c1.08-1.26 1.62-2.521 1.8-3.9h-2.399c-.241 1.379-.841 2.64-1.801 3.9z"})})}},8006:function(n,s,e){"use strict";e.d(s,{Z:function(){return o}});var a=e(5893);function o(n){return(0,a.jsx)("svg",{fill:"currentColor",viewBox:"0 0 24 24",...n,children:(0,a.jsx)("path",{d:"M5.224 10.525c-1.215.4-3.32 1.384-3.943 1.934-.069.06-.138.125-.207.194-.49.43-.76.851-.89 1.285A4.423 4.423 0 0 0 0 15.208c-.005.842.247 1.369.247 1.369.714 1.428 2.416 2.4 4.21 2.963 1.777.593 5.622.289 7.521.046 5.091-.684 8.389-1.657 10.319-3.237C23.924 15.042 24 13.644 24 13.127c0-.06-.007-.134-.02-.219-.032-.553-.258-1.62-1.49-2.38a2.96 2.96 0 0 0-.33-.197c-.125-.065-.25-.127-.375-.186l-.035-.027-.191-.078a12.313 12.313 0 0 0-.629-.264c-.515-.225-.971-.387-1.372-.477a69.929 69.929 0 0 1-.041-1.703c0-.7-.244-1.08-.441-1.277-.12-.119-.557-.265-.997-.4a19.118 19.118 0 0 0-.93-.287 4.657 4.657 0 0 0-.079-.027v.005l-.417-.12h-.001l-.448-.128a1.5 1.5 0 0 1-.094-.015l-.033-.01a2.161 2.161 0 0 0-.07-.02l-.028-.008a64.267 64.267 0 0 1-.641-.19 1.72 1.72 0 0 1-.091-.012v-.003a51.125 51.125 0 0 1-.213-.057v-.004a30.91 30.91 0 0 0-.32-.09v-.001a17.568 17.568 0 0 0-.669-.167 70.288 70.288 0 0 0-2.689-.502c-.182-.046-1.367-.152-1.367-.152a5.944 5.944 0 0 0-1.106.023 4.01 4.01 0 0 0-.779.19c-.113.024-.245.103-.383.216a1.363 1.363 0 0 0-.177.146l-.002.002a4.226 4.226 0 0 0-.125.12l-.007.008c-.217.217-.36.412-.454.584-.174.249-.304.479-.341.61-.032.119-.129.578-.228 1.044-.091.432-.184.871-.228 1.054-.048.2-.334.906-.601 1.567-.124.304-.243.598-.334.83Zm14.384.642c0-.06.076-.06.076.015 0 0 0 .016-.003.036a.092.092 0 0 1 .003.025c0 .03 0 .456-.03.957-.008.137-.02.281-.031.426-.011.144-.023.289-.03.425-.007.225-.008.431-.007.59.007.154.007.246.007.246v.106c0 .259-.152.593-.396.745l-.04.026h-.001l-.021.013c-.115.088-.251.166-.409.23-.22.106-.516.223-.942.339-.836.243-1.459.35-1.869.395-1.003.122-2.188.182-3.601.182-.29 0-1.414 0-1.687-.015-3.739-.106-5.988-1.23-5.988-2.036v-.106s.32-2.478.32-2.63c0-.151.09-.273.09-.182v.06c0 .03 0 .061.002.093.002.01.005.018.008.025.003.007.006.013.006.02.32 1.018 3.45 1.717 7.279 1.717h.638l.205-.003h.001c1.15-.012 3.818-.042 5.842-.954.35-.228.578-.456.578-.745z"})})}},8286:function(n,s,e){"use strict";e.r(s),e.d(s,{__N_SSG:function(){return h}});var a=e(5893),o=e(1151),r=e(1490),t=e(1370),l=e(5404),i=e(9061),c=e(9422),p=e(8006);function d(n){let s=Object.assign({h1:"h1",p:"p",h2:"h2",a:"a",pre:"pre",code:"code"},(0,o.ah)(),n.components),{Note:e}=s;return e||function(n,s){throw Error("Expected "+(s?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Note",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.N,{framework:"Sinatra",url:"/docs#frameworks",icon:(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(p.Z,{className:"h-9 w-9 text-[#000000] dark:invert"}),(0,a.jsx)(c.P,{className:"h-9 w-9 text-[#430098]"})]})}),"\n",(0,a.jsx)(s.h1,{children:"Deploy a Sinatra App to Heroku"}),"\n",(0,a.jsx)(l.X,{lead:"Deploy a Sinatra app with an encrypted .env.vault file to Heroku."}),"\n",(0,a.jsx)(e,{children:(0,a.jsxs)(s.p,{children:["Find a complete ",(0,a.jsx)("a",{href:"https://github.com/dotenv-org/examples/tree/master/sinatra/heroku",children:"code example on GitHub"})," for this guide."]})}),"\n",(0,a.jsx)(s.h2,{id:"initial-setup",children:"Initial setup"}),"\n",(0,a.jsxs)(s.p,{children:["Install ",(0,a.jsx)(s.a,{href:"https://github.com/sinatra/sinatra",children:"sinatra"})," and ",(0,a.jsx)(s.a,{href:"https://github.com/rack/rackup",children:"rackup"})," to your Gemfile."]}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:"bundle add sinatra rackup\n",children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">bundle add sinatra rackup</span></span>\n<span></span>'})}),"\n",(0,a.jsx)(s.p,{children:"Your Gemfile should look something like this."}),"\n",(0,a.jsx)(s.pre,{language:"ruby",code:'source "https://rubygems.org"\n\ngem "sinatra", "~> 3.0"\ngem "rackup", "~> 1.0"\n',children:(0,a.jsx)(s.code,{className:"language-ruby",children:'<span><span style="color: var(--shiki-color-text)">source </span><span style="color: var(--shiki-token-string-expression)">&quot;https://rubygems.org&quot;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">gem </span><span style="color: var(--shiki-token-string-expression)">&quot;sinatra&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;~&gt; 3.0&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">gem </span><span style="color: var(--shiki-token-string-expression)">&quot;rackup&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;~&gt; 1.0&quot;</span></span>\n<span></span>'}),title:"Gemfile"}),"\n",(0,a.jsxs)(s.p,{children:["Create an ",(0,a.jsx)(s.code,{children:"index.rb"})," file with the web server code."]}),"\n",(0,a.jsx)(s.pre,{language:"ruby",code:'require "sinatra"\n\nget "/" do\n  "Hello #{ENV["HELLO"]}."\nend\n',children:(0,a.jsx)(s.code,{className:"language-ruby",children:'<span><span style="color: var(--shiki-token-keyword)">require</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;sinatra&quot;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">get </span><span style="color: var(--shiki-token-string-expression)">&quot;/&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">do</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-string-expression)">&quot;Hello </span><span style="color: var(--shiki-token-string-expression)">#{</span><span style="color: var(--shiki-token-constant)">ENV</span><span style="color: var(--shiki-token-string-expression)">[</span><span style="color: var(--shiki-token-string-expression)">&quot;HELLO&quot;</span><span style="color: var(--shiki-token-string-expression)">]}</span><span style="color: var(--shiki-token-string-expression)">.&quot;</span></span>\n<span><span style="color: var(--shiki-token-keyword)">end</span></span>\n<span></span>'}),title:"index.rb"}),"\n",(0,a.jsxs)(s.p,{children:["Create your ",(0,a.jsx)(s.code,{children:"config.ru"})," file."]}),"\n",(0,a.jsx)(s.pre,{language:"ruby",code:'require "./index"\nrun Sinatra::Application\n',children:(0,a.jsx)(s.code,{className:"language-ruby",children:'<span><span style="color: var(--shiki-token-keyword)">require</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;./index&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">run </span><span style="color: var(--shiki-token-constant)">Sinatra</span><span style="color: var(--shiki-token-punctuation)">::</span><span style="color: var(--shiki-token-constant)">Application</span></span>\n<span></span>'}),title:"config.ru"}),"\n",(0,a.jsxs)(s.p,{children:["Add a ",(0,a.jsx)(s.code,{children:"Procfile"})," to run your app on Heroku."]}),"\n",(0,a.jsx)(s.pre,{language:"yaml",code:'web: APP_ENV=production bundle exec rackup -p "$PORT"\n',children:(0,a.jsx)(s.code,{className:"language-yaml",children:'<span><span style="color: var(--shiki-token-keyword)">web</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">APP_ENV=production bundle exec rackup -p &quot;$PORT&quot;</span></span>\n<span></span>'}),title:"Procfile"}),"\n",(0,a.jsx)(s.p,{children:"Commit that to code and push it to Heroku."}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:"heroku create\ngit push heroku\n",children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">heroku create</span></span>\n<span><span style="color: var(--shiki-color-text)">git push heroku</span></span>\n<span></span>'})}),"\n",(0,a.jsx)(t.c,{url:"/assets/img/docs/hello-blank.png",www:"yourapp.herokuapp.com"}),"\n",(0,a.jsxs)(s.p,{children:["Once deployed, your app will say ",(0,a.jsx)(s.code,{children:"'Hello .'"})," as it doesn't have a way to access the environment variable yet. Let's do that next."]}),"\n",(0,a.jsx)(s.h2,{id:"install-dotenv-vault",children:"Install dotenv-vault"}),"\n",(0,a.jsxs)(s.p,{children:["Install ",(0,a.jsx)(s.a,{href:"https://github.com/dotenv-org/dotenv-vault-ruby",children:(0,a.jsx)(s.code,{children:"dotenv-vault"})}),"."]}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:"bundle add dotenv-vault\n",children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">bundle add dotenv-vault</span></span>\n<span></span>'})}),"\n",(0,a.jsxs)(s.p,{children:["Create a ",(0,a.jsx)(s.code,{children:".env"})," file in the root of your project."]}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:'# .env\nHELLO="World"\n',children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-token-comment)"># .env</span></span>\n<span><span style="color: var(--shiki-color-text)">HELLO=</span><span style="color: var(--shiki-token-string-expression)">&quot;World&quot;</span></span>\n<span></span>'}),title:".env"}),"\n",(0,a.jsx)(s.p,{children:"As early as possible in your application, require and load dotenv-vault."}),"\n",(0,a.jsx)(s.pre,{language:"ruby",code:'require "dotenv-vault/load"\nrequire "sinatra"\n\nget "/" do\n  "Hello #{ENV["HELLO"]}."\nend\n',children:(0,a.jsx)(s.code,{className:"language-ruby",children:'<span><span style="color: var(--shiki-token-keyword)">require</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;dotenv-vault/load&quot;</span></span>\n<span><span style="color: var(--shiki-token-keyword)">require</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;sinatra&quot;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">get </span><span style="color: var(--shiki-token-string-expression)">&quot;/&quot;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">do</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-string-expression)">&quot;Hello </span><span style="color: var(--shiki-token-string-expression)">#{</span><span style="color: var(--shiki-token-constant)">ENV</span><span style="color: var(--shiki-token-string-expression)">[</span><span style="color: var(--shiki-token-string-expression)">&quot;HELLO&quot;</span><span style="color: var(--shiki-token-string-expression)">]}</span><span style="color: var(--shiki-token-string-expression)">.&quot;</span></span>\n<span><span style="color: var(--shiki-token-keyword)">end</span></span>\n<span></span>'}),title:"index.rb"}),"\n",(0,a.jsx)(s.p,{children:"Try running it locally."}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:"ruby index.rb\n== Sinatra (v3.0.6) has taken the stage on 4567 for development with backup from Puma\n* Listening on http://127.0.0.1:4567\n",children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">ruby index.rb</span></span>\n<span><span style="color: var(--shiki-color-text)">== Sinatra (v3.0.6) has taken the stage on 4567 </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-color-text)"> development with backup from Puma</span></span>\n<span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> Listening on http://127.0.0.1:4567</span></span>\n<span></span>'})}),"\n",(0,a.jsxs)(s.p,{children:["It should say ",(0,a.jsx)(s.code,{children:"Hello World"}),"."]}),"\n",(0,a.jsx)(t.c,{url:"/assets/img/docs/nextjs-hello-world.png"}),"\n",(0,a.jsxs)(s.p,{children:["Great! ",(0,a.jsx)(s.code,{children:"ENV"})," now has the keys and values you defined in your ",(0,a.jsx)(s.code,{children:".env"})," file. That covers local development. Let's solve for production next."]}),"\n",(0,a.jsx)(s.h2,{id:"build-env-vault",children:"Build .env.vault"}),"\n",(0,a.jsxs)(s.p,{children:["Push your latest ",(0,a.jsx)(s.code,{children:".env"})," file changes and edit your production secrets. ",(0,a.jsx)(s.a,{href:"/docs/tutorials/sync",children:"Learn more about syncing"})]}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:"npx dotenv-vault@latest push\nnpx dotenv-vault@latest open production\n",children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest push</span></span>\n<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest open production</span></span>\n<span></span>'})}),"\n",(0,a.jsx)(s.p,{children:"Use the UI to configure those secrets per environment."}),"\n",(0,a.jsx)(t.c,{url:"/assets/img/docs/edit-production-value.gif",www:"www.dotenv.org"}),"\n",(0,a.jsxs)(s.p,{children:["Then build your encrypted ",(0,a.jsx)(s.code,{children:".env.vault"})," file."]}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:"npx dotenv-vault@latest build\n",children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest build</span></span>\n<span></span>'})}),"\n",(0,a.jsx)(s.p,{children:"Its contents should look something like this."}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:'#/-------------------.env.vault---------------------/\n#/         cloud-agnostic vaulting standard         /\n#/   [how it works](https://dotenv.org/env-vault)   /\n#/--------------------------------------------------/\n\n# development\nDOTENV_VAULT_DEVELOPMENT="/HqNgQWsf6Oh6XB9pI/CGkdgCe6d4/vWZHgP50RRoDTzkzPQk/xOaQs="\nDOTENV_VAULT_DEVELOPMENT_VERSION=2\n\n# production\nDOTENV_VAULT_PRODUCTION="x26PuIKQ/xZ5eKrYomKngM+dO/9v1vxhwslE/zjHdg3l+H6q6PheB5GVDVIbZg=="\nDOTENV_VAULT_PRODUCTION_VERSION=2\n',children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-token-comment)">#/-------------------.env.vault---------------------/</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/         cloud-agnostic vaulting standard         /</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/   [how it works](https://dotenv.org/env-vault)   /</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/--------------------------------------------------/</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># development</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_DEVELOPMENT=</span><span style="color: var(--shiki-token-string-expression)">&quot;/HqNgQWsf6Oh6XB9pI/CGkdgCe6d4/vWZHgP50RRoDTzkzPQk/xOaQs=&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_DEVELOPMENT_VERSION=2</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># production</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_PRODUCTION=</span><span style="color: var(--shiki-token-string-expression)">&quot;x26PuIKQ/xZ5eKrYomKngM+dO/9v1vxhwslE/zjHdg3l+H6q6PheB5GVDVIbZg==&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_PRODUCTION_VERSION=2</span></span>\n<span></span>'}),title:".env.vault"}),"\n",(0,a.jsx)(s.h2,{id:"set-dotenv-key",children:"Set DOTENV_KEY"}),"\n",(0,a.jsxs)(s.p,{children:["Fetch your production ",(0,a.jsx)(s.code,{children:"DOTENV_KEY"}),"."]}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:"npx dotenv-vault@latest keys production\n# outputs: dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production\n",children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest keys production</span></span>\n<span><span style="color: var(--shiki-token-comment)"># outputs: dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production</span></span>\n<span></span>'})}),"\n",(0,a.jsxs)(s.p,{children:["Set ",(0,a.jsx)(s.code,{children:"DOTENV_KEY"})," on Heroku using the CLI."]}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:"heroku config:set DOTENV_KEY='dotenv://:key_1234â€¦@dotenv.org/vault/.env.vault?environment=production'\n",children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">heroku config:set DOTENV_KEY=</span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv://:key_1234â€¦@dotenv.org/vault/.env.vault?environment=production&#39;</span></span>\n<span></span>'})}),"\n",(0,a.jsx)(s.p,{children:"Or use Heroku's UI."}),"\n",(0,a.jsx)(t.c,{url:"/assets/img/docs/heroku-config-vars.png",www:"www.heroku.com"}),"\n",(0,a.jsx)(s.h2,{id:"deploy",children:"Deploy"}),"\n",(0,a.jsx)(s.p,{children:"Commit those changes safely to code and deploy."}),"\n",(0,a.jsxs)(s.p,{children:["That's it! On deploy, your ",(0,a.jsx)(s.code,{children:".env.vault"})," file will be decrypted and its production secrets injected as environment variablesâ€š just in time."]}),"\n",(0,a.jsx)(t.c,{url:"/assets/img/docs/hello-production.png",www:"yourapp.herokuapp.com"}),"\n",(0,a.jsxs)(s.p,{children:["If a ",(0,a.jsx)(s.code,{children:"DOTENV_KEY"})," is not set (for example when developing on your local machine) it will fall back to standard ",(0,a.jsx)(s.a,{href:"https://github.com/bkeepers/dotenv",children:"dotenv"})," functionality."]}),"\n",(0,a.jsx)(r.default,{})]})}var h=!0;s.default=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,o.ah)(),n.components);return s?(0,a.jsx)(s,Object.assign({},n,{children:(0,a.jsx)(d,n)})):d(n)}},1490:function(n,s,e){"use strict";e.r(s),e.d(s,{__N_SSG:function(){return t}});var a=e(5893),o=e(1151);function r(n){let s=Object.assign({p:"p"},(0,o.ah)(),n.components),{Note:e}=s;return e||function(n,s){throw Error("Expected "+(s?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Note",!0),(0,a.jsx)(e,{children:(0,a.jsx)(s.p,{children:"You succesfully used the new .env.vault standard to encrypt and deploy your secrets. This is much safer than scattering your secrets across multiple third-party platforms and tools. Whenever you need to add or change a secret, just rebuild your .env.vault file and redeploy."})})}var t=!0;s.default=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,o.ah)(),n.components);return s?(0,a.jsx)(s,Object.assign({},n,{children:(0,a.jsx)(r,n)})):r(n)}}},function(n){n.O(0,[5675,9774,2888,179],function(){return n(n.s=2826)}),_N_E=n.O()}]);