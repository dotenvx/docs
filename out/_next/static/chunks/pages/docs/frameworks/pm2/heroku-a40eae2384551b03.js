(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4961],{6985:function(s,n,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/frameworks/pm2/heroku",function(){return e(4074)}])},9061:function(s,n,e){"use strict";e.d(n,{N:function(){return a}});var o=e(5893);function a(s){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:"flex",children:[(0,o.jsx)("div",{className:"flex-grow",children:(0,o.jsxs)("h5",{children:[(0,o.jsx)("a",{href:"/docs#frameworks",children:"Frameworks"})," ",s.framework?(0,o.jsxs)("span",{children:["› ",(0,o.jsx)("a",{href:s.url,children:s.framework})]}):(0,o.jsx)("span",{})]})}),(0,o.jsx)("div",{className:"flex flex-shrink justify-end gap-2",children:s.icon})]})})}},5404:function(s,n,e){"use strict";e.d(n,{X:function(){return a}});var o=e(5893);function a(s){return(0,o.jsx)("p",{className:"lead mt-1",children:s.lead})}},1370:function(s,n,e){"use strict";e.d(n,{c:function(){return r}});var o=e(5893),a=e(5675),t=e.n(a);function r(s){return(0,o.jsx)("div",{className:"w-full p-7 bg-zinc-100 dark:bg-zinc-800 border border-zinc-200 dark:border-zinc-700 rounded-md",children:(0,o.jsxs)("div",{className:"border border-zinc-300 dark:border-zinc-800 text-zinc-100 text-sm subpixel-antialiased rounded-lg leading-normal overflow-hidden shadow-lg",children:[(0,o.jsx)("div",{className:"p-0 bg-zinc-200 dark:bg-black border-b border-zinc-300 dark:border-zinc-800",children:(0,o.jsxs)("div",{className:"flex py-1 px-2",children:[(0,o.jsxs)("div",{className:"flex items-center space-x-1.5",children:[(0,o.jsx)("span",{className:"h-2 w-2 bg-red-500/70 dark:bg-red-500/30 rounded-full"}),(0,o.jsx)("span",{className:"h-2 w-2 bg-orange-300/70 dark:bg-orange-300/30 rounded-full"}),(0,o.jsx)("span",{className:"h-2 w-2 bg-green-500/70 dark:bg-green-500/30 rounded-full"})]}),(0,o.jsx)("div",{className:"text-right w-full text-zinc-400 text-xs",children:s.www})]})}),(0,o.jsx)("div",{className:"p-0",children:(0,o.jsx)("a",{href:s.url,target:"_blank",rel:"noreferrer",className:"hover:brightness-105",children:(0,o.jsx)(t(),{src:s.url,width:"0",height:"0",alt:"",className:"p-0 m-0 w-full",unoptimized:!0})})})]})})}},9422:function(s,n,e){"use strict";e.d(n,{P:function(){return a}});var o=e(5893);function a(s){return(0,o.jsx)("svg",{viewBox:"0 0 24 24",fill:"currentColor","aria-hidden":"true",...s,children:(0,o.jsx)("path",{d:"M20.61 0H3.39C2.189 0 1.23.96 1.23 2.16v19.681c0 1.198.959 2.159 2.16 2.159h17.22c1.2 0 2.159-.961 2.159-2.159V2.16C22.77.96 21.811 0 20.61 0zm.96 21.841c0 .539-.421.96-.96.96H3.39c-.54 0-.96-.421-.96-.96V2.16c0-.54.42-.961.96-.961h17.22c.539 0 .96.421.96.961v19.681zM6.63 20.399L9.33 18l-2.7-2.4v4.799zm9.72-9.719c-.479-.48-1.379-1.08-2.879-1.08-1.621 0-3.301.421-4.5.84V3.6h-2.4v10.38l1.68-.78s2.76-1.26 5.16-1.26c1.2 0 1.5.66 1.5 1.26v7.2h2.4v-7.2c.059-.179.059-1.501-.961-2.52zM13.17 7.5h2.4c1.08-1.26 1.62-2.521 1.8-3.9h-2.399c-.241 1.379-.841 2.64-1.801 3.9z"})})}},8211:function(s,n,e){"use strict";e.d(n,{M:function(){return a}});var o=e(5893);function a(s){return(0,o.jsx)("svg",{fill:"currentColor",viewBox:"0 0 24 24",...s,children:(0,o.jsx)("path",{d:"M10.43 3.223c-.83 1.386-.906 1.499-1.21 1.81-.633.654-1.417 1.003-2.415 1.074-.187.013-1.265.033-2.702.05-.638.008-.75.011-.766.028-.01.011-.185.274-.39.586l-.37.565.104.005c.056.003.443-.003.858-.011a93.159 93.163 0 011.335-.019c.572 0 .58 0 .667.03.246.084.393.306.355.533a.504.504 0 01-.394.42c-.104.027-.375.034-2.821.075-.426.007-.78.015-.784.02a30.5 30.5 0 00-.747 1.145c.004.004.405 0 .893-.007 3.13-.051 5.844-.092 6.6-.1.727-.008.995-.02 1.19-.054.54-.092.954-.297 1.31-.65.253-.252.475-.572.852-1.23.125-.217.262-.45.307-.52l.138-.223c.033-.054.07-.11.082-.125.033-.038.1-.146.14-.23.034-.07.534-.906.75-1.257.15-.242.232-.312.42-.355.26-.06.58.102.653.332.06.188.033.305-.136.59-1.21 2.035-1.65 2.764-1.887 3.123-.672 1.018-1.684 1.564-2.991 1.613-.105.003-.773.015-1.486.026l-2.052.031-1.591.027a1166.545 1166.596 0 01-3.102.048c-.502.005-.761.013-.78.022a.723.723 0 00-.12.186 2.87 2.87 0 00-.285.793.427.427 0 01-.039.132c-.024.007-.02.787.003.81a.41.41 0 01.04.135c.057.285.197.616.395.932l.092.147 1.316.008c.724.004 2.597.015 4.164.021 1.692.008 2.914.019 3.01.027.318.026.488.052.75.118a3.374 3.374 0 011.652.95c.255.264.38.44.941 1.339.366.584 1.455 2.363 1.494 2.44.142.28.05.571-.223.7a.588.588 0 01-.518.01c-.145-.072-.152-.08-.9-1.29a85.42 85.42 0 00-.512-.822 26.09 26.091 0 01-.344-.565c-.37-.62-.588-.93-.82-1.162a2.367 2.367 0 00-1.164-.627c-.286-.064-.338-.066-2.328-.077a590.763 590.789 0 00-3.215-.014c-.738 0-1.634-.005-1.99-.008-.517-.008-.647-.007-.647.007 0 .008.156.27.348.578l.348.56.332.003c2.407.019 2.53.02 2.619.037.194.04.309.123.386.28a.35.35 0 01.05.212.43.43 0 01-.143.342.568.568 0 01-.251.142c-.075.022-.142.024-1.214.02-.92-.003-1.134 0-1.126.013.04.072.695 1.125.704 1.135.008.007.592.016 1.508.021 1.23.008 1.527.013 1.673.03 1.105.13 1.942.603 2.573 1.457.117.158.248.366.912 1.44l.466.754h.714c.392 0 .714-.003.714-.007s-.257-.42-.57-.924a493.191 493.213 0 01-1.49-2.407 12.643 12.644 0 00-.274-.43 2.395 2.395 0 00-1.434-.97c-.252-.061-.428-.077-.874-.083-.446-.006-.522-.016-.646-.08a.552.552 0 01-.231-.227c-.033-.065-.037-.088-.037-.211 0-.127.003-.145.037-.208a.557.557 0 01.357-.275c.07-.021.13-.024.52-.024.345 0 .48.005.625.024.937.12 1.64.445 2.224 1.027.276.276.397.443.758 1.042.127.209.412.672.636 1.028l1.05 1.686.644 1.04h.905c.722 0 .905-.005.9-.018a23.922 23.923 0 00-.24-.39c-.46-.737-.493-.796-.513-.943-.027-.206.118-.419.345-.5a.548.548 0 01.6.134c.064.063.414.61.936 1.465l.156.255.178-.009a3.32 3.32 0 001.31-.325c.065-.03.125-.056.134-.059a3.149 3.149 0 001.078-.886 541.326 541.35 0 002.393-3.65c2.484-3.806 2.433-3.724 2.554-4.086a2.682 2.682 0 00-.115-2.016c-.048-.103-.838-1.387-2.263-3.683a536.842 536.866 0 00-2.253-3.617 2.936 2.936 0 00-1.1-.915 3.19 3.191 0 00-.902-.316c-.18-.033-.193-.036-.183-.052.004-.008-.106-.01-.292-.01l-.298.005-.265.44c-.588.98-.643 1.068-.726 1.151a.568.568 0 01-.309.169c-.222.04-.496-.093-.59-.287-.03-.057-.033-.084-.033-.204 0-.187-.009-.167.504-1.01a3.41 3.41 0 00.147-.254c0-.007-.29-.012-.71-.012h-.71l-.019.03a441.636 441.636 0 01-1.829 3.028c-.21.347-.468.776-.57.953-.231.396-.326.54-.49.744a4.123 4.123 0 01-.563.56c-.53.411-1.17.66-1.92.747-.361.042-.884.048-1.072.013a.576.576 0 01-.384-.276c-.033-.065-.037-.083-.037-.21 0-.12.004-.147.034-.21a.542.542 0 01.352-.279c.073-.02.16-.027.515-.037.264-.007.485-.02.578-.033a3.15 3.15 0 00.599-.15c.164-.065.396-.19.532-.288a2.87 2.87 0 00.53-.526c.056-.074.325-.509.599-.966.273-.458.8-1.334 1.171-1.947.37-.614.677-1.124.68-1.135.006-.016-.098-.018-.703-.018h-.708l-.622 1.035zm7.036.536c0 .01.005.02.012.022.005.001.101.149.212.327.506.81.692 1.117.72 1.194.036.1.04.231.008.323a.646.646 0 01-.24.262.543.543 0 01-.657-.088c-.08-.075-.165-.201-.46-.685-.11-.182-.214-.346-.229-.366-.016-.024-.022-.046-.016-.066.01-.031.56-.88.601-.925.027-.03.05-.03.05.003zM16.08 5.896c-.004.007 0 .013.005.016.012.004 1.003 1.593 1.574 2.523.48.778.696 1.127.88 1.413.301.469.413.687.526 1.026.115.342.16.653.147 1.005-.007.24-.03.39-.088.624-.102.4-.325.866-.61 1.278-.09.128-.273.322-.304.322-.01 0-.02.005-.02.012 0 .006-.039.025-.086.04a.633.633 0 01-.39-.012.661.661 0 01-.294-.283c-.032-.067-.034-.087-.029-.19.007-.14.036-.202.231-.503.25-.385.352-.596.424-.885.124-.49.063-.976-.184-1.46-.049-.095-.36-.606-.692-1.138a342.675 342.69 0 01-1.16-1.867c-.308-.496-.569-.918-.584-.938-.014-.021-.024-.045-.02-.054.01-.027.59-.907.62-.938.02-.022.03-.026.043-.016.01.008.015.02.01.026zm3.142.909a.59.59 0 01.26.188c.095.117 1.425 2.23 1.911 3.04.28.462.41.75.5 1.103.062.243.086.431.086.689 0 .343-.037.57-.145.897-.126.382-.217.553-.658 1.236-.16.25-.998 1.548-1.858 2.887l-1.862 2.89c-.163.253-.303.47-.31.485-.008.013-.019.023-.027.02a20.635 20.636 0 01-.625-1.006c0-.009.012-.033.025-.052a8337.117 8337.482 0 013.846-5.967c.205-.318.266-.429.343-.62a1.95 1.95 0 00.15-.84c-.014-.316-.077-.54-.254-.894-.13-.266-.255-.476-.562-.95-.125-.193-.269-.42-.319-.504a76.564 76.567 0 00-.486-.789c-.764-1.226-.755-1.21-.757-1.35 0-.118.04-.212.128-.307a.67.67 0 01.32-.184.633.633 0 01.294.027zm-4.54 1.215l.2.325c1.091 1.747 1.137 1.824 1.247 2.043.461.919.465 1.832.014 2.735-.096.19-.135.255-.767 1.236-.848 1.32-.947 1.47-.974 1.5-.022.022-.025.024-.025.003 0-.012-.533-.881-1.184-1.93a193.219 193.227 0 01-1.184-1.918c0-.007.554-.858 1.233-1.892a612.753 612.78 0 001.314-2.007.706.706 0 01.096-.127c.007 0 .02.014.03.033zm2.437 6.843a.675.675 0 01.277.26.469.469 0 01.041.153c.01.133-.024.21-.264.588a820.264 820.3 0 01-1.25 1.954l-.125.194c-.022.04-.026.042-.048.026a29.746 29.747 0 01-.605-.97c-.012-.03 1.237-1.975 1.327-2.068a.55.55 0 01.446-.182.436.436 0 01.201.045z"})})}},4074:function(s,n,e){"use strict";e.r(n),e.d(n,{__N_SSG:function(){return d}});var o=e(5893),a=e(1151),t=e(1490),r=e(1370),l=e(5404),i=e(9422),p=e(8211),c=e(9061);function h(s){let n=Object.assign({h1:"h1",p:"p",h2:"h2",code:"code",pre:"pre",a:"a"},(0,a.ah)(),s.components),{Note:e}=n;return e||function(s,n){throw Error("Expected "+(n?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}("Note",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(c.N,{framework:"PM2",url:"/docs/frameworks",icon:(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(p.M,{className:"h-9 w-9 text-[#2B037A] dark:text-[#AC2E95]"}),(0,o.jsx)(i.P,{className:"h-9 w-9 text-[#430098]"})]})}),"\n",(0,o.jsx)(n.h1,{children:"Deploy a PM2 App to Heroku"}),"\n",(0,o.jsx)(l.X,{lead:"Deploy a PM2 app with an encrypted .env.vault file to Heroku."}),"\n",(0,o.jsx)(e,{children:(0,o.jsxs)(n.p,{children:["Find a complete ",(0,o.jsx)("a",{href:"https://github.com/dotenv-org/examples/tree/master/pm2/heroku",children:"code example on GitHub"})," for this guide."]})}),"\n",(0,o.jsx)(n.h2,{id:"initial-setup",children:"Initial setup"}),"\n",(0,o.jsxs)(n.p,{children:["Generate an ",(0,o.jsx)(n.code,{children:"ecosystem.config.js"})," file."]}),"\n",(0,o.jsx)(n.pre,{code:"pm2 init\n",children:(0,o.jsx)(n.code,{children:"pm2 init\n"})}),"\n",(0,o.jsx)(n.p,{children:"Modify it to your needs. Something like this."}),"\n",(0,o.jsx)(n.pre,{language:"js",code:"module.exports = {\n  apps : [{\n    script: 'index.js',\n    watch: '.'\n  }]\n};\n",children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-constant)">module</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">exports</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">  apps </span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> [{</span></span>\n<span><span style="color: var(--shiki-color-text)">    script</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;index.js&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">    watch</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;.&#39;</span></span>\n<span><span style="color: var(--shiki-color-text)">  }]</span></span>\n<span><span style="color: var(--shiki-color-text)">};</span></span>\n<span></span>'}),title:"ecosystem.config.js"}),"\n",(0,o.jsxs)(n.p,{children:["Your ",(0,o.jsx)(n.code,{children:"index.js"})," file should look something like this."]}),"\n",(0,o.jsx)(n.pre,{language:"js",code:"// index.js\nconst PORT = process.env.PORT || 3000\nconst http = require('http')\nconst server = http.createServer((req, res) => {\n  res.statusCode = 200;\n  res.setHeader('Content-Type', 'text/plain');\n  res.end(`Hello ${process.env.HELLO}`)\n});\n\nserver.listen(PORT, () => {\n  console.log(`Server running on port:${PORT}/`);\n});\n",children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// index.js</span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3000</span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">http</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;http&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">server</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">http</span><span style="color: var(--shiki-token-function)">.createServer</span><span style="color: var(--shiki-color-text)">((req</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> res) </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">res</span><span style="color: var(--shiki-color-text)">.statusCode </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span><span style="color: var(--shiki-color-text)">;</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">res</span><span style="color: var(--shiki-token-function)">.setHeader</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Content-Type&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;text/plain&#39;</span><span style="color: var(--shiki-color-text)">);</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">res</span><span style="color: var(--shiki-token-function)">.end</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">`Hello </span><span style="color: var(--shiki-token-keyword)">${</span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">HELLO</span><span style="color: var(--shiki-token-keyword)">}</span><span style="color: var(--shiki-token-string-expression)">`</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-color-text)">});</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">server</span><span style="color: var(--shiki-token-function)">.listen</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">`Server running on port:</span><span style="color: var(--shiki-token-keyword)">${</span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-token-keyword)">}</span><span style="color: var(--shiki-token-string-expression)">/`</span><span style="color: var(--shiki-color-text)">);</span></span>\n<span><span style="color: var(--shiki-color-text)">});</span></span>\n<span></span>'}),title:"index.js"}),"\n",(0,o.jsxs)(n.p,{children:["Add ",(0,o.jsx)(n.code,{children:"pm2"})," as a dependency."]}),"\n",(0,o.jsx)(n.pre,{code:"npm install pm2 --save\n",children:(0,o.jsx)(n.code,{children:"npm install pm2 --save\n"})}),"\n",(0,o.jsx)(n.p,{children:"In your package.json, modify your start script."}),"\n",(0,o.jsx)(n.pre,{language:"json",code:'{\n  "scripts": {\n    "start": "pm2-runtime start ecosystem.config.js --env production"\n  },\n  "dependencies": {\n    "pm2": "^5.3.0"\n  }\n}\n',children:(0,o.jsx)(n.code,{className:"language-json",children:'<span><span style="color: var(--shiki-color-text)">{</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;scripts&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&quot;start&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;pm2-runtime start ecosystem.config.js --env production&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">  }</span><span style="color: var(--shiki-token-punctuation)">,</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;dependencies&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&quot;pm2&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;^5.3.0&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">  }</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span></span>\n<span></span>'}),title:"package.json"}),"\n",(0,o.jsx)(n.p,{children:"Commit that to code and push it to Heroku."}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"heroku create\ngit push heroku\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">heroku create</span></span>\n<span><span style="color: var(--shiki-color-text)">git push heroku</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/hello-undefined.png",www:"yourapp.herokuapp.com"}),"\n",(0,o.jsxs)(n.p,{children:["Once deployed, your app will say ",(0,o.jsx)(n.code,{children:"'Hello undefined'"})," as it doesn't have a way to access the environment variable yet. Let's do that next."]}),"\n",(0,o.jsx)(n.h2,{id:"install-dotenv",children:"Install dotenv"}),"\n",(0,o.jsxs)(n.p,{children:["Install ",(0,o.jsx)(n.a,{href:"https://github.com/motdotla/dotenv",children:(0,o.jsx)(n.code,{children:"dotenv"})}),"."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npm install dotenv --save # Requires dotenv >= 16.1.0\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npm install dotenv --save </span><span style="color: var(--shiki-token-comment)"># Requires dotenv &gt;= 16.1.0</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(n.p,{children:["Create a ",(0,o.jsx)(n.code,{children:".env"})," file in the root of your project."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:'# .env\nHELLO="World"\n',children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-token-comment)"># .env</span></span>\n<span><span style="color: var(--shiki-color-text)">HELLO=</span><span style="color: var(--shiki-token-string-expression)">&quot;World&quot;</span></span>\n<span></span>'}),title:".env"}),"\n",(0,o.jsx)(n.p,{children:"As early as possible in your application, import and configure dotenv."}),"\n",(0,o.jsx)(n.pre,{language:"js",code:"// index.js\nrequire('dotenv').config()\nconsole.log(process.env) // remove this after you've confirmed it is working\n\nconst PORT = process.env.PORT || 3000\nconst http = require('http')\n...\n",children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// index.js</span></span>\n<span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv&#39;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-function)">.config</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.env) </span><span style="color: var(--shiki-token-comment)">// remove this after you&#39;ve confirmed it is working</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3000</span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">http</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;http&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-token-keyword)">...</span></span>\n<span></span>'}),title:"index.js"}),"\n",(0,o.jsx)(n.p,{children:"Try running it locally."}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"pm2 start\n➜  pm2-example git:(master) ✗ pm2 start\n[PM2] Applying action restartProcessId on app [index](ids: [ 1 ])\n[PM2] [index](1) ✓\n┌────┬────────────────────┬──────────┬──────┬───────────┬──────────┬──────────┐\n│ id │ name               │ mode     │ ↺    │ status    │ cpu      │ memory   │\n├────┼────────────────────┼──────────┼──────┼───────────┼──────────┼──────────┤\n│ 0  │ index              │ fork     │ 0    │ online    │ 0%       │ 1.2mb    │\n└────┴────────────────────┴──────────┴──────┴───────────┴──────────┴──────────┘\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">pm2 start</span></span>\n<span><span style="color: var(--shiki-color-text)">➜  pm2-example git:(master) ✗ pm2 start</span></span>\n<span><span style="color: var(--shiki-color-text)">[PM2] Applying action restartProcessId on app [index](ids: [ 1 ])</span></span>\n<span><span style="color: var(--shiki-color-text)">[PM2] [index](1) ✓</span></span>\n<span><span style="color: var(--shiki-color-text)">┌────┬────────────────────┬──────────┬──────┬───────────┬──────────┬──────────┐</span></span>\n<span><span style="color: var(--shiki-color-text)">│ id │ name               │ mode     │ ↺    │ status    │ cpu      │ memory   │</span></span>\n<span><span style="color: var(--shiki-color-text)">├────┼────────────────────┼──────────┼──────┼───────────┼──────────┼──────────┤</span></span>\n<span><span style="color: var(--shiki-color-text)">│ 0  │ index              │ fork     │ 0    │ online    │ 0%       │ 1.2mb    │</span></span>\n<span><span style="color: var(--shiki-color-text)">└────┴────────────────────┴──────────┴──────┴───────────┴──────────┴──────────┘</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(n.p,{children:["Visit ",(0,o.jsx)(n.a,{href:"http://localhost:3000",children:"localhost:3000"})]}),"\n",(0,o.jsxs)(n.p,{children:["It should say ",(0,o.jsx)(n.code,{children:"Hello World"}),"."]}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/nextjs-hello-world.png"}),"\n",(0,o.jsxs)(n.p,{children:["Great! ",(0,o.jsx)(n.code,{children:"process.env"})," now has the keys and values you defined in your ",(0,o.jsx)(n.code,{children:".env"})," file. That covers local development. Let's solve for production next."]}),"\n",(0,o.jsx)(n.h2,{id:"build-env-vault",children:"Build .env.vault"}),"\n",(0,o.jsxs)(n.p,{children:["Push your latest ",(0,o.jsx)(n.code,{children:".env"})," file changes and edit your production secrets. ",(0,o.jsx)(n.a,{href:"/docs/tutorials/sync",children:"Learn more about syncing"})]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npx dotenv-vault@latest push\nnpx dotenv-vault@latest open production\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest push</span></span>\n<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest open production</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(n.p,{children:"Use the UI to configure those secrets per environment."}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/edit-production-value.gif",www:"www.dotenv.org"}),"\n",(0,o.jsxs)(n.p,{children:["Then build your encrypted ",(0,o.jsx)(n.code,{children:".env.vault"})," file."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npx dotenv-vault@latest build\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest build</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(n.p,{children:"Its contents should look something like this."}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:'#/-------------------.env.vault---------------------/\n#/         cloud-agnostic vaulting standard         /\n#/   [how it works](https://dotenv.org/env-vault)   /\n#/--------------------------------------------------/\n\n# development\nDOTENV_VAULT_DEVELOPMENT="/HqNgQWsf6Oh6XB9pI/CGkdgCe6d4/vWZHgP50RRoDTzkzPQk/xOaQs="\nDOTENV_VAULT_DEVELOPMENT_VERSION=2\n\n# production\nDOTENV_VAULT_PRODUCTION="x26PuIKQ/xZ5eKrYomKngM+dO/9v1vxhwslE/zjHdg3l+H6q6PheB5GVDVIbZg=="\nDOTENV_VAULT_PRODUCTION_VERSION=2\n',children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-token-comment)">#/-------------------.env.vault---------------------/</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/         cloud-agnostic vaulting standard         /</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/   [how it works](https://dotenv.org/env-vault)   /</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/--------------------------------------------------/</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># development</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_DEVELOPMENT=</span><span style="color: var(--shiki-token-string-expression)">&quot;/HqNgQWsf6Oh6XB9pI/CGkdgCe6d4/vWZHgP50RRoDTzkzPQk/xOaQs=&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_DEVELOPMENT_VERSION=2</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># production</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_PRODUCTION=</span><span style="color: var(--shiki-token-string-expression)">&quot;x26PuIKQ/xZ5eKrYomKngM+dO/9v1vxhwslE/zjHdg3l+H6q6PheB5GVDVIbZg==&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_PRODUCTION_VERSION=2</span></span>\n<span></span>'}),title:".env.vault"}),"\n",(0,o.jsx)(n.h2,{id:"set-dotenv-key",children:"Set DOTENV_KEY"}),"\n",(0,o.jsxs)(n.p,{children:["Fetch your production ",(0,o.jsx)(n.code,{children:"DOTENV_KEY"}),"."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npx dotenv-vault@latest keys production\n# outputs: dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest keys production</span></span>\n<span><span style="color: var(--shiki-token-comment)"># outputs: dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(n.p,{children:["Set ",(0,o.jsx)(n.code,{children:"DOTENV_KEY"})," on Heroku using the CLI."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"heroku config:set DOTENV_KEY='dotenv://:key_1234…@dotenv.org/vault/.env.vault?environment=production'\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">heroku config:set DOTENV_KEY=</span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv://:key_1234…@dotenv.org/vault/.env.vault?environment=production&#39;</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(n.p,{children:"Or use Heroku's UI."}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/heroku-config-vars.png",www:"www.heroku.com"}),"\n",(0,o.jsx)(n.h2,{id:"deploy",children:"Deploy"}),"\n",(0,o.jsx)(n.p,{children:"Commit those changes safely to code and deploy."}),"\n",(0,o.jsxs)(n.p,{children:["That's it! On deploy, your ",(0,o.jsx)(n.code,{children:".env.vault"})," file will be decrypted and its production secrets injected as environment variables – just in time."]}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/hello-production.png"}),"\n",(0,o.jsxs)(n.p,{children:["You'll know things worked correctly when you see ",(0,o.jsx)(n.code,{children:"'Loading env from encrypted .env.vault'"})," in your logs. If a ",(0,o.jsx)(n.code,{children:"DOTENV_KEY"})," is not set (for example when developing on your local machine) it will fall back to standard ",(0,o.jsx)(n.a,{href:"https://github.com/motdotla/dotenv",children:"dotenv"})," functionality."]}),"\n",(0,o.jsx)(r.c,{url:"/assets/img/docs/heroku-logs-vault.png",www:"heroku logs --tail"}),"\n",(0,o.jsx)(t.default,{})]})}var d=!0;n.default=function(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),s.components);return n?(0,o.jsx)(n,Object.assign({},s,{children:(0,o.jsx)(h,s)})):h(s)}},1490:function(s,n,e){"use strict";e.r(n),e.d(n,{__N_SSG:function(){return r}});var o=e(5893),a=e(1151);function t(s){let n=Object.assign({p:"p"},(0,a.ah)(),s.components),{Note:e}=n;return e||function(s,n){throw Error("Expected "+(n?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}("Note",!0),(0,o.jsx)(e,{children:(0,o.jsx)(n.p,{children:"You succesfully used the new .env.vault standard to encrypt and deploy your secrets. This is much safer than scattering your secrets across multiple third-party platforms and tools. Whenever you need to add or change a secret, just rebuild your .env.vault file and redeploy."})})}var r=!0;n.default=function(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),s.components);return n?(0,o.jsx)(n,Object.assign({},s,{children:(0,o.jsx)(t,s)})):t(s)}}},function(s){s.O(0,[5675,9774,2888,179],function(){return s(s.s=6985)}),_N_E=s.O()}]);