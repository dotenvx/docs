(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3070],{9536:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/dotenv-vault/build",function(){return t(7659)}])},7659:function(n,e,t){"use strict";t.r(e),t.d(e,{__N_SSG:function(){return i}});var d=t(5893),l=t(1151);function o(n){let e=Object.assign({h5:"h5",a:"a",h1:"h1",p:"p",h2:"h2",h4:"h4",pre:"pre",code:"code",hr:"hr"},(0,l.ah)(),n.components);return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(e.h5,{children:(0,d.jsx)(e.a,{href:"/docs/dotenv-vault",children:"CLI"})}),"\n",(0,d.jsx)(e.h1,{children:"dotenv-vault build"}),"\n",(0,d.jsx)(e.p,{children:"Build your encrypted .env.vault file."}),"\n",(0,d.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,d.jsx)(e.h4,{children:"1. Run build command"}),"\n",(0,d.jsx)(e.pre,{code:"$ npx dotenv-vault build\n",children:(0,d.jsx)(e.code,{children:"$ npx dotenv-vault build\n"})}),"\n",(0,d.jsx)(e.h4,{children:"2. Set DOTENV_KEY"}),"\n",(0,d.jsxs)(e.p,{children:["Run the ",(0,d.jsx)(e.code,{children:"keys"})," command to get your product key and set it on your production environment."]}),"\n",(0,d.jsx)(e.pre,{code:"$ npx dotenv-vault keys production\n",children:(0,d.jsx)(e.code,{children:"$ npx dotenv-vault keys production\n"})}),"\n",(0,d.jsx)(e.h4,{children:"3. Commit .env.vault to code"}),"\n",(0,d.jsx)(e.p,{children:"Safely commit your encrypted .env.vault file to code."}),"\n",(0,d.jsx)(e.p,{children:"Deploy your code."}),"\n",(0,d.jsxs)(e.p,{children:["On application boot your ",(0,d.jsx)(e.code,{children:".env.vault"})," will be decrypted and its secrets injected just in time to your application."]}),"\n",(0,d.jsx)(e.hr,{}),"\n",(0,d.jsx)(e.h2,{id:"command-details",children:"Command Details"}),"\n",(0,d.jsx)(e.p,{children:"For more information on the build command, run dotenv-vault help build."}),"\n",(0,d.jsx)(e.pre,{code:"$ npx dotenv-vault help build\nBuild .env.vault\n\nUSAGE\n  $ dotenv-vault build [-m <value>] [-y]\n\nFLAGS\n  -m, --dotenvMe=<value>  Pass .env.me (DOTENV_ME) credential directly (rather than reading from .env.me file)\n  -y, --yes               Automatic yes to prompts. Assume yes to all prompts and run non-interactively.\n\nDESCRIPTION\n  Build .env.vault\n\nEXAMPLES\n  $ dotenv-vault build\n",children:(0,d.jsx)(e.code,{children:"$ npx dotenv-vault help build\nBuild .env.vault\n\nUSAGE\n  $ dotenv-vault build [-m <value>] [-y]\n\nFLAGS\n  -m, --dotenvMe=<value>  Pass .env.me (DOTENV_ME) credential directly (rather than reading from .env.me file)\n  -y, --yes               Automatic yes to prompts. Assume yes to all prompts and run non-interactively.\n\nDESCRIPTION\n  Build .env.vault\n\nEXAMPLES\n  $ dotenv-vault build\n"})})]})}var i=!0;e.default=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,l.ah)(),n.components);return e?(0,d.jsx)(e,Object.assign({},n,{children:(0,d.jsx)(o,n)})):o(n)}}},function(n){n.O(0,[9774,2888,179],function(){return n(n.s=9536)}),_N_E=n.O()}]);