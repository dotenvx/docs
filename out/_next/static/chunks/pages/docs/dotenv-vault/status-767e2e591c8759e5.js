(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5737],{8003:function(n,t,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/dotenv-vault/status",function(){return e(958)}])},958:function(n,t,e){"use strict";e.r(t),e.d(t,{__N_SSG:function(){return r}});var s=e(5893),a=e(1151);function o(n){let t=Object.assign({h5:"h5",a:"a",h1:"h1",p:"p",h2:"h2",h4:"h4",pre:"pre",code:"code",img:"img",hr:"hr",em:"em"},(0,a.ah)(),n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h5,{children:(0,s.jsx)(t.a,{href:"/docs/dotenv-vault",children:"CLI"})}),"\n",(0,s.jsx)(t.h1,{children:"dotenv-vault status"}),"\n",(0,s.jsx)(t.p,{children:"Check dotenv-vault operational status."}),"\n",(0,s.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(t.h4,{children:"1. Run status command"}),"\n",(0,s.jsx)(t.pre,{code:"$ npx dotenv-vault status\nlocal:    Press y (or any key) to open up the browser to view the dotenv-vault status page or q to exit: y\nlocal:    Opening status page... ‚\xb0\xf8\n",children:(0,s.jsx)(t.code,{children:"$ npx dotenv-vault status\nlocal:    Press y (or any key) to open up the browser to view the dotenv-vault status page or q to exit: y\nlocal:    Opening status page... ‚\xb0\xf8\n"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:"/assets/img/cloudinary/Screen_Shot_2022-07-31_at_9.34.36_PM_nteg84.png",alt:""})}),"\n",(0,s.jsx)(t.p,{children:"That's it!"}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"command-details",children:"Command Details"}),"\n",(0,s.jsx)(t.p,{children:"For more information on the status command, run dotenv-vault help status."}),"\n",(0,s.jsx)(t.pre,{code:"$ npx dotenv-vault help status\nCheck dotenv-vault operational status\n\nUSAGE\n  $ dotenv-vault status [-y]\n\nFLAGS\n  -y, --yes  Automatic yes to prompts. Assume yes to all prompts and run non-interactively.\n\nDESCRIPTION\n  Check dotenv-vault operational status\n\nEXAMPLES\n  $ dotenv-vault status\n",children:(0,s.jsx)(t.code,{children:"$ npx dotenv-vault help status\nCheck dotenv-vault operational status\n\nUSAGE\n  $ dotenv-vault status [-y]\n\nFLAGS\n  -y, --yes  Automatic yes to prompts. Assume yes to all prompts and run non-interactively.\n\nDESCRIPTION\n  Check dotenv-vault operational status\n\nEXAMPLES\n  $ dotenv-vault status\n"})}),"\n",(0,s.jsx)(t.h5,{children:"FLAGS"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.em,{children:"-y, --yes"})}),"\n",(0,s.jsx)(t.p,{children:"Automatic yes to prompts. Assume yes to all prompts and run non-interactively."}),"\n",(0,s.jsx)(t.pre,{code:"$ npx dotenv-vault status -y\n",children:(0,s.jsx)(t.code,{children:"$ npx dotenv-vault status -y\n"})})]})}var r=!0;t.default=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,a.ah)(),n.components);return t?(0,s.jsx)(t,Object.assign({},n,{children:(0,s.jsx)(o,n)})):o(n)}}},function(n){n.O(0,[9774,2888,179],function(){return n(n.s=8003)}),_N_E=n.O()}]);