(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4541],{8740:function(n,e,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/dotenv-vault/keys",function(){return t(4382)}])},4382:function(n,e,t){"use strict";t.r(e),t.d(e,{__N_SSG:function(){return i}});var s=t(5893),o=t(1151);function r(n){let e=Object.assign({h5:"h5",a:"a",h1:"h1",p:"p",h2:"h2",pre:"pre",code:"code",hr:"hr"},(0,o.ah)(),n.components);return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h5,{children:(0,s.jsx)(e.a,{href:"/docs/dotenv-vault",children:"CLI"})}),"\n",(0,s.jsx)(e.h1,{children:"dotenv-vault keys"}),"\n",(0,s.jsx)(e.p,{children:"List your decryption keys for your .env.vault encrypted contents."}),"\n",(0,s.jsx)(e.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(e.p,{children:"List all your keys."}),"\n",(0,s.jsx)(e.pre,{code:"$ npx dotenv-vault keys\n",children:(0,s.jsx)(e.code,{children:"$ npx dotenv-vault keys\n"})}),"\n",(0,s.jsx)(e.p,{children:"List a single environment key. This is useful to more easily copy and paste the DOTENV_KEY."}),"\n",(0,s.jsx)(e.pre,{code:"$ npx dotenv-vault keys production\n",children:(0,s.jsx)(e.code,{children:"$ npx dotenv-vault keys production\n"})}),"\n",(0,s.jsx)(e.hr,{}),"\n",(0,s.jsx)(e.h2,{id:"command-details",children:"Command Details"}),"\n",(0,s.jsx)(e.p,{children:"For more information on the keys command, run dotenv-vault help keys."}),"\n",(0,s.jsx)(e.pre,{code:"$ npx dotenv-vault help keys\nList .env.vault decryption keys\n\nUSAGE\n  $ dotenv-vault keys [ENVIRONMENT] [-m <value>] [-y]\n\nARGUMENTS\n  ENVIRONMENT  Set environment to fetch key(s) from. Defaults to all environments\n\nFLAGS\n  -m, --dotenvMe=<value>  Pass .env.me (DOTENV_ME) credential directly (rather than reading from .env.me file)\n  -y, --yes               Automatic yes to prompts. Assume yes to all prompts and run non-interactively.\n\nDESCRIPTION\n  List .env.vault decryption keys\n\nEXAMPLES\n  $ dotenv-vault keys\n",children:(0,s.jsx)(e.code,{children:"$ npx dotenv-vault help keys\nList .env.vault decryption keys\n\nUSAGE\n  $ dotenv-vault keys [ENVIRONMENT] [-m <value>] [-y]\n\nARGUMENTS\n  ENVIRONMENT  Set environment to fetch key(s) from. Defaults to all environments\n\nFLAGS\n  -m, --dotenvMe=<value>  Pass .env.me (DOTENV_ME) credential directly (rather than reading from .env.me file)\n  -y, --yes               Automatic yes to prompts. Assume yes to all prompts and run non-interactively.\n\nDESCRIPTION\n  List .env.vault decryption keys\n\nEXAMPLES\n  $ dotenv-vault keys\n"})})]})}var i=!0;e.default=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:e}=Object.assign({},(0,o.ah)(),n.components);return e?(0,s.jsx)(e,Object.assign({},n,{children:(0,s.jsx)(r,n)})):r(n)}}},function(n){n.O(0,[9774,2888,179],function(){return n(n.s=8740)}),_N_E=n.O()}]);