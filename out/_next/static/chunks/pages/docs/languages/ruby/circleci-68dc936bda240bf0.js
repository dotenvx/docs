(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2477],{6e3:function(n,s,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/languages/ruby/circleci",function(){return e(7931)}])},5404:function(n,s,e){"use strict";e.d(s,{X:function(){return o}});var a=e(5893);function o(n){return(0,a.jsx)("p",{className:"lead mt-1",children:n.lead})}},9281:function(n,s,e){"use strict";e.d(s,{m:function(){return o}});var a=e(5893);function o(n){return(0,a.jsx)(a.Fragment,{children:(0,a.jsxs)("div",{className:"flex",children:[(0,a.jsx)("div",{className:"flex-grow",children:(0,a.jsxs)("h5",{children:[(0,a.jsx)("a",{href:"/docs#languages",children:"Languages"})," ",n.language?(0,a.jsxs)("span",{children:["â€º ",(0,a.jsx)("a",{href:n.url,children:n.language})]}):(0,a.jsx)("span",{})]})}),(0,a.jsx)("div",{className:"flex flex-shrink justify-end gap-2",children:n.icon})]})})}},1370:function(n,s,e){"use strict";e.d(s,{c:function(){return l}});var a=e(5893),o=e(5675),r=e.n(o);function l(n){return(0,a.jsx)("div",{className:"w-full p-7 bg-zinc-100 dark:bg-zinc-800 border border-zinc-200 dark:border-zinc-700 rounded-md",children:(0,a.jsxs)("div",{className:"border border-zinc-300 dark:border-zinc-800 text-zinc-100 text-sm subpixel-antialiased rounded-lg leading-normal overflow-hidden shadow-lg",children:[(0,a.jsx)("div",{className:"p-0 bg-zinc-200 dark:bg-black border-b border-zinc-300 dark:border-zinc-800",children:(0,a.jsxs)("div",{className:"flex py-1 px-2",children:[(0,a.jsxs)("div",{className:"flex items-center space-x-1.5",children:[(0,a.jsx)("span",{className:"h-2 w-2 bg-red-500/70 dark:bg-red-500/30 rounded-full"}),(0,a.jsx)("span",{className:"h-2 w-2 bg-orange-300/70 dark:bg-orange-300/30 rounded-full"}),(0,a.jsx)("span",{className:"h-2 w-2 bg-green-500/70 dark:bg-green-500/30 rounded-full"})]}),(0,a.jsx)("div",{className:"text-right w-full text-zinc-400 text-xs",children:n.www})]})}),(0,a.jsx)("div",{className:"p-0",children:(0,a.jsx)("a",{href:n.url,target:"_blank",rel:"noreferrer",className:"hover:brightness-105",children:(0,a.jsx)(r(),{src:n.url,width:"0",height:"0",alt:"",className:"p-0 m-0 w-full",unoptimized:!0})})})]})})}},2674:function(n,s,e){"use strict";e.d(s,{U:function(){return o}});var a=e(5893);function o(n){return(0,a.jsx)("svg",{fill:"currentColor",role:"img",viewBox:"0 0 24 24",...n,children:(0,a.jsx)("path",{d:"M8.963 12c0-1.584 1.284-2.855 2.855-2.855 1.572 0 2.856 1.284 2.856 2.855 0 1.572-1.284 2.856-2.856 2.856-1.57 0-2.855-1.284-2.855-2.856zm2.855-12C6.215 0 1.522 3.84.19 9.025c-.01.036-.01.07-.01.12 0 .313.252.576.575.576H5.59c.23 0 .433-.13.517-.333.997-2.16 3.18-3.672 5.712-3.672 3.466 0 6.286 2.82 6.286 6.287 0 3.47-2.82 6.29-6.29 6.29-2.53 0-4.714-1.5-5.71-3.673-.097-.19-.29-.336-.517-.336H.755c-.312 0-.575.253-.575.576 0 .037.014.072.014.12C1.514 20.16 6.214 24 11.818 24c6.624 0 12-5.375 12-12 0-6.623-5.376-12-12-12z"})})}},8455:function(n,s,e){"use strict";e.d(s,{w:function(){return o}});var a=e(5893);function o(n){return(0,a.jsx)("svg",{fill:"currentColor",viewBox:"0 0 24 24",...n,children:(0,a.jsx)("path",{d:"M20.156.083c3.033.525 3.893 2.598 3.829 4.77L24 4.822 22.635 22.71 4.89 23.926h.016C3.433 23.864.15 23.729 0 19.139l1.645-3 2.819 6.586.503 1.172 2.805-9.144-.03.007.016-.03 9.255 2.956-1.396-5.431-.99-3.9 8.82-.569-.615-.51L16.5 2.114 20.159.073l-.003.01zM0 19.089zM5.13 5.073c3.561-3.533 8.157-5.621 9.922-3.84 1.762 1.777-.105 6.105-3.673 9.636-3.563 3.532-8.103 5.734-9.864 3.957-1.766-1.777.045-6.217 3.612-9.75l.003-.003z"})})}},7931:function(n,s,e){"use strict";e.r(s),e.d(s,{__N_SSG:function(){return h}});var a=e(5893),o=e(1151),r=e(5404),l=e(9281),t=e(1370),i=e(1490),c=e(2674),p=e(8455);function d(n){let s=Object.assign({h1:"h1",p:"p",h2:"h2",code:"code",pre:"pre",a:"a"},(0,o.ah)(),n.components),{Note:e}=s;return e||function(n,s){throw Error("Expected "+(s?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Note",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(l.m,{language:"Ruby",url:"/docs/languages/ruby",icon:(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(p.w,{className:"h-9 w-9 text-[#CC342D]"}),(0,a.jsx)(c.U,{className:"h-9 w-9 text-[#343434] dark:invert"})]})}),"\n",(0,a.jsx)(s.h1,{children:"CI/CD in Ruby with CircleCI"}),"\n",(0,a.jsx)(r.X,{lead:"Run Ruby CI/CD in CircleCI with an encrypted .env.vault file"}),"\n",(0,a.jsx)(e,{children:(0,a.jsxs)(s.p,{children:["Find a complete ",(0,a.jsx)("a",{href:"https://github.com/dotenv-org/examples/tree/master/ruby/circleci",children:"code example on GitHub"})," for this guide."]})}),"\n",(0,a.jsx)(s.h2,{id:"initial-setup",children:"Initial setup"}),"\n",(0,a.jsxs)(s.p,{children:["Create a ",(0,a.jsx)(s.code,{children:"build.rb"})," file. It's a very simple build script that outputs 'Hello World'."]}),"\n",(0,a.jsx)(s.pre,{language:"ruby",code:'# build.rb\nputs "Hello #{ENV["HELLO"]}"\n',children:(0,a.jsx)(s.code,{className:"language-ruby",children:'<span><span style="color: var(--shiki-token-comment)"># build.rb</span></span>\n<span><span style="color: var(--shiki-token-function)">puts</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;Hello </span><span style="color: var(--shiki-token-string-expression)">#{</span><span style="color: var(--shiki-token-constant)">ENV</span><span style="color: var(--shiki-token-string-expression)">[</span><span style="color: var(--shiki-token-string-expression)">&quot;HELLO&quot;</span><span style="color: var(--shiki-token-string-expression)">]}</span><span style="color: var(--shiki-token-string-expression)">&quot;</span></span>\n<span></span>'}),title:"build.rb"}),"\n",(0,a.jsxs)(s.p,{children:["Create a ",(0,a.jsx)(s.code,{children:"Gemfile"}),"."]}),"\n",(0,a.jsx)(s.pre,{language:"ruby",code:'# frozen_string_literal: true\n\nsource "https://rubygems.org"\n',children:(0,a.jsx)(s.code,{className:"language-ruby",children:'<span><span style="color: var(--shiki-token-comment)"># frozen_string_literal: true</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">source </span><span style="color: var(--shiki-token-string-expression)">&quot;https://rubygems.org&quot;</span></span>\n<span></span>'}),title:"Gemfile"}),"\n",(0,a.jsxs)(s.p,{children:["Run ",(0,a.jsx)(s.code,{children:"bundle install"})," to generate the ",(0,a.jsx)(s.code,{children:"Gemfile.lock"}),"."]}),"\n",(0,a.jsx)(s.pre,{code:"bundle install\n",children:(0,a.jsx)(s.code,{children:"bundle install\n"})}),"\n",(0,a.jsxs)(s.p,{children:["Create a ",(0,a.jsx)(s.code,{children:".circleci/config.yml"})," file."]}),"\n",(0,a.jsx)(s.pre,{language:"yaml",code:"# .circleci/config.yml\nversion: 2.1\norbs:\n  ruby: circleci/ruby@2.1.0\njobs:\n  build:\n    docker:\n      - image: cimg/ruby:2.7.3\n    steps:\n      - checkout\n      - ruby/install-deps\n      - run:\n          name: Ruby build\n          command: ruby build.rb\n",children:(0,a.jsx)(s.code,{className:"language-yaml",children:'<span><span style="color: var(--shiki-token-comment)"># .circleci/config.yml</span></span>\n<span><span style="color: var(--shiki-token-keyword)">version</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">2.1</span></span>\n<span><span style="color: var(--shiki-token-keyword)">orbs</span><span style="color: var(--shiki-token-keyword)">:</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">ruby</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">circleci/ruby@2.1.0</span></span>\n<span><span style="color: var(--shiki-token-keyword)">jobs</span><span style="color: var(--shiki-token-keyword)">:</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">build</span><span style="color: var(--shiki-token-keyword)">:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">docker</span><span style="color: var(--shiki-token-keyword)">:</span></span>\n<span><span style="color: var(--shiki-color-text)">      - </span><span style="color: var(--shiki-token-keyword)">image</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">cimg/ruby:2.7.3</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">steps</span><span style="color: var(--shiki-token-keyword)">:</span></span>\n<span><span style="color: var(--shiki-color-text)">      - </span><span style="color: var(--shiki-token-string-expression)">checkout</span></span>\n<span><span style="color: var(--shiki-color-text)">      - </span><span style="color: var(--shiki-token-string-expression)">ruby/install-deps</span></span>\n<span><span style="color: var(--shiki-color-text)">      - </span><span style="color: var(--shiki-token-keyword)">run</span><span style="color: var(--shiki-token-keyword)">:</span></span>\n<span><span style="color: var(--shiki-color-text)">          </span><span style="color: var(--shiki-token-keyword)">name</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">Ruby build</span></span>\n<span><span style="color: var(--shiki-color-text)">          </span><span style="color: var(--shiki-token-keyword)">command</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">ruby build.rb</span></span>\n<span></span>'}),title:".circleci/config.yml"}),"\n",(0,a.jsx)(s.p,{children:"Commit all that to code and push to GitHub. Then connect your GitHub repo to CircleCI."}),"\n",(0,a.jsx)(t.c,{url:"/assets/img/docs/circleci-add-project.png",www:"app.circleci.com"}),"\n",(0,a.jsx)("br",{}),"\n",(0,a.jsx)(t.c,{url:"/assets/img/docs/circleci-hello-blank-ruby.png",www:"app.circleci.com"}),"\n",(0,a.jsxs)(s.p,{children:["Once pushed, the CircleCI build will say ",(0,a.jsx)(s.code,{children:"'Hello '"})," as it doesn't have a way to access the environment variable yet. Let's do that next."]}),"\n",(0,a.jsx)(s.h2,{id:"install-dotenv-vault",children:"Install dotenv-vault"}),"\n",(0,a.jsxs)(s.p,{children:["Install ",(0,a.jsx)(s.a,{href:"https://github.com/dotenv-org/dotenv-vault-ruby",children:(0,a.jsx)(s.code,{children:"dotenv-vault"})}),"."]}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:"bundle add dotenv-vault\n",children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">bundle add dotenv-vault</span></span>\n<span></span>'})}),"\n",(0,a.jsxs)(s.p,{children:["Create a ",(0,a.jsx)(s.code,{children:".env"})," file in the root of your project."]}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:'# .env\nHELLO="World"\n',children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-token-comment)"># .env</span></span>\n<span><span style="color: var(--shiki-color-text)">HELLO=</span><span style="color: var(--shiki-token-string-expression)">&quot;World&quot;</span></span>\n<span></span>'}),title:".env"}),"\n",(0,a.jsxs)(s.p,{children:["As early as possible in your application, import and configure ",(0,a.jsx)(s.code,{children:"dotenv-vault"})," along with ",(0,a.jsx)(s.code,{children:"bundler/setup"}),"."]}),"\n",(0,a.jsx)(s.pre,{language:"ruby",code:'# build.rb\nrequire "bundler/setup"\nrequire "dotenv-vault/load"\nputs "Hello #{ENV["HELLO"]}"\n',children:(0,a.jsx)(s.code,{className:"language-ruby",children:'<span><span style="color: var(--shiki-token-comment)"># build.rb</span></span>\n<span><span style="color: var(--shiki-token-keyword)">require</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;bundler/setup&quot;</span></span>\n<span><span style="color: var(--shiki-token-keyword)">require</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;dotenv-vault/load&quot;</span></span>\n<span><span style="color: var(--shiki-token-function)">puts</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;Hello </span><span style="color: var(--shiki-token-string-expression)">#{</span><span style="color: var(--shiki-token-constant)">ENV</span><span style="color: var(--shiki-token-string-expression)">[</span><span style="color: var(--shiki-token-string-expression)">&quot;HELLO&quot;</span><span style="color: var(--shiki-token-string-expression)">]}</span><span style="color: var(--shiki-token-string-expression)">&quot;</span></span>\n<span></span>'}),title:"build.rb"}),"\n",(0,a.jsx)(s.p,{children:"Try running it locally."}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:"ruby build.rb\nHello World\n",children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">ruby build.rb</span></span>\n<span><span style="color: var(--shiki-color-text)">Hello World</span></span>\n<span></span>'})}),"\n",(0,a.jsxs)(s.p,{children:["Perfect. ",(0,a.jsx)(s.code,{children:"ENV"})," now has the keys and values you defined in your ",(0,a.jsx)(s.code,{children:".env"})," file."]}),"\n",(0,a.jsx)(s.p,{children:"That covers local simulation of the CI. Let's solve for the real CI environment next."}),"\n",(0,a.jsx)(s.h2,{id:"build-env-vault",children:"Build .env.vault"}),"\n",(0,a.jsxs)(s.p,{children:["Push your latest ",(0,a.jsx)(s.code,{children:".env"})," file changes and edit your CI secrets. ",(0,a.jsx)(s.a,{href:"/docs/tutorials/sync",children:"Learn more about syncing"})]}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:"npx dotenv-vault@latest push\nnpx dotenv-vault@latest open ci\n",children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest push</span></span>\n<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest open ci</span></span>\n<span></span>'})}),"\n",(0,a.jsx)(s.p,{children:"Use the UI to configure those secrets per environment."}),"\n",(0,a.jsx)(t.c,{url:"/assets/img/docs/edit-ci-value.gif",www:"dotenv.org"}),"\n",(0,a.jsxs)(s.p,{children:["Then build your encrypted ",(0,a.jsx)(s.code,{children:".env.vault"})," file."]}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:"npx dotenv-vault@latest build\n",children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest build</span></span>\n<span></span>'})}),"\n",(0,a.jsx)(s.p,{children:"Its contents should look something like this."}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:'#/-------------------.env.vault---------------------/\n#/         cloud-agnostic vaulting standard         /\n#/   [how it works](https://dotenv.org/env-vault)   /\n#/--------------------------------------------------/\n\n# development\nDOTENV_VAULT_DEVELOPMENT="/HqNgQWsf6Oh6XB9pI/CGkdgCe6d4/vWZHgP50RRoDTzkzPQk/xOaQs="\nDOTENV_VAULT_DEVELOPMENT_VERSION=2\n\n# ci\nDOTENV_VAULT_CI="x26PuIKQ/xZ5eKrYomKngM+dO/9v1vxhwslE/zjHdg3l+H6q6PheB5GVDVIbZg=="\nDOTENV_VAULT_CI_VERSION=2\n',children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-token-comment)">#/-------------------.env.vault---------------------/</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/         cloud-agnostic vaulting standard         /</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/   [how it works](https://dotenv.org/env-vault)   /</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/--------------------------------------------------/</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># development</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_DEVELOPMENT=</span><span style="color: var(--shiki-token-string-expression)">&quot;/HqNgQWsf6Oh6XB9pI/CGkdgCe6d4/vWZHgP50RRoDTzkzPQk/xOaQs=&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_DEVELOPMENT_VERSION=2</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># ci</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_CI=</span><span style="color: var(--shiki-token-string-expression)">&quot;x26PuIKQ/xZ5eKrYomKngM+dO/9v1vxhwslE/zjHdg3l+H6q6PheB5GVDVIbZg==&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_CI_VERSION=2</span></span>\n<span></span>'}),title:".env.vault"}),"\n",(0,a.jsx)(s.h2,{id:"set-dotenv-key",children:"Set DOTENV_KEY"}),"\n",(0,a.jsxs)(s.p,{children:["Fetch your CI ",(0,a.jsx)(s.code,{children:"DOTENV_KEY"}),"."]}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:"npx dotenv-vault@latest keys ci\n# outputs: dotenv://:key_4567@dotenv.org/vault/.env.vault?environment=ci\n",children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest keys ci</span></span>\n<span><span style="color: var(--shiki-token-comment)"># outputs: dotenv://:key_4567@dotenv.org/vault/.env.vault?environment=ci</span></span>\n<span></span>'})}),"\n",(0,a.jsxs)(s.p,{children:["Set ",(0,a.jsx)(s.code,{children:"DOTENV_KEY"})," on CircleCI."]}),"\n",(0,a.jsx)(t.c,{url:"/assets/img/docs/circleci-config-vars.gif",www:"app.circleci.com"}),"\n",(0,a.jsx)(s.h2,{id:"build-ci",children:"Build CI"}),"\n",(0,a.jsx)(s.p,{children:"Commit those changes safely to code and rerun the build."}),"\n",(0,a.jsxs)(s.p,{children:["That's it! On rerun, your ",(0,a.jsx)(s.code,{children:".env.vault"})," file will be decrypted and its CI secrets injected as environment variables â€“ just in time. It will say ",(0,a.jsx)(s.code,{children:"Hello ci"}),"."]}),"\n",(0,a.jsx)(t.c,{url:"/assets/img/docs/circleci-logs-vault-ruby.png",www:"app.circleci.com build"}),"\n",(0,a.jsxs)(s.p,{children:["You'll know things worked correctly when you see ",(0,a.jsx)(s.code,{children:"'Loading env from encrypted .env.vault'"})," in your logs. If a ",(0,a.jsx)(s.code,{children:"DOTENV_KEY"})," is not set (for example when developing on your local machine) it will fall back to standard ",(0,a.jsx)(s.a,{href:"https://github.com/motdotla/dotenv",children:"dotenv"})," functionality."]}),"\n",(0,a.jsx)(i.default,{})]})}var h=!0;s.default=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,o.ah)(),n.components);return s?(0,a.jsx)(s,Object.assign({},n,{children:(0,a.jsx)(d,n)})):d(n)}},1490:function(n,s,e){"use strict";e.r(s),e.d(s,{__N_SSG:function(){return l}});var a=e(5893),o=e(1151);function r(n){let s=Object.assign({p:"p"},(0,o.ah)(),n.components),{Note:e}=s;return e||function(n,s){throw Error("Expected "+(s?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Note",!0),(0,a.jsx)(e,{children:(0,a.jsx)(s.p,{children:"You succesfully used the new .env.vault standard to encrypt and deploy your secrets. This is much safer than scattering your secrets across multiple third-party platforms and tools. Whenever you need to add or change a secret, just rebuild your .env.vault file and redeploy."})})}var l=!0;s.default=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,o.ah)(),n.components);return s?(0,a.jsx)(s,Object.assign({},n,{children:(0,a.jsx)(r,n)})):r(n)}}},function(n){n.O(0,[5675,9774,2888,179],function(){return n(n.s=6e3)}),_N_E=n.O()}]);