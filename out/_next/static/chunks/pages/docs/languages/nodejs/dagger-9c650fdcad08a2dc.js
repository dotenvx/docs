(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1357],{1167:function(n,s,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/languages/nodejs/dagger",function(){return e(5894)}])},5404:function(n,s,e){"use strict";e.d(s,{X:function(){return a}});var o=e(5893);function a(n){return(0,o.jsx)("p",{className:"lead mt-1",children:n.lead})}},9281:function(n,s,e){"use strict";e.d(s,{m:function(){return a}});var o=e(5893);function a(n){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:"flex",children:[(0,o.jsx)("div",{className:"flex-grow",children:(0,o.jsxs)("h5",{children:[(0,o.jsx)("a",{href:"/docs#languages",children:"Languages"})," ",n.language?(0,o.jsxs)("span",{children:["â€º ",(0,o.jsx)("a",{href:n.url,children:n.language})]}):(0,o.jsx)("span",{})]})}),(0,o.jsx)("div",{className:"flex flex-shrink justify-end gap-2",children:n.icon})]})})}},1370:function(n,s,e){"use strict";e.d(s,{c:function(){return r}});var o=e(5893),a=e(5675),t=e.n(a);function r(n){return(0,o.jsx)("div",{className:"w-full p-7 bg-zinc-100 dark:bg-zinc-800 border border-zinc-200 dark:border-zinc-700 rounded-md",children:(0,o.jsxs)("div",{className:"border border-zinc-300 dark:border-zinc-800 text-zinc-100 text-sm subpixel-antialiased rounded-lg leading-normal overflow-hidden shadow-lg",children:[(0,o.jsx)("div",{className:"p-0 bg-zinc-200 dark:bg-black border-b border-zinc-300 dark:border-zinc-800",children:(0,o.jsxs)("div",{className:"flex py-1 px-2",children:[(0,o.jsxs)("div",{className:"flex items-center space-x-1.5",children:[(0,o.jsx)("span",{className:"h-2 w-2 bg-red-500/70 dark:bg-red-500/30 rounded-full"}),(0,o.jsx)("span",{className:"h-2 w-2 bg-orange-300/70 dark:bg-orange-300/30 rounded-full"}),(0,o.jsx)("span",{className:"h-2 w-2 bg-green-500/70 dark:bg-green-500/30 rounded-full"})]}),(0,o.jsx)("div",{className:"text-right w-full text-zinc-400 text-xs",children:n.www})]})}),(0,o.jsx)("div",{className:"p-0",children:(0,o.jsx)("a",{href:n.url,target:"_blank",rel:"noreferrer",className:"hover:brightness-105",children:(0,o.jsx)(t(),{src:n.url,width:"0",height:"0",alt:"",className:"p-0 m-0 w-full",unoptimized:!0})})})]})})}},909:function(n,s,e){"use strict";e.d(s,{A:function(){return a}});var o=e(5893);function a(n){return(0,o.jsxs)("svg",{fill:"currentColor","aria-hidden":"true",...n,viewBox:"0 0 220.9 221.05",children:[(0,o.jsx)("path",{className:"f",d:"M103.62,106.97c0,3.52,2.85,6.37,6.37,6.37s6.37-2.85,6.37-6.37-2.85-6.37-6.37-6.37c-3.52,0-6.37,2.85-6.37,6.37Z"}),(0,o.jsx)("path",{className:"f",d:"M110.38,0C49.34,0-.15,49.48-.15,110.52s49.48,110.52,110.52,110.52,110.52-49.48,110.52-110.52S171.42,0,110.38,0Zm54.15,32.67c12.39,8.64,22.63,20.16,29.73,33.59-49.82-15.69-62.51,9.8-65.15,18,0,0-3.03-46.57,35.42-51.59Zm-30.92,109.07c-6.46,4.44-14.53-14.93-23.21-15.13h-.81c-8.68,.2-16.75,19.57-23.21,15.13-6.18-4.25-.91-36.19,20.57-59.97,.81-.9,1.93-1.35,3.04-1.35,1.11,0,2.23,.45,3.04,1.35,21.48,23.79,26.75,55.73,20.57,59.97ZM110.38,15.69c4.7,0,9.33,.35,13.85,1.01-9.1,22.11-14.23,54.39-14.23,54.39,0,0-5.12-32.18-14.18-54.29,4.75-.73,9.61-1.11,14.57-1.11Zm-54.28,17.07c37.78,5.45,34.78,51.5,34.78,51.5-2.62-8.14-15.18-33.37-64.23-18.28,7.07-13.27,17.2-24.65,29.46-33.22ZM30.02,111.41c-3.49,3.04-8.51,4.22-14.34,4.12-.09-1.66-.13-3.33-.13-5.01,0-6.37,.63-12.59,1.83-18.61,52.67-8.69,62.73,8.68,62.73,8.68,0,0-32.77-4.28-50.09,10.81Zm141.23,55.37c7.91-7.18,13.71-3.73,16.36-1.2-14.41,20.19-36.55,34.48-62.09,38.58-7.65-8.83-13.92-36.73-13.92-36.73,0,10.23,.35,26.76,6.61,37.61-2.58,.21-5.19,.32-7.83,.32-4.77,0-9.45-.36-14.03-1.03,3.82-6.48,6.4-16.9,6.4-21.38,0,0-5.96,13.23-12.15,20.35-14.84-3.15-28.39-9.76-39.77-18.96,3.83-2.31,9.67-3.37,18.19,.54,0,0-10.02-13.91-21.87-3.67-3.95-3.53-7.59-7.39-10.9-11.53,3.25-8.58,11.51-14.69,21.23-14.69,10.42,0,19.18,7.01,21.87,16.56h.06c3.21,12.68,8.59,11.53,16.29-.01,6.03-9.05,9.34-22.83,10.33-30.72,.25-2,1.95-3.49,3.96-3.49s3.71,1.49,3.96,3.49c1,7.89,3.61,21.67,9.64,30.72,2.29,3.43,4.59,6.13,6.7,7.86,1.6-1.2,3.57-1.92,5.72-1.92,4.75,0,8.68,3.47,9.41,8.01,2.8-3.92,7.05-6.74,11.96-7.67-2.72-3.53-4.25-8.02-3.94-12.88,.6-9.38,8.18-17.08,17.55-17.8,8.82-.68,16.47,4.65,19.35,12.32-15.63-6.43-19.12,7.33-19.12,7.33Zm18.73-55.37c-17.32-15.09-50.09-10.81-50.09-10.81,0,0,10.16-17.55,63.52-8.55,1.18,5.98,1.81,12.15,1.81,18.48,0,1.67-.04,3.33-.13,4.98-6.15,.22-11.47-.92-15.11-4.1Z"})]})}},9183:function(n,s,e){"use strict";e.d(s,{q:function(){return a}});var o=e(5893);function a(n){return(0,o.jsx)("svg",{fill:"currentColor",viewBox:"0 0 24 24",...n,children:(0,o.jsx)("path",{d:"M11.998,24c-0.321,0-0.641-0.084-0.922-0.247l-2.936-1.737c-0.438-0.245-0.224-0.332-0.08-0.383 c0.585-0.203,0.703-0.25,1.328-0.604c0.065-0.037,0.151-0.023,0.218,0.017l2.256,1.339c0.082,0.045,0.197,0.045,0.272,0l8.795-5.076 c0.082-0.047,0.134-0.141,0.134-0.238V6.921c0-0.099-0.053-0.192-0.137-0.242l-8.791-5.072c-0.081-0.047-0.189-0.047-0.271,0 L3.075,6.68C2.99,6.729,2.936,6.825,2.936,6.921v10.15c0,0.097,0.054,0.189,0.139,0.235l2.409,1.392 c1.307,0.654,2.108-0.116,2.108-0.89V7.787c0-0.142,0.114-0.253,0.256-0.253h1.115c0.139,0,0.255,0.112,0.255,0.253v10.021 c0,1.745-0.95,2.745-2.604,2.745c-0.508,0-0.909,0-2.026-0.551L2.28,18.675c-0.57-0.329-0.922-0.945-0.922-1.604V6.921 c0-0.659,0.353-1.275,0.922-1.603l8.795-5.082c0.557-0.315,1.296-0.315,1.848,0l8.794,5.082c0.57,0.329,0.924,0.944,0.924,1.603 v10.15c0,0.659-0.354,1.273-0.924,1.604l-8.794,5.078C12.643,23.916,12.324,24,11.998,24z M19.099,13.993 c0-1.9-1.284-2.406-3.987-2.763c-2.731-0.361-3.009-0.548-3.009-1.187c0-0.528,0.235-1.233,2.258-1.233 c1.807,0,2.473,0.389,2.747,1.607c0.024,0.115,0.129,0.199,0.247,0.199h1.141c0.071,0,0.138-0.031,0.186-0.081 c0.048-0.054,0.074-0.123,0.067-0.196c-0.177-2.098-1.571-3.076-4.388-3.076c-2.508,0-4.004,1.058-4.004,2.833 c0,1.925,1.488,2.457,3.895,2.695c2.88,0.282,3.103,0.703,3.103,1.269c0,0.983-0.789,1.402-2.642,1.402 c-2.327,0-2.839-0.584-3.011-1.742c-0.02-0.124-0.126-0.215-0.253-0.215h-1.137c-0.141,0-0.254,0.112-0.254,0.253 c0,1.482,0.806,3.248,4.655,3.248C17.501,17.007,19.099,15.91,19.099,13.993z"})})}},5894:function(n,s,e){"use strict";e.r(s),e.d(s,{__N_SSG:function(){return h}});var o=e(5893),a=e(1151),t=e(5404),r=e(9281),l=e(1370),i=e(1490),c=e(909),p=e(9183);function d(n){let s=Object.assign({h1:"h1",p:"p",h2:"h2",a:"a",pre:"pre",code:"code"},(0,a.ah)(),n.components),{Note:e}=s;return e||function(n,s){throw Error("Expected "+(s?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Note",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.m,{language:"Node.js",url:"/docs/languages/nodejs",icon:(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(p.q,{className:"h-9 w-9 text-[#339933]"}),(0,o.jsx)(c.A,{className:"h-9 w-9 text-[#1d1d1b] dark:invert"})]})}),"\n",(0,o.jsx)(s.h1,{children:"CI/CD in Node.js with Dagger"}),"\n",(0,o.jsx)(t.X,{lead:"Run Node.js CI/CD in Dagger with an encrypted .env.vault file"}),"\n",(0,o.jsx)(e,{children:(0,o.jsxs)(s.p,{children:["Find a complete ",(0,o.jsx)("a",{href:"https://github.com/dotenv-org/examples/tree/master/nodejs/dagger",children:"code example on GitHub"})," for this guide."]})}),"\n",(0,o.jsx)(s.h2,{id:"initial-setup",children:"Initial setup"}),"\n",(0,o.jsxs)(s.p,{children:["Install the ",(0,o.jsx)(s.a,{href:"",children:"Dagger Node SDK"}),"."]}),"\n",(0,o.jsx)(s.pre,{code:"npm install @dagger.io/dagger --save-dev\n",children:(0,o.jsx)(s.code,{children:"npm install @dagger.io/dagger --save-dev\n"})}),"\n",(0,o.jsxs)(s.p,{children:["Create a ",(0,o.jsx)(s.code,{children:"ci/index.mjs"})," file."]}),"\n",(0,o.jsx)(s.pre,{language:"js",code:'// ci/index.mjs\nimport { connect } from "@dagger.io/dagger"\n\nconnect(async (client) => {\n  const node = client.container().from("node:16-slim").withExec(["node", "-v"])\n\n  const version = await node.stdout()\n\n  // print output\n  console.log(`Hello ${process.env.HELLO}.`)\n}, { LogOutput: process.stdout })\n',children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// ci/index.mjs</span></span>\n<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { connect } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;@dagger.io/dagger&quot;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-function)">connect</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> (client) </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">node</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">client</span><span style="color: var(--shiki-token-function)">.container</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-function)">.from</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;node:16-slim&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-function)">.withExec</span><span style="color: var(--shiki-color-text)">([</span><span style="color: var(--shiki-token-string-expression)">&quot;node&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;-v&quot;</span><span style="color: var(--shiki-color-text)">])</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">version</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">node</span><span style="color: var(--shiki-token-function)">.stdout</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// print output</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">`Hello </span><span style="color: var(--shiki-token-keyword)">${</span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">HELLO</span><span style="color: var(--shiki-token-keyword)">}</span><span style="color: var(--shiki-token-string-expression)">.`</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> { LogOutput</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.stdout })</span></span>\n<span></span>'}),title:"ci/index.mjs"}),"\n",(0,o.jsx)(s.p,{children:"Run the pipeline."}),"\n",(0,o.jsx)(s.pre,{language:"bash",code:"node ci/index.mjs\n",children:(0,o.jsx)(s.code,{className:"language-bash",children:'<span><span style="color: var(--shiki-color-text)">node ci/index.mjs</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(s.pre,{code:"8: [0.11s] v16.20.1\n8: exec docker-entrypoint.sh node -v DONE\nHello undefined.\n",children:(0,o.jsx)(s.code,{children:"8: [0.11s] v16.20.1\n8: exec docker-entrypoint.sh node -v DONE\nHello undefined.\n"})}),"\n",(0,o.jsx)(e,{children:(0,o.jsx)(s.p,{children:"Docker is required to be running on your machine for Dagger to work."})}),"\n",(0,o.jsxs)(s.p,{children:["Once run, the pipeline build will say ",(0,o.jsx)(s.code,{children:"'Hello undefined.'"})," as it doesn't have a way to access the environment variable yet. Let's do that next."]}),"\n",(0,o.jsx)(s.h2,{id:"install-dotenv",children:"Install dotenv"}),"\n",(0,o.jsxs)(s.p,{children:["Install ",(0,o.jsx)(s.a,{href:"https://github.com/motdotla/dotenv",children:(0,o.jsx)(s.code,{children:"dotenv"})}),"."]}),"\n",(0,o.jsx)(s.pre,{language:"shell",code:"npm install dotenv --save-dev # Requires dotenv >= 16.1.0\n",children:(0,o.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npm install dotenv --save-dev </span><span style="color: var(--shiki-token-comment)"># Requires dotenv &gt;= 16.1.0</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(s.p,{children:["Create a ",(0,o.jsx)(s.code,{children:".env"})," file in the root of your project."]}),"\n",(0,o.jsx)(s.pre,{language:"shell",code:'# .env\nHELLO="World"\n',children:(0,o.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-token-comment)"># .env</span></span>\n<span><span style="color: var(--shiki-color-text)">HELLO=</span><span style="color: var(--shiki-token-string-expression)">&quot;World&quot;</span></span>\n<span></span>'}),title:".env"}),"\n",(0,o.jsx)(s.p,{children:"As early as possible in your ci pipeline, import and configure dotenv."}),"\n",(0,o.jsx)(s.pre,{language:"js",code:'// ci/index.mjs\nimport \'dotenv/config\'\nconsole.log(process.env) // remove this after you\'ve confirmed it is working\n\nimport { connect } from "@dagger.io/dagger"\n\nconnect(async (client) => {\n  const node = client.container().from("node:16-slim").withExec(["node", "-v"])\n\n  const version = await node.stdout()\n\n  // print output\n  console.log(`Hello ${process.env.HELLO}.`)\n}, { LogOutput: process.stdout })\n',children:(0,o.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// ci/index.mjs</span></span>\n<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv/config&#39;</span></span>\n<span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.env) </span><span style="color: var(--shiki-token-comment)">// remove this after you&#39;ve confirmed it is working</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">import</span><span style="color: var(--shiki-color-text)"> { connect } </span><span style="color: var(--shiki-token-keyword)">from</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;@dagger.io/dagger&quot;</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-function)">connect</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-keyword)">async</span><span style="color: var(--shiki-color-text)"> (client) </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">node</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">client</span><span style="color: var(--shiki-token-function)">.container</span><span style="color: var(--shiki-color-text)">()</span><span style="color: var(--shiki-token-function)">.from</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&quot;node:16-slim&quot;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-function)">.withExec</span><span style="color: var(--shiki-color-text)">([</span><span style="color: var(--shiki-token-string-expression)">&quot;node&quot;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;-v&quot;</span><span style="color: var(--shiki-color-text)">])</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">version</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">await</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">node</span><span style="color: var(--shiki-token-function)">.stdout</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-comment)">// print output</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">`Hello </span><span style="color: var(--shiki-token-keyword)">${</span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">HELLO</span><span style="color: var(--shiki-token-keyword)">}</span><span style="color: var(--shiki-token-string-expression)">.`</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> { LogOutput</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.stdout })</span></span>\n<span></span>'}),title:"ci/index.mjs"}),"\n",(0,o.jsx)(s.p,{children:"Try running it locally."}),"\n",(0,o.jsx)(s.pre,{language:"shell",code:"node ci/index.mjs\n{\n  ...\n  HELLO: 'World'\n}\nHello World.\n",children:(0,o.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">node ci/index.mjs</span></span>\n<span><span style="color: var(--shiki-color-text)">{</span></span>\n<span><span style="color: var(--shiki-color-text)">  ...</span></span>\n<span><span style="color: var(--shiki-color-text)">  HELLO: </span><span style="color: var(--shiki-token-string-expression)">&#39;World&#39;</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span></span>\n<span><span style="color: var(--shiki-color-text)">Hello World.</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(s.p,{children:["Perfect. ",(0,o.jsx)(s.code,{children:"process.env"})," now has the keys and values you defined in your ",(0,o.jsx)(s.code,{children:".env"})," file."]}),"\n",(0,o.jsx)(s.p,{children:"That covers local simulation of the CI. Let's solve for the real CI environment next."}),"\n",(0,o.jsx)(s.h2,{id:"build-env-vault",children:"Build .env.vault"}),"\n",(0,o.jsxs)(s.p,{children:["Push your latest ",(0,o.jsx)(s.code,{children:".env"})," file changes and edit your CI secrets. ",(0,o.jsx)(s.a,{href:"/docs/tutorials/sync",children:"Learn more about syncing"})]}),"\n",(0,o.jsx)(s.pre,{language:"shell",code:"npx dotenv-vault@latest push\nnpx dotenv-vault@latest open ci\n",children:(0,o.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest push</span></span>\n<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest open ci</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(s.p,{children:"Use the UI to configure those secrets per environment."}),"\n",(0,o.jsx)(l.c,{url:"/assets/img/docs/edit-ci-value.gif",www:"dotenv.org"}),"\n",(0,o.jsxs)(s.p,{children:["Then build your encrypted ",(0,o.jsx)(s.code,{children:".env.vault"})," file."]}),"\n",(0,o.jsx)(s.pre,{language:"shell",code:"npx dotenv-vault@latest build\n",children:(0,o.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest build</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(s.p,{children:"Its contents should look something like this."}),"\n",(0,o.jsx)(s.pre,{language:"shell",code:'#/-------------------.env.vault---------------------/\n#/         cloud-agnostic vaulting standard         /\n#/   [how it works](https://dotenv.org/env-vault)   /\n#/--------------------------------------------------/\n\n# development\nDOTENV_VAULT_DEVELOPMENT="/HqNgQWsf6Oh6XB9pI/CGkdgCe6d4/vWZHgP50RRoDTzkzPQk/xOaQs="\nDOTENV_VAULT_DEVELOPMENT_VERSION=2\n\n# ci\nDOTENV_VAULT_CI="x26PuIKQ/xZ5eKrYomKngM+dO/9v1vxhwslE/zjHdg3l+H6q6PheB5GVDVIbZg=="\nDOTENV_VAULT_CI_VERSION=2\n',children:(0,o.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-token-comment)">#/-------------------.env.vault---------------------/</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/         cloud-agnostic vaulting standard         /</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/   [how it works](https://dotenv.org/env-vault)   /</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/--------------------------------------------------/</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># development</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_DEVELOPMENT=</span><span style="color: var(--shiki-token-string-expression)">&quot;/HqNgQWsf6Oh6XB9pI/CGkdgCe6d4/vWZHgP50RRoDTzkzPQk/xOaQs=&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_DEVELOPMENT_VERSION=2</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># ci</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_CI=</span><span style="color: var(--shiki-token-string-expression)">&quot;x26PuIKQ/xZ5eKrYomKngM+dO/9v1vxhwslE/zjHdg3l+H6q6PheB5GVDVIbZg==&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_CI_VERSION=2</span></span>\n<span></span>'}),title:".env.vault"}),"\n",(0,o.jsx)(s.h2,{id:"set-dotenv-key",children:"Set DOTENV_KEY"}),"\n",(0,o.jsxs)(s.p,{children:["Fetch your CI ",(0,o.jsx)(s.code,{children:"DOTENV_KEY"}),"."]}),"\n",(0,o.jsx)(s.pre,{language:"shell",code:"npx dotenv-vault@latest keys ci\n# outputs: dotenv://:key_4567@dotenv.org/vault/.env.vault?environment=ci\n",children:(0,o.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest keys ci</span></span>\n<span><span style="color: var(--shiki-token-comment)"># outputs: dotenv://:key_4567@dotenv.org/vault/.env.vault?environment=ci</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(s.p,{children:["Set ",(0,o.jsx)(s.code,{children:"DOTENV_KEY"})," for Dagger."]}),"\n",(0,o.jsx)(s.pre,{language:"shell",code:"DOTENV_KEY='dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=ci' node ci/index.mjs\n",children:(0,o.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">DOTENV_KEY=</span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=ci&#39;</span><span style="color: var(--shiki-color-text)"> node ci/index.mjs</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(s.p,{children:"The result will be:"}),"\n",(0,o.jsx)(s.pre,{language:"shell",code:"8: exec docker-entrypoint.sh node -v CACHED\nHello ci.\n",children:(0,o.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">8: </span><span style="color: var(--shiki-token-function)">exec</span><span style="color: var(--shiki-color-text)"> docker-entrypoint.sh node -v CACHED</span></span>\n<span><span style="color: var(--shiki-color-text)">Hello ci.</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(s.p,{children:["That's it! Your ",(0,o.jsx)(s.code,{children:".env.vault"})," file is decrypted and its CI secrets injected as environment variables â€“ just in time."]}),"\n",(0,o.jsxs)(s.p,{children:["You'll know things worked correctly when you see ",(0,o.jsx)(s.code,{children:"'Loading env from encrypted .env.vault'"})," in your logs. If a ",(0,o.jsx)(s.code,{children:"DOTENV_KEY"})," is not set (for example when developing on your local machine) it will fall back to standard ",(0,o.jsx)(s.a,{href:"https://github.com/motdotla/dotenv",children:"dotenv"})," functionality."]}),"\n",(0,o.jsx)(i.default,{})]})}var h=!0;s.default=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,a.ah)(),n.components);return s?(0,o.jsx)(s,Object.assign({},n,{children:(0,o.jsx)(d,n)})):d(n)}},1490:function(n,s,e){"use strict";e.r(s),e.d(s,{__N_SSG:function(){return r}});var o=e(5893),a=e(1151);function t(n){let s=Object.assign({p:"p"},(0,a.ah)(),n.components),{Note:e}=s;return e||function(n,s){throw Error("Expected "+(s?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Note",!0),(0,o.jsx)(e,{children:(0,o.jsx)(s.p,{children:"You succesfully used the new .env.vault standard to encrypt and deploy your secrets. This is much safer than scattering your secrets across multiple third-party platforms and tools. Whenever you need to add or change a secret, just rebuild your .env.vault file and redeploy."})})}var r=!0;s.default=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,a.ah)(),n.components);return s?(0,o.jsx)(s,Object.assign({},n,{children:(0,o.jsx)(t,n)})):t(n)}}},function(n){n.O(0,[5675,9774,2888,179],function(){return n(n.s=1167)}),_N_E=n.O()}]);