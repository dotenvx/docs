(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7997],{6915:function(n,s,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/languages/nodejs/aws-beanstalk",function(){return e(391)}])},5404:function(n,s,e){"use strict";e.d(s,{X:function(){return o}});var a=e(5893);function o(n){return(0,a.jsx)("p",{className:"lead mt-1",children:n.lead})}},9281:function(n,s,e){"use strict";e.d(s,{m:function(){return o}});var a=e(5893);function o(n){return(0,a.jsx)(a.Fragment,{children:(0,a.jsxs)("div",{className:"flex",children:[(0,a.jsx)("div",{className:"flex-grow",children:(0,a.jsxs)("h5",{children:[(0,a.jsx)("a",{href:"/docs#languages",children:"Languages"})," ",n.language?(0,a.jsxs)("span",{children:["â€º ",(0,a.jsx)("a",{href:n.url,children:n.language})]}):(0,a.jsx)("span",{})]})}),(0,a.jsx)("div",{className:"flex flex-shrink justify-end gap-2",children:n.icon})]})})}},1370:function(n,s,e){"use strict";e.d(s,{c:function(){return t}});var a=e(5893),o=e(5675),l=e.n(o);function t(n){return(0,a.jsx)("div",{className:"w-full p-7 bg-zinc-100 dark:bg-zinc-800 border border-zinc-200 dark:border-zinc-700 rounded-md",children:(0,a.jsxs)("div",{className:"border border-zinc-300 dark:border-zinc-800 text-zinc-100 text-sm subpixel-antialiased rounded-lg leading-normal overflow-hidden shadow-lg",children:[(0,a.jsx)("div",{className:"p-0 bg-zinc-200 dark:bg-black border-b border-zinc-300 dark:border-zinc-800",children:(0,a.jsxs)("div",{className:"flex py-1 px-2",children:[(0,a.jsxs)("div",{className:"flex items-center space-x-1.5",children:[(0,a.jsx)("span",{className:"h-2 w-2 bg-red-500/70 dark:bg-red-500/30 rounded-full"}),(0,a.jsx)("span",{className:"h-2 w-2 bg-orange-300/70 dark:bg-orange-300/30 rounded-full"}),(0,a.jsx)("span",{className:"h-2 w-2 bg-green-500/70 dark:bg-green-500/30 rounded-full"})]}),(0,a.jsx)("div",{className:"text-right w-full text-zinc-400 text-xs",children:n.www})]})}),(0,a.jsx)("div",{className:"p-0",children:(0,a.jsx)("a",{href:n.url,target:"_blank",rel:"noreferrer",className:"hover:brightness-105",children:(0,a.jsx)(l(),{src:n.url,width:"0",height:"0",alt:"",className:"p-0 m-0 w-full",unoptimized:!0})})})]})})}},6393:function(n,s,e){"use strict";e.d(s,{e:function(){return o}});var a=e(5893);function o(n){return(0,a.jsx)("svg",{viewBox:"0 0 24 24",fill:"currentColor","aria-hidden":"true",...n,children:(0,a.jsx)("path",{d:"M6.763 10.036c0 .296.032.535.088.71.064.176.144.368.256.576.04.063.056.127.056.183 0 .08-.048.16-.152.24l-.503.335a.383.383 0 0 1-.208.072c-.08 0-.16-.04-.239-.112a2.47 2.47 0 0 1-.287-.375 6.18 6.18 0 0 1-.248-.471c-.622.734-1.405 1.101-2.347 1.101-.67 0-1.205-.191-1.596-.574-.391-.384-.59-.894-.59-1.533 0-.678.239-1.23.726-1.644.487-.415 1.133-.623 1.955-.623.272 0 .551.024.846.064.296.04.6.104.918.176v-.583c0-.607-.127-1.03-.375-1.277-.255-.248-.686-.367-1.3-.367-.28 0-.568.031-.863.103-.295.072-.583.16-.862.272a2.287 2.287 0 0 1-.28.104.488.488 0 0 1-.127.023c-.112 0-.168-.08-.168-.247v-.391c0-.128.016-.224.056-.28a.597.597 0 0 1 .224-.167c.279-.144.614-.264 1.005-.36a4.84 4.84 0 0 1 1.246-.151c.95 0 1.644.216 2.091.647.439.43.662 1.085.662 1.963v2.586zm-3.24 1.214c.263 0 .534-.048.822-.144.287-.096.543-.271.758-.51.128-.152.224-.32.272-.512.047-.191.08-.423.08-.694v-.335a6.66 6.66 0 0 0-.735-.136 6.02 6.02 0 0 0-.75-.048c-.535 0-.926.104-1.19.32-.263.215-.39.518-.39.917 0 .375.095.655.295.846.191.2.47.296.838.296zm6.41.862c-.144 0-.24-.024-.304-.08-.064-.048-.12-.16-.168-.311L7.586 5.55a1.398 1.398 0 0 1-.072-.32c0-.128.064-.2.191-.2h.783c.151 0 .255.025.31.08.065.048.113.16.16.312l1.342 5.284 1.245-5.284c.04-.16.088-.264.151-.312a.549.549 0 0 1 .32-.08h.638c.152 0 .256.025.32.08.063.048.12.16.151.312l1.261 5.348 1.381-5.348c.048-.16.104-.264.16-.312a.52.52 0 0 1 .311-.08h.743c.127 0 .2.065.2.2 0 .04-.009.08-.017.128a1.137 1.137 0 0 1-.056.2l-1.923 6.17c-.048.16-.104.263-.168.311a.51.51 0 0 1-.303.08h-.687c-.151 0-.255-.024-.32-.08-.063-.056-.119-.16-.15-.32l-1.238-5.148-1.23 5.14c-.04.16-.087.264-.15.32-.065.056-.177.08-.32.08zm10.256.215c-.415 0-.83-.048-1.229-.143-.399-.096-.71-.2-.918-.32-.128-.071-.215-.151-.247-.223a.563.563 0 0 1-.048-.224v-.407c0-.167.064-.247.183-.247.048 0 .096.008.144.024.048.016.12.048.2.08.271.12.566.215.878.279.319.064.63.096.95.096.502 0 .894-.088 1.165-.264a.86.86 0 0 0 .415-.758.777.777 0 0 0-.215-.559c-.144-.151-.416-.287-.807-.415l-1.157-.36c-.583-.183-1.014-.454-1.277-.813a1.902 1.902 0 0 1-.4-1.158c0-.335.073-.63.216-.886.144-.255.335-.479.575-.654.24-.184.51-.32.83-.415.32-.096.655-.136 1.006-.136.175 0 .359.008.535.032.183.024.35.056.518.088.16.04.312.08.455.127.144.048.256.096.336.144a.69.69 0 0 1 .24.2.43.43 0 0 1 .071.263v.375c0 .168-.064.256-.184.256a.83.83 0 0 1-.303-.096 3.652 3.652 0 0 0-1.532-.311c-.455 0-.815.071-1.062.223-.248.152-.375.383-.375.71 0 .224.08.416.24.567.159.152.454.304.877.44l1.134.358c.574.184.99.44 1.237.767.247.327.367.702.367 1.117 0 .343-.072.655-.207.926-.144.272-.336.511-.583.703-.248.2-.543.343-.886.447-.36.111-.734.167-1.142.167zM21.698 16.207c-2.626 1.94-6.442 2.969-9.722 2.969-4.598 0-8.74-1.7-11.87-4.526-.247-.223-.024-.527.272-.351 3.384 1.963 7.559 3.153 11.877 3.153 2.914 0 6.114-.607 9.06-1.852.439-.2.814.287.383.607zM22.792 14.961c-.336-.43-2.22-.207-3.074-.103-.255.032-.295-.192-.063-.36 1.5-1.053 3.967-.75 4.254-.399.287.36-.08 2.826-1.485 4.007-.215.184-.423.088-.327-.151.32-.79 1.03-2.57.695-2.994z"})})}},9183:function(n,s,e){"use strict";e.d(s,{q:function(){return o}});var a=e(5893);function o(n){return(0,a.jsx)("svg",{fill:"currentColor",viewBox:"0 0 24 24",...n,children:(0,a.jsx)("path",{d:"M11.998,24c-0.321,0-0.641-0.084-0.922-0.247l-2.936-1.737c-0.438-0.245-0.224-0.332-0.08-0.383 c0.585-0.203,0.703-0.25,1.328-0.604c0.065-0.037,0.151-0.023,0.218,0.017l2.256,1.339c0.082,0.045,0.197,0.045,0.272,0l8.795-5.076 c0.082-0.047,0.134-0.141,0.134-0.238V6.921c0-0.099-0.053-0.192-0.137-0.242l-8.791-5.072c-0.081-0.047-0.189-0.047-0.271,0 L3.075,6.68C2.99,6.729,2.936,6.825,2.936,6.921v10.15c0,0.097,0.054,0.189,0.139,0.235l2.409,1.392 c1.307,0.654,2.108-0.116,2.108-0.89V7.787c0-0.142,0.114-0.253,0.256-0.253h1.115c0.139,0,0.255,0.112,0.255,0.253v10.021 c0,1.745-0.95,2.745-2.604,2.745c-0.508,0-0.909,0-2.026-0.551L2.28,18.675c-0.57-0.329-0.922-0.945-0.922-1.604V6.921 c0-0.659,0.353-1.275,0.922-1.603l8.795-5.082c0.557-0.315,1.296-0.315,1.848,0l8.794,5.082c0.57,0.329,0.924,0.944,0.924,1.603 v10.15c0,0.659-0.354,1.273-0.924,1.604l-8.794,5.078C12.643,23.916,12.324,24,11.998,24z M19.099,13.993 c0-1.9-1.284-2.406-3.987-2.763c-2.731-0.361-3.009-0.548-3.009-1.187c0-0.528,0.235-1.233,2.258-1.233 c1.807,0,2.473,0.389,2.747,1.607c0.024,0.115,0.129,0.199,0.247,0.199h1.141c0.071,0,0.138-0.031,0.186-0.081 c0.048-0.054,0.074-0.123,0.067-0.196c-0.177-2.098-1.571-3.076-4.388-3.076c-2.508,0-4.004,1.058-4.004,2.833 c0,1.925,1.488,2.457,3.895,2.695c2.88,0.282,3.103,0.703,3.103,1.269c0,0.983-0.789,1.402-2.642,1.402 c-2.327,0-2.839-0.584-3.011-1.742c-0.02-0.124-0.126-0.215-0.253-0.215h-1.137c-0.141,0-0.254,0.112-0.254,0.253 c0,1.482,0.806,3.248,4.655,3.248C17.501,17.007,19.099,15.91,19.099,13.993z"})})}},391:function(n,s,e){"use strict";e.r(s),e.d(s,{__N_SSG:function(){return h}});var a=e(5893),o=e(1151),l=e(5404),t=e(9281),r=e(1370),i=e(1490),c=e(6393),p=e(9183);function d(n){let s=Object.assign({h1:"h1",h2:"h2",p:"p",code:"code",pre:"pre",a:"a"},(0,o.ah)(),n.components);return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.m,{language:"Node.js",url:"/docs/languages/nodejs",icon:(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(p.q,{className:"h-9 w-9 text-[#339933]"}),(0,a.jsx)(c.e,{className:"h-9 w-9 text-[#7C974A]"})]})}),"\n",(0,a.jsx)(s.h1,{children:"CI/CD in Node.js with AWS Beanstalk"}),"\n",(0,a.jsx)(l.X,{lead:"Run Node.js CI/CD in AWS Beanstalk with an encrypted .env.vault file"}),"\n",(0,a.jsx)(s.h2,{id:"initial-setup",children:"Initial setup"}),"\n",(0,a.jsxs)(s.p,{children:["Create a ",(0,a.jsx)(s.code,{children:"build.js"})," file. It's a very simple build script that outputs 'Hello World'."]}),"\n",(0,a.jsx)(s.pre,{language:"js",code:"// build.js\nconsole.log(`Hello ${process.env.HELLO}`)\n",children:(0,a.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// build.js</span></span>\n<span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">`Hello </span><span style="color: var(--shiki-token-keyword)">${</span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">HELLO</span><span style="color: var(--shiki-token-keyword)">}</span><span style="color: var(--shiki-token-string-expression)">`</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>'}),title:"build.js"}),"\n",(0,a.jsxs)(s.p,{children:["Create a ",(0,a.jsx)(s.code,{children:"package.json"})," file."]}),"\n",(0,a.jsx)(s.pre,{language:"json",code:'{\n  "scripts": {\n    "build": "node build.js"\n  }\n}\n',children:(0,a.jsx)(s.code,{className:"language-json",children:'<span><span style="color: var(--shiki-color-text)">{</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">&quot;scripts&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">&quot;build&quot;</span><span style="color: var(--shiki-token-punctuation)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&quot;node build.js&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">  }</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span></span>\n<span></span>'}),title:"package.json"}),"\n",(0,a.jsxs)(s.p,{children:["Then create a ",(0,a.jsx)(s.code,{children:"buildspec.yml"})," file."]}),"\n",(0,a.jsx)(s.pre,{language:"yaml",code:"# buildspec.yml\nversion: 0.2\nphases:\n  install:\n    commands:\n      - npm install\n  pre_build:\n    commands:\n      - npm run build\n      - rm -rf ./__build__\n      - npm prune --production\n  build:\n    commands:\n      - aws cloudformation package --template template.yml --s3-bucket $S3_BUCKET --output-template template-export.yml\n",children:(0,a.jsx)(s.code,{className:"language-yaml",children:'<span><span style="color: var(--shiki-token-comment)"># buildspec.yml</span></span>\n<span><span style="color: var(--shiki-token-keyword)">version</span><span style="color: var(--shiki-token-keyword)">:</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0.2</span></span>\n<span><span style="color: var(--shiki-token-keyword)">phases</span><span style="color: var(--shiki-token-keyword)">:</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">install</span><span style="color: var(--shiki-token-keyword)">:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">commands</span><span style="color: var(--shiki-token-keyword)">:</span></span>\n<span><span style="color: var(--shiki-color-text)">      - </span><span style="color: var(--shiki-token-string-expression)">npm install</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">pre_build</span><span style="color: var(--shiki-token-keyword)">:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">commands</span><span style="color: var(--shiki-token-keyword)">:</span></span>\n<span><span style="color: var(--shiki-color-text)">      - </span><span style="color: var(--shiki-token-string-expression)">npm run build</span></span>\n<span><span style="color: var(--shiki-color-text)">      - </span><span style="color: var(--shiki-token-string-expression)">rm -rf ./__build__</span></span>\n<span><span style="color: var(--shiki-color-text)">      - </span><span style="color: var(--shiki-token-string-expression)">npm prune --production</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">build</span><span style="color: var(--shiki-token-keyword)">:</span></span>\n<span><span style="color: var(--shiki-color-text)">    </span><span style="color: var(--shiki-token-keyword)">commands</span><span style="color: var(--shiki-token-keyword)">:</span></span>\n<span><span style="color: var(--shiki-color-text)">      - </span><span style="color: var(--shiki-token-string-expression)">aws cloudformation package --template template.yml --s3-bucket $S3_BUCKET --output-template template-export.yml</span></span>\n<span></span>'}),title:"buildspec.yml"}),"\n",(0,a.jsx)(s.p,{children:"Once ready, proceed by creating a basic pipeline setup using AWS CodePipeline and connect it with your AWS Beanstalk project accordingly."}),"\n",(0,a.jsx)(s.h2,{id:"install-dotenv",children:"Install dotenv"}),"\n",(0,a.jsxs)(s.p,{children:["Install ",(0,a.jsx)(s.a,{href:"https://github.com/motdotla/dotenv",children:(0,a.jsx)(s.code,{children:"dotenv"})}),"."]}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:"npm install dotenv --save # Requires dotenv >= 16.1.0\n",children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npm install dotenv --save </span><span style="color: var(--shiki-token-comment)"># Requires dotenv &gt;= 16.1.0</span></span>\n<span></span>'})}),"\n",(0,a.jsxs)(s.p,{children:["Create a ",(0,a.jsx)(s.code,{children:".env"})," file in the root of your project."]}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:'# .env\nHELLO="World"\n',children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-token-comment)"># .env</span></span>\n<span><span style="color: var(--shiki-color-text)">HELLO=</span><span style="color: var(--shiki-token-string-expression)">&quot;World&quot;</span></span>\n<span></span>'}),title:".env"}),"\n",(0,a.jsx)(s.p,{children:"As early as possible in your application, import and configure dotenv."}),"\n",(0,a.jsx)(s.pre,{language:"js",code:"// build.js\nrequire('dotenv').config()\nconsole.log(process.env) // remove this after you've confirmed it is working\n\nconsole.log(`Hello ${process.env.HELLO}`)\n",children:(0,a.jsx)(s.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// build.js</span></span>\n<span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv&#39;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-function)">.config</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.env) </span><span style="color: var(--shiki-token-comment)">// remove this after you&#39;ve confirmed it is working</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">`Hello </span><span style="color: var(--shiki-token-keyword)">${</span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">HELLO</span><span style="color: var(--shiki-token-keyword)">}</span><span style="color: var(--shiki-token-string-expression)">`</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span></span>'}),title:"build.js"}),"\n",(0,a.jsx)(s.p,{children:"Try running it locally."}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:"node build.js\n{\n  ...\n  HELLO: 'World'\n}\nHello World\n",children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">node build.js</span></span>\n<span><span style="color: var(--shiki-color-text)">{</span></span>\n<span><span style="color: var(--shiki-color-text)">  ...</span></span>\n<span><span style="color: var(--shiki-color-text)">  HELLO: </span><span style="color: var(--shiki-token-string-expression)">&#39;World&#39;</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span></span>\n<span><span style="color: var(--shiki-color-text)">Hello World</span></span>\n<span></span>'})}),"\n",(0,a.jsxs)(s.p,{children:["Perfect. ",(0,a.jsx)(s.code,{children:"process.env"})," now has the keys and values you defined in your ",(0,a.jsx)(s.code,{children:".env"})," file."]}),"\n",(0,a.jsx)(s.p,{children:"That covers local simulation of the CI. Let's solve for the real CI environment next."}),"\n",(0,a.jsx)(s.h2,{id:"build-env-vault",children:"Build .env.vault"}),"\n",(0,a.jsxs)(s.p,{children:["Push your latest ",(0,a.jsx)(s.code,{children:".env"})," file changes and edit your CI secrets. ",(0,a.jsx)(s.a,{href:"/docs/tutorials/sync",children:"Learn more about syncing"})]}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:"npx dotenv-vault@latest push\nnpx dotenv-vault@latest open ci\n",children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest push</span></span>\n<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest open ci</span></span>\n<span></span>'})}),"\n",(0,a.jsx)(s.p,{children:"Use the UI to configure those secrets per environment."}),"\n",(0,a.jsx)(r.c,{url:"/assets/img/docs/edit-ci-value.gif",www:"dotenv.org"}),"\n",(0,a.jsxs)(s.p,{children:["Then build your encrypted ",(0,a.jsx)(s.code,{children:".env.vault"})," file."]}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:"npx dotenv-vault@latest build\n",children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest build</span></span>\n<span></span>'})}),"\n",(0,a.jsx)(s.p,{children:"Its contents should look something like this."}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:'#/-------------------.env.vault---------------------/\n#/         cloud-agnostic vaulting standard         /\n#/   [how it works](https://dotenv.org/env-vault)   /\n#/--------------------------------------------------/\n\n# development\nDOTENV_VAULT_DEVELOPMENT="/HqNgQWsf6Oh6XB9pI/CGkdgCe6d4/vWZHgP50RRoDTzkzPQk/xOaQs="\nDOTENV_VAULT_DEVELOPMENT_VERSION=2\n\n# ci\nDOTENV_VAULT_CI="x26PuIKQ/xZ5eKrYomKngM+dO/9v1vxhwslE/zjHdg3l+H6q6PheB5GVDVIbZg=="\nDOTENV_VAULT_CI_VERSION=2\n',children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-token-comment)">#/-------------------.env.vault---------------------/</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/         cloud-agnostic vaulting standard         /</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/   [how it works](https://dotenv.org/env-vault)   /</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/--------------------------------------------------/</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># development</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_DEVELOPMENT=</span><span style="color: var(--shiki-token-string-expression)">&quot;/HqNgQWsf6Oh6XB9pI/CGkdgCe6d4/vWZHgP50RRoDTzkzPQk/xOaQs=&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_DEVELOPMENT_VERSION=2</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># ci</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_CI=</span><span style="color: var(--shiki-token-string-expression)">&quot;x26PuIKQ/xZ5eKrYomKngM+dO/9v1vxhwslE/zjHdg3l+H6q6PheB5GVDVIbZg==&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_CI_VERSION=2</span></span>\n<span></span>'}),title:".env.vault"}),"\n",(0,a.jsx)(s.h2,{id:"set-dotenv-key",children:"Set DOTENV_KEY"}),"\n",(0,a.jsxs)(s.p,{children:["Fetch your CI ",(0,a.jsx)(s.code,{children:"DOTENV_KEY"}),"."]}),"\n",(0,a.jsx)(s.pre,{language:"shell",code:"npx dotenv-vault@latest keys ci\n# outputs: dotenv://:key_4567@dotenv.org/vault/.env.vault?environment=ci\n",children:(0,a.jsx)(s.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest keys ci</span></span>\n<span><span style="color: var(--shiki-token-comment)"># outputs: dotenv://:key_4567@dotenv.org/vault/.env.vault?environment=ci</span></span>\n<span></span>'})}),"\n",(0,a.jsxs)(s.p,{children:["Set ",(0,a.jsx)(s.code,{children:"DOTENV_KEY"})," on CodePipeline."]}),"\n",(0,a.jsx)(r.c,{url:"/assets/img/docs/aws-beanstalk-config-vars.png",www:"console.aws.com"}),"\n",(0,a.jsx)(s.h2,{id:"build-ci",children:"Build CI"}),"\n",(0,a.jsx)(s.p,{children:"Commit those changes safely to code and rerun the build."}),"\n",(0,a.jsxs)(s.p,{children:["That's it! On rerun, your ",(0,a.jsx)(s.code,{children:".env.vault"})," file will be decrypted and its CI secrets injected as environment variables â€“ just in time."]}),"\n",(0,a.jsx)(r.c,{url:"/assets/img/docs/aws-beanstalk-logs-vault.png",www:"console.cloud.google.com"}),"\n",(0,a.jsxs)(s.p,{children:["You'll know things worked correctly when you see ",(0,a.jsx)(s.code,{children:"'Loading env from encrypted .env.vault'"})," in your logs. If a ",(0,a.jsx)(s.code,{children:"DOTENV_KEY"})," is not set (for example when developing on your local machine) it will fall back to standard ",(0,a.jsx)(s.a,{href:"https://github.com/motdotla/dotenv",children:"dotenv"})," functionality."]}),"\n",(0,a.jsx)(i.default,{})]})}var h=!0;s.default=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,o.ah)(),n.components);return s?(0,a.jsx)(s,Object.assign({},n,{children:(0,a.jsx)(d,n)})):d(n)}},1490:function(n,s,e){"use strict";e.r(s),e.d(s,{__N_SSG:function(){return t}});var a=e(5893),o=e(1151);function l(n){let s=Object.assign({p:"p"},(0,o.ah)(),n.components),{Note:e}=s;return e||function(n,s){throw Error("Expected "+(s?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Note",!0),(0,a.jsx)(e,{children:(0,a.jsx)(s.p,{children:"You succesfully used the new .env.vault standard to encrypt and deploy your secrets. This is much safer than scattering your secrets across multiple third-party platforms and tools. Whenever you need to add or change a secret, just rebuild your .env.vault file and redeploy."})})}var t=!0;s.default=function(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,o.ah)(),n.components);return s?(0,a.jsx)(s,Object.assign({},n,{children:(0,a.jsx)(l,n)})):l(n)}}},function(n){n.O(0,[5675,9774,2888,179],function(){return n(n.s=6915)}),_N_E=n.O()}]);