(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8334],{6482:function(s,n,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/docs/languages/nodejs/cloud66",function(){return e(4636)}])},5404:function(s,n,e){"use strict";e.d(n,{X:function(){return a}});var o=e(5893);function a(s){return(0,o.jsx)("p",{className:"lead mt-1",children:s.lead})}},9281:function(s,n,e){"use strict";e.d(n,{m:function(){return a}});var o=e(5893);function a(s){return(0,o.jsx)(o.Fragment,{children:(0,o.jsxs)("div",{className:"flex",children:[(0,o.jsx)("div",{className:"flex-grow",children:(0,o.jsxs)("h5",{children:[(0,o.jsx)("a",{href:"/docs#languages",children:"Languages"})," ",s.language?(0,o.jsxs)("span",{children:["â€º ",(0,o.jsx)("a",{href:s.url,children:s.language})]}):(0,o.jsx)("span",{})]})}),(0,o.jsx)("div",{className:"flex flex-shrink justify-end gap-2",children:s.icon})]})})}},1370:function(s,n,e){"use strict";e.d(n,{c:function(){return r}});var o=e(5893),a=e(5675),t=e.n(a);function r(s){return(0,o.jsx)("div",{className:"w-full p-7 bg-zinc-100 dark:bg-zinc-800 border border-zinc-200 dark:border-zinc-700 rounded-md",children:(0,o.jsxs)("div",{className:"border border-zinc-300 dark:border-zinc-800 text-zinc-100 text-sm subpixel-antialiased rounded-lg leading-normal overflow-hidden shadow-lg",children:[(0,o.jsx)("div",{className:"p-0 bg-zinc-200 dark:bg-black border-b border-zinc-300 dark:border-zinc-800",children:(0,o.jsxs)("div",{className:"flex py-1 px-2",children:[(0,o.jsxs)("div",{className:"flex items-center space-x-1.5",children:[(0,o.jsx)("span",{className:"h-2 w-2 bg-red-500/70 dark:bg-red-500/30 rounded-full"}),(0,o.jsx)("span",{className:"h-2 w-2 bg-orange-300/70 dark:bg-orange-300/30 rounded-full"}),(0,o.jsx)("span",{className:"h-2 w-2 bg-green-500/70 dark:bg-green-500/30 rounded-full"})]}),(0,o.jsx)("div",{className:"text-right w-full text-zinc-400 text-xs",children:s.www})]})}),(0,o.jsx)("div",{className:"p-0",children:(0,o.jsx)("a",{href:s.url,target:"_blank",rel:"noreferrer",className:"hover:brightness-105",children:(0,o.jsx)(t(),{src:s.url,width:"0",height:"0",alt:"",className:"p-0 m-0 w-full",unoptimized:!0})})})]})})}},8111:function(s,n,e){"use strict";e.d(n,{D:function(){return a}});var o=e(5893);function a(s){return(0,o.jsx)("svg",{viewBox:"0 0 24 24",fill:"currentColor","aria-hidden":"true",...s,children:(0,o.jsx)("path",{d:"M11.985.317C7.0865 2.716 2.9666.4233 2.9666.4233 1.1064 3.486.216 6.1747 0 8.5272h23.9992c-.2165-2.3514-1.1074-5.0365-2.9665-8.0966 0 0-4.119 2.2905-9.0185-.1073zM5.2196 3.5273c.424 0 .7456.0853.8906.1594l-.1666.6417a1.7877 1.7877 0 0 0-.6865-.1334c-.6485 0-1.152.3871-1.152 1.1823 0 .7157.4282 1.1666 1.1572 1.1666.2464 0 .5202-.0537.6813-.1166l.124.6312c-.1505.0747-.4882.1594-.9282.1594-1.248 0-1.8916-.7751-1.8916-1.7927 0-1.2197.879-1.8979 1.9718-1.8979zm6.3144 0c1.1093 0 1.7145.8217 1.7145 1.8083 0 1.1717-.7179 1.8823-1.7739 1.8823-1.072 0-1.6989-.8006-1.6989-1.8187 0-1.071.6917-1.8719 1.7583-1.8719zm7.8091.0323c.6859 0 1.131.1226 1.4792.3823.3754.2757.6114.7149.6114 1.3458 0 .6837-.2517 1.1562-.6 1.4479-.3808.3125-.9594.4604-1.6666.4604-.424 0-.7244-.026-.928-.0521V3.6336c.2996-.048.6913-.074 1.104-.074zM7.003 3.5867h.8198v2.8947H9.258v.6781H7.003zm7.1779 0h.8208V5.643c0 .615.235.9281.6531.9281.4293 0 .6646-.2972.6646-.928V3.5866h.8156v2.003c0 1.103-.5638 1.6282-1.5073 1.6282-.9109 0-1.4468-.4988-1.4468-1.6385zm-2.6718.5823c-.5504 0-.8708.5212-.8708 1.2166 0 .7013.332 1.1958.877 1.1958.55 0 .8646-.5212.8646-1.2166 0-.6432-.3097-1.1958-.8708-1.1958zm7.9206.0104c-.1824 0-.301.0163-.3708.0323v2.3437c.0698.016.1825.0156.2843.0156.7398.0053 1.2219-.3987 1.2219-1.2541.0053-.744-.4336-1.1375-1.1354-1.1375zM.0052 9.7886c-.281 10.276 11.9798 13.8881 11.9798 13.8881l.0292.0063S24.281 20.0688 23.9951 9.7886h-.001zm10.7684 1.2802a5.5849 5.5849 0 0 1 .326.0083v1.4125c-.2117 0-.4367 0-.7364.024-1.6853.1333-2.434.967-2.6457 1.8842h.0375c.3989-.3983.9613-.628 1.7228-.628 1.36 0 2.5083.93 2.5083 2.5603 0 1.5583-1.2358 2.8384-2.9958 2.8384-2.1588 0-3.2196-1.557-3.2196-3.429 0-1.4736.5618-2.706 1.4353-3.4916.8112-.7125 1.8592-1.099 3.1322-1.1593a5.5849 5.5849 0 0 1 .4354-.0198zm6.9269 0a5.5849 5.5849 0 0 1 .327.0083v1.4125c-.2117 0-.4367 0-.7364.024-1.6853.1333-2.434.967-2.6457 1.8842h.0375c.3989-.3983.9613-.628 1.7228-.628 1.36 0 2.5072.93 2.5072 2.5603 0 1.5583-1.2352 2.8384-2.9947 2.8384-2.1593 0-3.2196-1.557-3.2196-3.429 0-1.4736.5618-2.706 1.4353-3.4916.8112-.7125 1.8592-1.099 3.1322-1.1593a5.5849 5.5849 0 0 1 .4344-.0198zm-8.8477 4.0061c-.512 0-.9356.301-1.1228.7-.0496.096-.075.2423-.075.4593.0373.8336.449 1.5823 1.3103 1.5823h.0125c.6614 0 1.0854-.5928 1.0854-1.3896 0-.7253-.3992-1.352-1.2104-1.352zm6.928 0c-.512 0-.9357.301-1.123.7-.0495.096-.075.2423-.075.4593.0374.8336.4491 1.5823 1.3105 1.5823h.0125c.6613 0 1.0853-.5928 1.0853-1.3896 0-.7253-.3992-1.352-1.2103-1.352Z"})})}},9183:function(s,n,e){"use strict";e.d(n,{q:function(){return a}});var o=e(5893);function a(s){return(0,o.jsx)("svg",{fill:"currentColor",viewBox:"0 0 24 24",...s,children:(0,o.jsx)("path",{d:"M11.998,24c-0.321,0-0.641-0.084-0.922-0.247l-2.936-1.737c-0.438-0.245-0.224-0.332-0.08-0.383 c0.585-0.203,0.703-0.25,1.328-0.604c0.065-0.037,0.151-0.023,0.218,0.017l2.256,1.339c0.082,0.045,0.197,0.045,0.272,0l8.795-5.076 c0.082-0.047,0.134-0.141,0.134-0.238V6.921c0-0.099-0.053-0.192-0.137-0.242l-8.791-5.072c-0.081-0.047-0.189-0.047-0.271,0 L3.075,6.68C2.99,6.729,2.936,6.825,2.936,6.921v10.15c0,0.097,0.054,0.189,0.139,0.235l2.409,1.392 c1.307,0.654,2.108-0.116,2.108-0.89V7.787c0-0.142,0.114-0.253,0.256-0.253h1.115c0.139,0,0.255,0.112,0.255,0.253v10.021 c0,1.745-0.95,2.745-2.604,2.745c-0.508,0-0.909,0-2.026-0.551L2.28,18.675c-0.57-0.329-0.922-0.945-0.922-1.604V6.921 c0-0.659,0.353-1.275,0.922-1.603l8.795-5.082c0.557-0.315,1.296-0.315,1.848,0l8.794,5.082c0.57,0.329,0.924,0.944,0.924,1.603 v10.15c0,0.659-0.354,1.273-0.924,1.604l-8.794,5.078C12.643,23.916,12.324,24,11.998,24z M19.099,13.993 c0-1.9-1.284-2.406-3.987-2.763c-2.731-0.361-3.009-0.548-3.009-1.187c0-0.528,0.235-1.233,2.258-1.233 c1.807,0,2.473,0.389,2.747,1.607c0.024,0.115,0.129,0.199,0.247,0.199h1.141c0.071,0,0.138-0.031,0.186-0.081 c0.048-0.054,0.074-0.123,0.067-0.196c-0.177-2.098-1.571-3.076-4.388-3.076c-2.508,0-4.004,1.058-4.004,2.833 c0,1.925,1.488,2.457,3.895,2.695c2.88,0.282,3.103,0.703,3.103,1.269c0,0.983-0.789,1.402-2.642,1.402 c-2.327,0-2.839-0.584-3.011-1.742c-0.02-0.124-0.126-0.215-0.253-0.215h-1.137c-0.141,0-0.254,0.112-0.254,0.253 c0,1.482,0.806,3.248,4.655,3.248C17.501,17.007,19.099,15.91,19.099,13.993z"})})}},4636:function(s,n,e){"use strict";e.r(n),e.d(n,{__N_SSG:function(){return h}});var o=e(5893),a=e(1151),t=e(5404),r=e(9281),l=e(1370),c=e(1490),i=e(8111),p=e(9183);function d(s){let n=Object.assign({h1:"h1",p:"p",h2:"h2",code:"code",pre:"pre",a:"a"},(0,a.ah)(),s.components),{Note:e}=n;return e||function(s,n){throw Error("Expected "+(n?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}("Note",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(r.m,{language:"Node.js",url:"/docs/languages/nodejs",icon:(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(p.q,{className:"h-9 w-9 text-[#339933]"}),(0,o.jsx)(i.D,{className:"h-9 w-9 text-[#3C72B9]"})]})}),"\n",(0,o.jsx)(n.h1,{children:"Deploy a Node.js App with Cloud66"}),"\n",(0,o.jsx)(t.X,{lead:"Deploy a Node.js app with an encrypted .env.vault file on Cloud66."}),"\n",(0,o.jsx)(e,{children:(0,o.jsxs)(n.p,{children:["Find a complete ",(0,o.jsx)("a",{href:"https://github.com/dotenv-org/examples/tree/master/nodejs/cloud66",children:"code example on GitHub"})," for this guide."]})}),"\n",(0,o.jsx)(n.h2,{id:"initial-setup",children:"Initial setup"}),"\n",(0,o.jsxs)(n.p,{children:["Create an ",(0,o.jsx)(n.code,{children:"index.js"})," file, if you haven't already done so."]}),"\n",(0,o.jsx)(n.pre,{language:"js",code:"// index.js\nconst PORT = process.env.PORT || 3000\nconst http = require('http')\nconst server = http.createServer((req, res) => {\n  res.statusCode = 200\n  res.setHeader('Content-Type', 'text/plain')\n  res.end(`Hello ${process.env.HELLO}`)\n})\n\nserver.listen(PORT, () => {\n  console.log(`Server running on port:${PORT}/`)\n})\n",children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// index.js</span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3000</span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">http</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;http&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">server</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">http</span><span style="color: var(--shiki-token-function)">.createServer</span><span style="color: var(--shiki-color-text)">((req</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> res) </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">res</span><span style="color: var(--shiki-color-text)">.statusCode </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">200</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">res</span><span style="color: var(--shiki-token-function)">.setHeader</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;Content-Type&#39;</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;text/plain&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">res</span><span style="color: var(--shiki-token-function)">.end</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">`Hello </span><span style="color: var(--shiki-token-keyword)">${</span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">HELLO</span><span style="color: var(--shiki-token-keyword)">}</span><span style="color: var(--shiki-token-string-expression)">`</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-color-text)">})</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-constant)">server</span><span style="color: var(--shiki-token-function)">.listen</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-token-punctuation)">,</span><span style="color: var(--shiki-color-text)"> () </span><span style="color: var(--shiki-token-keyword)">=&gt;</span><span style="color: var(--shiki-color-text)"> {</span></span>\n<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">`Server running on port:</span><span style="color: var(--shiki-token-keyword)">${</span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-token-keyword)">}</span><span style="color: var(--shiki-token-string-expression)">/`</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-color-text)">})</span></span>\n<span></span>'}),title:"index.js"}),"\n",(0,o.jsxs)(n.p,{children:["Add an empty ",(0,o.jsx)(n.code,{children:"package.json"})," file (needed for the Docker build)."]}),"\n",(0,o.jsx)(n.pre,{language:"json",code:"{}\n",children:(0,o.jsx)(n.code,{className:"language-json",children:'<span><span style="color: var(--shiki-color-text)">{}</span></span>\n<span></span>'}),title:"package.json"}),"\n",(0,o.jsxs)(n.p,{children:["Add a ",(0,o.jsx)(n.code,{children:"Dockerfile"}),"."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"# Dockerfile\nFROM node:16\nWORKDIR /usr/src/app\nCOPY package*.json ./\nRUN npm install\nCOPY . .\nEXPOSE 3000\nCMD node index.js\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-token-comment)"># Dockerfile</span></span>\n<span><span style="color: var(--shiki-color-text)">FROM node:16</span></span>\n<span><span style="color: var(--shiki-color-text)">WORKDIR /usr/src/app</span></span>\n<span><span style="color: var(--shiki-color-text)">COPY package</span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)">.json ./</span></span>\n<span><span style="color: var(--shiki-color-text)">RUN npm install</span></span>\n<span><span style="color: var(--shiki-color-text)">COPY </span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">.</span></span>\n<span><span style="color: var(--shiki-color-text)">EXPOSE 3000</span></span>\n<span><span style="color: var(--shiki-color-text)">CMD node index.js</span></span>\n<span></span>'}),title:"Dockerfile"}),"\n",(0,o.jsxs)(n.p,{children:["Commit that to code, push it up to GitHub, and connect it to your ",(0,o.jsx)(n.a,{href:"https://cloud66.com",children:"Cloud66"})," account."]}),"\n",(0,o.jsx)(l.c,{url:"/assets/img/docs/cloud66-step1.png",www:"app.cloud66.com"}),"\n",(0,o.jsxs)(n.p,{children:["On the next screen, make sure to set the local port to ",(0,o.jsx)(n.code,{children:"3000"}),", http to ",(0,o.jsx)(n.code,{children:"80"}),", https to ",(0,o.jsx)(n.code,{children:"443"}),"."]}),"\n",(0,o.jsx)(l.c,{url:"/assets/img/docs/cloud66-set-port.gif",www:"app.cloud66.com"}),"\n",(0,o.jsx)(n.p,{children:"Confirm everything looks good and click 'Start Deployment'."}),"\n",(0,o.jsx)(l.c,{url:"/assets/img/docs/cloud66-step3.png",www:"app.cloud66.com"}),"\n",(0,o.jsx)(n.p,{children:"Visit your app."}),"\n",(0,o.jsx)(l.c,{url:"/assets/img/docs/hello-undefined.png",www:"yourapp running on cloud66"}),"\n",(0,o.jsxs)(n.p,{children:["Once deployed, your app will say ",(0,o.jsx)(n.code,{children:"'Hello undefined'"})," as it doesnâ€™t have a way to access the environment variable yet. Letâ€™s do that next."]}),"\n",(0,o.jsx)(n.h2,{id:"install-dotenv",children:"Install dotenv"}),"\n",(0,o.jsxs)(n.p,{children:["Install ",(0,o.jsx)(n.a,{href:"https://github.com/motdotla/dotenv",children:(0,o.jsx)(n.code,{children:"dotenv"})}),"."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npm install dotenv --save # Requires dotenv >= 16.1.0\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npm install dotenv --save </span><span style="color: var(--shiki-token-comment)"># Requires dotenv &gt;= 16.1.0</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(n.p,{children:["Create a ",(0,o.jsx)(n.code,{children:".env"})," file in the root of your project."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:'# .env\nHELLO="World"\n',children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-token-comment)"># .env</span></span>\n<span><span style="color: var(--shiki-color-text)">HELLO=</span><span style="color: var(--shiki-token-string-expression)">&quot;World&quot;</span></span>\n<span></span>'}),title:".env"}),"\n",(0,o.jsx)(n.p,{children:"As early as possible in your application, import and configure dotenv."}),"\n",(0,o.jsx)(n.pre,{language:"js",code:"// index.js\nrequire('dotenv').config()\nconsole.log(process.env) // remove this after you've confirmed it is working\n\nconst PORT = process.env.PORT || 3000\nconst http = require('http')\n...\n",children:(0,o.jsx)(n.code,{className:"language-js",children:'<span><span style="color: var(--shiki-token-comment)">// index.js</span></span>\n<span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;dotenv&#39;</span><span style="color: var(--shiki-color-text)">)</span><span style="color: var(--shiki-token-function)">.config</span><span style="color: var(--shiki-color-text)">()</span></span>\n<span><span style="color: var(--shiki-token-constant)">console</span><span style="color: var(--shiki-token-function)">.log</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.env) </span><span style="color: var(--shiki-token-comment)">// remove this after you&#39;ve confirmed it is working</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">process</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">env</span><span style="color: var(--shiki-color-text)">.</span><span style="color: var(--shiki-token-constant)">PORT</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">3000</span></span>\n<span><span style="color: var(--shiki-token-keyword)">const</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">http</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">=</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">require</span><span style="color: var(--shiki-color-text)">(</span><span style="color: var(--shiki-token-string-expression)">&#39;http&#39;</span><span style="color: var(--shiki-color-text)">)</span></span>\n<span><span style="color: var(--shiki-token-keyword)">...</span></span>\n<span></span>'}),title:"index.js"}),"\n",(0,o.jsx)(n.p,{children:"Try running it locally."}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"docker build -t docker-nodejs . && docker run --rm -it -p 3000:3000 --init docker-nodejs\n{\n  ...\n  HELLO: 'World'\n}\nServer running on port:3000/\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">docker build -t docker-nodejs </span><span style="color: var(--shiki-token-function)">.</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&amp;&amp;</span><span style="color: var(--shiki-color-text)"> docker run --rm -it -p 3000:3000 --init docker-nodejs</span></span>\n<span><span style="color: var(--shiki-color-text)">{</span></span>\n<span><span style="color: var(--shiki-color-text)">  ...</span></span>\n<span><span style="color: var(--shiki-color-text)">  HELLO: </span><span style="color: var(--shiki-token-string-expression)">&#39;World&#39;</span></span>\n<span><span style="color: var(--shiki-color-text)">}</span></span>\n<span><span style="color: var(--shiki-color-text)">Server running on port:3000/</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(n.p,{children:["Perfect. ",(0,o.jsx)(n.code,{children:"process.env"})," now has the keys and values you defined in your ",(0,o.jsx)(n.code,{children:".env"})," file."]}),"\n",(0,o.jsx)(l.c,{url:"/assets/img/docs/nextjs-hello-world.png",www:"localhost"}),"\n",(0,o.jsx)(n.p,{children:"That covers the local development build. Let's solve for production next."}),"\n",(0,o.jsx)(n.h2,{id:"build-env-vault",children:"Build .env.vault"}),"\n",(0,o.jsxs)(n.p,{children:["Push your latest ",(0,o.jsx)(n.code,{children:".env"})," file changes and edit your production secrets. ",(0,o.jsx)(n.a,{href:"/docs/tutorials/sync",children:"Learn more about syncing"})]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npx dotenv-vault@latest push\nnpx dotenv-vault@latest open production\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest push</span></span>\n<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest open production</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(n.p,{children:"Use the UI to configure those secrets per environment."}),"\n",(0,o.jsx)(l.c,{url:"/assets/img/docs/edit-production-value.gif",www:"www.dotenv.org"}),"\n",(0,o.jsxs)(n.p,{children:["Then build your encrypted ",(0,o.jsx)(n.code,{children:".env.vault"})," file."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npx dotenv-vault@latest build\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest build</span></span>\n<span></span>'})}),"\n",(0,o.jsx)(n.p,{children:"Its contents should look something like this."}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:'#/-------------------.env.vault---------------------/\n#/         cloud-agnostic vaulting standard         /\n#/   [how it works](https://dotenv.org/env-vault)   /\n#/--------------------------------------------------/\n\n# development\nDOTENV_VAULT_DEVELOPMENT="/HqNgQWsf6Oh6XB9pI/CGkdgCe6d4/vWZHgP50RRoDTzkzPQk/xOaQs="\nDOTENV_VAULT_DEVELOPMENT_VERSION=2\n\n# production\nDOTENV_VAULT_PRODUCTION="x26PuIKQ/xZ5eKrYomKngM+dO/9v1vxhwslE/zjHdg3l+H6q6PheB5GVDVIbZg=="\nDOTENV_VAULT_PRODUCTION_VERSION=2\n',children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-token-comment)">#/-------------------.env.vault---------------------/</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/         cloud-agnostic vaulting standard         /</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/   [how it works](https://dotenv.org/env-vault)   /</span></span>\n<span><span style="color: var(--shiki-token-comment)">#/--------------------------------------------------/</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># development</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_DEVELOPMENT=</span><span style="color: var(--shiki-token-string-expression)">&quot;/HqNgQWsf6Oh6XB9pI/CGkdgCe6d4/vWZHgP50RRoDTzkzPQk/xOaQs=&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_DEVELOPMENT_VERSION=2</span></span>\n<span></span>\n<span><span style="color: var(--shiki-token-comment)"># production</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_PRODUCTION=</span><span style="color: var(--shiki-token-string-expression)">&quot;x26PuIKQ/xZ5eKrYomKngM+dO/9v1vxhwslE/zjHdg3l+H6q6PheB5GVDVIbZg==&quot;</span></span>\n<span><span style="color: var(--shiki-color-text)">DOTENV_VAULT_PRODUCTION_VERSION=2</span></span>\n<span></span>'}),title:".env.vault"}),"\n",(0,o.jsx)(n.h2,{id:"set-dotenv-key",children:"Set DOTENV_KEY"}),"\n",(0,o.jsxs)(n.p,{children:["Fetch your production ",(0,o.jsx)(n.code,{children:"DOTENV_KEY"}),"."]}),"\n",(0,o.jsx)(n.pre,{language:"shell",code:"npx dotenv-vault@latest keys production\n# outputs: dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production\n",children:(0,o.jsx)(n.code,{className:"language-shell",children:'<span><span style="color: var(--shiki-color-text)">npx dotenv-vault@latest keys production</span></span>\n<span><span style="color: var(--shiki-token-comment)"># outputs: dotenv://:key_1234@dotenv.org/vault/.env.vault?environment=production</span></span>\n<span></span>'})}),"\n",(0,o.jsxs)(n.p,{children:["Set ",(0,o.jsx)(n.code,{children:"DOTENV_KEY"})," on Cloud66."]}),"\n",(0,o.jsx)(l.c,{url:"/assets/img/docs/cloud66-config-vars.png",www:"app.cloud66.com"}),"\n",(0,o.jsx)(n.h2,{id:"deploy",children:"Deploy"}),"\n",(0,o.jsx)(n.p,{children:"Commit those changes safely to code and deploy."}),"\n",(0,o.jsxs)(n.p,{children:["That's it! On deploy, your ",(0,o.jsx)(n.code,{children:".env.vault"})," file will be decrypted and its production secrets injected as environment variables â€“ just in time."]}),"\n",(0,o.jsx)(l.c,{url:"/assets/img/docs/hello-production.png"}),"\n",(0,o.jsxs)(n.p,{children:["You'll know things worked correctly when you see ",(0,o.jsx)(n.code,{children:"'Loading env from encrypted .env.vault'"})," in your logs. If a ",(0,o.jsx)(n.code,{children:"DOTENV_KEY"})," is not set (for example when developing on your local machine) it will fall back to standard ",(0,o.jsx)(n.a,{href:"https://github.com/motdotla/dotenv",children:"dotenv"})," functionality."]}),"\n",(0,o.jsx)(l.c,{url:"/assets/img/docs/cloud66-logs-vault.png",www:"app.cloud66.com"}),"\n",(0,o.jsx)(c.default,{})]})}var h=!0;n.default=function(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),s.components);return n?(0,o.jsx)(n,Object.assign({},s,{children:(0,o.jsx)(d,s)})):d(s)}},1490:function(s,n,e){"use strict";e.r(n),e.d(n,{__N_SSG:function(){return r}});var o=e(5893),a=e(1151);function t(s){let n=Object.assign({p:"p"},(0,a.ah)(),s.components),{Note:e}=n;return e||function(s,n){throw Error("Expected "+(n?"component":"object")+" `"+s+"` to be defined: you likely forgot to import, pass, or provide it.")}("Note",!0),(0,o.jsx)(e,{children:(0,o.jsx)(n.p,{children:"You succesfully used the new .env.vault standard to encrypt and deploy your secrets. This is much safer than scattering your secrets across multiple third-party platforms and tools. Whenever you need to add or change a secret, just rebuild your .env.vault file and redeploy."})})}var r=!0;n.default=function(){let s=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,a.ah)(),s.components);return n?(0,o.jsx)(n,Object.assign({},s,{children:(0,o.jsx)(t,s)})):t(s)}}},function(s){s.O(0,[5675,9774,2888,179],function(){return s(s.s=6482)}),_N_E=s.O()}]);